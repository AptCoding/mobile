{"dependencies":[{"name":"@trpc/client","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"F7lDHhOULB/+RRe/q4ibaBc/bJA="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":97,"index":151}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"../../internals/context.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":152},"end":{"line":3,"column":59,"index":211}}],"key":"6m2tjKgUYB7pTMmlXgLiVLA+fZU="}},{"name":"../../internals/getQueryKey.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":212},"end":{"line":4,"column":94,"index":306}}],"key":"xfAAWB8frr31M+7LFyVadVBLMw8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createQueryUtilsProxy = createQueryUtilsProxy;\n  exports.createReactQueryUtils = createReactQueryUtils;\n  exports.getQueryType = void 0;\n  var _client = require(_dependencyMap[0], \"@trpc/client\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[1], \"@trpc/server/unstable-core-do-not-import\");\n  var _context = require(_dependencyMap[2], \"../../internals/context.mjs\");\n  var _getQueryKey = require(_dependencyMap[3], \"../../internals/getQueryKey.mjs\");\n  var getQueryType = utilName => {\n    switch (utilName) {\n      case 'queryOptions':\n      case 'fetch':\n      case 'ensureData':\n      case 'prefetch':\n      case 'getData':\n      case 'setData':\n      case 'setQueriesData':\n        return 'query';\n      case 'infiniteQueryOptions':\n      case 'fetchInfinite':\n      case 'prefetchInfinite':\n      case 'getInfiniteData':\n      case 'setInfiniteData':\n        return 'infinite';\n      case 'setMutationDefaults':\n      case 'getMutationDefaults':\n      case 'isMutating':\n      case 'cancel':\n      case 'invalidate':\n      case 'refetch':\n      case 'reset':\n        return 'any';\n    }\n  };\n  /**\n   * @internal\n   */\n  exports.getQueryType = getQueryType;\n  function createRecursiveUtilsProxy(context) {\n    return (0, _unstableCoreDoNotImport.createRecursiveProxy)(opts => {\n      var path = [...opts.path];\n      var utilName = path.pop();\n      var args = [...opts.args];\n      var input = args.shift(); // args can now be spread when input removed\n      var queryType = getQueryType(utilName);\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, queryType);\n      var contextMap = {\n        infiniteQueryOptions: () => context.infiniteQueryOptions(path, queryKey, args[0]),\n        queryOptions: () => context.queryOptions(path, queryKey, ...args),\n        /**\n        * DecorateQueryProcedure\n        */\n        fetch: () => context.fetchQuery(queryKey, ...args),\n        fetchInfinite: () => context.fetchInfiniteQuery(queryKey, args[0]),\n        prefetch: () => context.prefetchQuery(queryKey, ...args),\n        prefetchInfinite: () => context.prefetchInfiniteQuery(queryKey, args[0]),\n        ensureData: () => context.ensureQueryData(queryKey, ...args),\n        invalidate: () => context.invalidateQueries(queryKey, ...args),\n        reset: () => context.resetQueries(queryKey, ...args),\n        refetch: () => context.refetchQueries(queryKey, ...args),\n        cancel: () => context.cancelQuery(queryKey, ...args),\n        setData: () => {\n          context.setQueryData(queryKey, args[0], args[1]);\n        },\n        setQueriesData: () => context.setQueriesData(queryKey, args[0], args[1], args[2]),\n        setInfiniteData: () => {\n          context.setInfiniteQueryData(queryKey, args[0], args[1]);\n        },\n        getData: () => context.getQueryData(queryKey),\n        getInfiniteData: () => context.getInfiniteQueryData(queryKey),\n        /**\n        * DecorateMutationProcedure\n        */\n        setMutationDefaults: () => context.setMutationDefaults((0, _getQueryKey.getMutationKeyInternal)(path), input),\n        getMutationDefaults: () => context.getMutationDefaults((0, _getQueryKey.getMutationKeyInternal)(path)),\n        isMutating: () => context.isMutating({\n          mutationKey: (0, _getQueryKey.getMutationKeyInternal)(path)\n        })\n      };\n      return contextMap[utilName]();\n    });\n  }\n  /**\n   * @internal\n   */\n  function createReactQueryUtils(context) {\n    var clientProxy = (0, _client.createTRPCClientProxy)(context.client);\n    var proxy = createRecursiveUtilsProxy(context);\n    return (0, _unstableCoreDoNotImport.createFlatProxy)(key => {\n      var contextName = key;\n      if (contextName === 'client') {\n        return clientProxy;\n      }\n      if (_context.contextProps.includes(contextName)) {\n        return context[contextName];\n      }\n      return proxy[key];\n    });\n  }\n  /**\n   * @internal\n   */\n  function createQueryUtilsProxy(context) {\n    return createRecursiveUtilsProxy(context);\n  }\n});","lineCount":109,"map":[[8,2,1,0],[8,6,1,0,"_client"],[8,13,1,0],[8,16,1,0,"require"],[8,23,1,0],[8,24,1,0,"_dependencyMap"],[8,38,1,0],[9,2,2,0],[9,6,2,0,"_unstableCoreDoNotImport"],[9,30,2,0],[9,33,2,0,"require"],[9,40,2,0],[9,41,2,0,"_dependencyMap"],[9,55,2,0],[10,2,3,0],[10,6,3,0,"_context"],[10,14,3,0],[10,17,3,0,"require"],[10,24,3,0],[10,25,3,0,"_dependencyMap"],[10,39,3,0],[11,2,4,0],[11,6,4,0,"_getQueryKey"],[11,18,4,0],[11,21,4,0,"require"],[11,28,4,0],[11,29,4,0,"_dependencyMap"],[11,43,4,0],[12,2,6,0],[12,6,6,6,"getQueryType"],[12,18,6,18],[12,21,6,22,"utilName"],[12,29,6,30],[12,33,6,33],[13,4,7,4],[13,12,7,11,"utilName"],[13,20,7,19],[14,6,8,8],[14,11,8,13],[14,25,8,27],[15,6,9,8],[15,11,9,13],[15,18,9,20],[16,6,10,8],[16,11,10,13],[16,23,10,25],[17,6,11,8],[17,11,11,13],[17,21,11,23],[18,6,12,8],[18,11,12,13],[18,20,12,22],[19,6,13,8],[19,11,13,13],[19,20,13,22],[20,6,14,8],[20,11,14,13],[20,27,14,29],[21,8,15,12],[21,15,15,19],[21,22,15,26],[22,6,16,8],[22,11,16,13],[22,33,16,35],[23,6,17,8],[23,11,17,13],[23,26,17,28],[24,6,18,8],[24,11,18,13],[24,29,18,31],[25,6,19,8],[25,11,19,13],[25,28,19,30],[26,6,20,8],[26,11,20,13],[26,28,20,30],[27,8,21,12],[27,15,21,19],[27,25,21,29],[28,6,22,8],[28,11,22,13],[28,32,22,34],[29,6,23,8],[29,11,23,13],[29,32,23,34],[30,6,24,8],[30,11,24,13],[30,23,24,25],[31,6,25,8],[31,11,25,13],[31,19,25,21],[32,6,26,8],[32,11,26,13],[32,23,26,25],[33,6,27,8],[33,11,27,13],[33,20,27,22],[34,6,28,8],[34,11,28,13],[34,18,28,20],[35,8,29,12],[35,15,29,19],[35,20,29,24],[36,4,30,4],[37,2,31,0],[37,3,31,1],[38,2,32,0],[39,0,33,0],[40,0,34,0],[41,2,32,0,"exports"],[41,9,32,0],[41,10,32,0,"getQueryType"],[41,22,32,0],[41,25,32,0,"getQueryType"],[41,37,32,0],[42,2,34,4],[42,11,34,13,"createRecursiveUtilsProxy"],[42,36,34,38,"createRecursiveUtilsProxy"],[42,37,34,39,"context"],[42,44,34,46],[42,46,34,48],[43,4,35,4],[43,11,35,11],[43,15,35,11,"createRecursiveProxy"],[43,60,35,31],[43,62,35,33,"opts"],[43,66,35,37],[43,70,35,40],[44,6,36,8],[44,10,36,14,"path"],[44,14,36,18],[44,17,36,21],[44,18,37,12],[44,21,37,15,"opts"],[44,25,37,19],[44,26,37,20,"path"],[44,30,37,24],[44,31,38,9],[45,6,39,8],[45,10,39,14,"utilName"],[45,18,39,22],[45,21,39,25,"path"],[45,25,39,29],[45,26,39,30,"pop"],[45,29,39,33],[45,30,39,34],[45,31,39,35],[46,6,40,8],[46,10,40,14,"args"],[46,14,40,18],[46,17,40,21],[46,18,41,12],[46,21,41,15,"opts"],[46,25,41,19],[46,26,41,20,"args"],[46,30,41,24],[46,31,42,9],[47,6,43,8],[47,10,43,14,"input"],[47,15,43,19],[47,18,43,22,"args"],[47,22,43,26],[47,23,43,27,"shift"],[47,28,43,32],[47,29,43,33],[47,30,43,34],[47,31,43,35],[47,32,43,36],[48,6,44,8],[48,10,44,14,"queryType"],[48,19,44,23],[48,22,44,26,"getQueryType"],[48,34,44,38],[48,35,44,39,"utilName"],[48,43,44,47],[48,44,44,48],[49,6,45,8],[49,10,45,14,"queryKey"],[49,18,45,22],[49,21,45,25],[49,25,45,25,"getQueryKeyInternal"],[49,57,45,44],[49,59,45,45,"path"],[49,63,45,49],[49,65,45,51,"input"],[49,70,45,56],[49,72,45,58,"queryType"],[49,81,45,67],[49,82,45,68],[50,6,46,8],[50,10,46,14,"contextMap"],[50,20,46,24],[50,23,46,27],[51,8,47,12,"infiniteQueryOptions"],[51,28,47,32],[51,30,47,34,"infiniteQueryOptions"],[51,31,47,34],[51,36,47,38,"context"],[51,43,47,45],[51,44,47,46,"infiniteQueryOptions"],[51,64,47,66],[51,65,47,67,"path"],[51,69,47,71],[51,71,47,73,"queryKey"],[51,79,47,81],[51,81,47,83,"args"],[51,85,47,87],[51,86,47,88],[51,87,47,89],[51,88,47,90],[51,89,47,91],[52,8,48,12,"queryOptions"],[52,20,48,24],[52,22,48,26,"queryOptions"],[52,23,48,26],[52,28,48,30,"context"],[52,35,48,37],[52,36,48,38,"queryOptions"],[52,48,48,50],[52,49,48,51,"path"],[52,53,48,55],[52,55,48,57,"queryKey"],[52,63,48,65],[52,65,48,67],[52,68,48,70,"args"],[52,72,48,74],[52,73,48,75],[53,8,49,12],[54,0,50,0],[55,0,51,0],[56,8,51,10,"fetch"],[56,13,51,15],[56,15,51,17,"fetch"],[56,16,51,17],[56,21,51,21,"context"],[56,28,51,28],[56,29,51,29,"fetchQuery"],[56,39,51,39],[56,40,51,40,"queryKey"],[56,48,51,48],[56,50,51,50],[56,53,51,53,"args"],[56,57,51,57],[56,58,51,58],[57,8,52,12,"fetchInfinite"],[57,21,52,25],[57,23,52,27,"fetchInfinite"],[57,24,52,27],[57,29,52,31,"context"],[57,36,52,38],[57,37,52,39,"fetchInfiniteQuery"],[57,55,52,57],[57,56,52,58,"queryKey"],[57,64,52,66],[57,66,52,68,"args"],[57,70,52,72],[57,71,52,73],[57,72,52,74],[57,73,52,75],[57,74,52,76],[58,8,53,12,"prefetch"],[58,16,53,20],[58,18,53,22,"prefetch"],[58,19,53,22],[58,24,53,26,"context"],[58,31,53,33],[58,32,53,34,"prefetchQuery"],[58,45,53,47],[58,46,53,48,"queryKey"],[58,54,53,56],[58,56,53,58],[58,59,53,61,"args"],[58,63,53,65],[58,64,53,66],[59,8,54,12,"prefetchInfinite"],[59,24,54,28],[59,26,54,30,"prefetchInfinite"],[59,27,54,30],[59,32,54,34,"context"],[59,39,54,41],[59,40,54,42,"prefetchInfiniteQuery"],[59,61,54,63],[59,62,54,64,"queryKey"],[59,70,54,72],[59,72,54,74,"args"],[59,76,54,78],[59,77,54,79],[59,78,54,80],[59,79,54,81],[59,80,54,82],[60,8,55,12,"ensureData"],[60,18,55,22],[60,20,55,24,"ensureData"],[60,21,55,24],[60,26,55,28,"context"],[60,33,55,35],[60,34,55,36,"ensureQueryData"],[60,49,55,51],[60,50,55,52,"queryKey"],[60,58,55,60],[60,60,55,62],[60,63,55,65,"args"],[60,67,55,69],[60,68,55,70],[61,8,56,12,"invalidate"],[61,18,56,22],[61,20,56,24,"invalidate"],[61,21,56,24],[61,26,56,28,"context"],[61,33,56,35],[61,34,56,36,"invalidateQueries"],[61,51,56,53],[61,52,56,54,"queryKey"],[61,60,56,62],[61,62,56,64],[61,65,56,67,"args"],[61,69,56,71],[61,70,56,72],[62,8,57,12,"reset"],[62,13,57,17],[62,15,57,19,"reset"],[62,16,57,19],[62,21,57,23,"context"],[62,28,57,30],[62,29,57,31,"resetQueries"],[62,41,57,43],[62,42,57,44,"queryKey"],[62,50,57,52],[62,52,57,54],[62,55,57,57,"args"],[62,59,57,61],[62,60,57,62],[63,8,58,12,"refetch"],[63,15,58,19],[63,17,58,21,"refetch"],[63,18,58,21],[63,23,58,25,"context"],[63,30,58,32],[63,31,58,33,"refetchQueries"],[63,45,58,47],[63,46,58,48,"queryKey"],[63,54,58,56],[63,56,58,58],[63,59,58,61,"args"],[63,63,58,65],[63,64,58,66],[64,8,59,12,"cancel"],[64,14,59,18],[64,16,59,20,"cancel"],[64,17,59,20],[64,22,59,24,"context"],[64,29,59,31],[64,30,59,32,"cancelQuery"],[64,41,59,43],[64,42,59,44,"queryKey"],[64,50,59,52],[64,52,59,54],[64,55,59,57,"args"],[64,59,59,61],[64,60,59,62],[65,8,60,12,"setData"],[65,15,60,19],[65,17,60,21,"setData"],[65,18,60,21],[65,23,60,25],[66,10,61,16,"context"],[66,17,61,23],[66,18,61,24,"setQueryData"],[66,30,61,36],[66,31,61,37,"queryKey"],[66,39,61,45],[66,41,61,47,"args"],[66,45,61,51],[66,46,61,52],[66,47,61,53],[66,48,61,54],[66,50,61,56,"args"],[66,54,61,60],[66,55,61,61],[66,56,61,62],[66,57,61,63],[66,58,61,64],[67,8,62,12],[67,9,62,13],[68,8,63,12,"setQueriesData"],[68,22,63,26],[68,24,63,28,"setQueriesData"],[68,25,63,28],[68,30,63,32,"context"],[68,37,63,39],[68,38,63,40,"setQueriesData"],[68,52,63,54],[68,53,63,55,"queryKey"],[68,61,63,63],[68,63,63,65,"args"],[68,67,63,69],[68,68,63,70],[68,69,63,71],[68,70,63,72],[68,72,63,74,"args"],[68,76,63,78],[68,77,63,79],[68,78,63,80],[68,79,63,81],[68,81,63,83,"args"],[68,85,63,87],[68,86,63,88],[68,87,63,89],[68,88,63,90],[68,89,63,91],[69,8,64,12,"setInfiniteData"],[69,23,64,27],[69,25,64,29,"setInfiniteData"],[69,26,64,29],[69,31,64,33],[70,10,65,16,"context"],[70,17,65,23],[70,18,65,24,"setInfiniteQueryData"],[70,38,65,44],[70,39,65,45,"queryKey"],[70,47,65,53],[70,49,65,55,"args"],[70,53,65,59],[70,54,65,60],[70,55,65,61],[70,56,65,62],[70,58,65,64,"args"],[70,62,65,68],[70,63,65,69],[70,64,65,70],[70,65,65,71],[70,66,65,72],[71,8,66,12],[71,9,66,13],[72,8,67,12,"getData"],[72,15,67,19],[72,17,67,21,"getData"],[72,18,67,21],[72,23,67,25,"context"],[72,30,67,32],[72,31,67,33,"getQueryData"],[72,43,67,45],[72,44,67,46,"queryKey"],[72,52,67,54],[72,53,67,55],[73,8,68,12,"getInfiniteData"],[73,23,68,27],[73,25,68,29,"getInfiniteData"],[73,26,68,29],[73,31,68,33,"context"],[73,38,68,40],[73,39,68,41,"getInfiniteQueryData"],[73,59,68,61],[73,60,68,62,"queryKey"],[73,68,68,70],[73,69,68,71],[74,8,69,12],[75,0,70,0],[76,0,71,0],[77,8,71,10,"setMutationDefaults"],[77,27,71,29],[77,29,71,31,"setMutationDefaults"],[77,30,71,31],[77,35,71,35,"context"],[77,42,71,42],[77,43,71,43,"setMutationDefaults"],[77,62,71,62],[77,63,71,63],[77,67,71,63,"getMutationKeyInternal"],[77,102,71,85],[77,104,71,86,"path"],[77,108,71,90],[77,109,71,91],[77,111,71,93,"input"],[77,116,71,98],[77,117,71,99],[78,8,72,12,"getMutationDefaults"],[78,27,72,31],[78,29,72,33,"getMutationDefaults"],[78,30,72,33],[78,35,72,37,"context"],[78,42,72,44],[78,43,72,45,"getMutationDefaults"],[78,62,72,64],[78,63,72,65],[78,67,72,65,"getMutationKeyInternal"],[78,102,72,87],[78,104,72,88,"path"],[78,108,72,92],[78,109,72,93],[78,110,72,94],[79,8,73,12,"isMutating"],[79,18,73,22],[79,20,73,24,"isMutating"],[79,21,73,24],[79,26,73,28,"context"],[79,33,73,35],[79,34,73,36,"isMutating"],[79,44,73,46],[79,45,73,47],[80,10,74,20,"mutationKey"],[80,21,74,31],[80,23,74,33],[80,27,74,33,"getMutationKeyInternal"],[80,62,74,55],[80,64,74,56,"path"],[80,68,74,60],[81,8,75,16],[81,9,75,17],[82,6,76,8],[82,7,76,9],[83,6,77,8],[83,13,77,15,"contextMap"],[83,23,77,25],[83,24,77,26,"utilName"],[83,32,77,34],[83,33,77,35],[83,34,77,36],[83,35,77,37],[84,4,78,4],[84,5,78,5],[84,6,78,6],[85,2,79,0],[86,2,80,0],[87,0,81,0],[88,0,82,0],[89,2,82,4],[89,11,82,13,"createReactQueryUtils"],[89,32,82,34,"createReactQueryUtils"],[89,33,82,35,"context"],[89,40,82,42],[89,42,82,44],[90,4,83,4],[90,8,83,10,"clientProxy"],[90,19,83,21],[90,22,83,24],[90,26,83,24,"createTRPCClientProxy"],[90,55,83,45],[90,57,83,46,"context"],[90,64,83,53],[90,65,83,54,"client"],[90,71,83,60],[90,72,83,61],[91,4,84,4],[91,8,84,10,"proxy"],[91,13,84,15],[91,16,84,18,"createRecursiveUtilsProxy"],[91,41,84,43],[91,42,84,44,"context"],[91,49,84,51],[91,50,84,52],[92,4,85,4],[92,11,85,11],[92,15,85,11,"createFlatProxy"],[92,55,85,26],[92,57,85,28,"key"],[92,60,85,31],[92,64,85,34],[93,6,86,8],[93,10,86,14,"contextName"],[93,21,86,25],[93,24,86,28,"key"],[93,27,86,31],[94,6,87,8],[94,10,87,12,"contextName"],[94,21,87,23],[94,26,87,28],[94,34,87,36],[94,36,87,38],[95,8,88,12],[95,15,88,19,"clientProxy"],[95,26,88,30],[96,6,89,8],[97,6,90,8],[97,10,90,12,"contextProps"],[97,31,90,24],[97,32,90,25,"includes"],[97,40,90,33],[97,41,90,34,"contextName"],[97,52,90,45],[97,53,90,46],[97,55,90,48],[98,8,91,12],[98,15,91,19,"context"],[98,22,91,26],[98,23,91,27,"contextName"],[98,34,91,38],[98,35,91,39],[99,6,92,8],[100,6,93,8],[100,13,93,15,"proxy"],[100,18,93,20],[100,19,93,21,"key"],[100,22,93,24],[100,23,93,25],[101,4,94,4],[101,5,94,5],[101,6,94,6],[102,2,95,0],[103,2,96,0],[104,0,97,0],[105,0,98,0],[106,2,98,4],[106,11,98,13,"createQueryUtilsProxy"],[106,32,98,34,"createQueryUtilsProxy"],[106,33,98,35,"context"],[106,40,98,42],[106,42,98,44],[107,4,99,4],[107,11,99,11,"createRecursiveUtilsProxy"],[107,36,99,36],[107,37,99,37,"context"],[107,44,99,44],[107,45,99,45],[108,2,100,0],[109,0,100,1],[109,3]],"functionMap":{"names":["<global>","getQueryType","createRecursiveUtilsProxy","createRecursiveProxy$argument_0","contextMap.infiniteQueryOptions","contextMap.queryOptions","contextMap.fetch","contextMap.fetchInfinite","contextMap.prefetch","contextMap.prefetchInfinite","contextMap.ensureData","contextMap.invalidate","contextMap.reset","contextMap.refetch","contextMap.cancel","contextMap.setData","contextMap.setQueriesData","contextMap.setInfiniteData","contextMap.getData","contextMap.getInfiniteData","contextMap.setMutationDefaults","contextMap.getMutationDefaults","contextMap.isMutating","createReactQueryUtils","createFlatProxy$argument_0","createQueryUtilsProxy"],"mappings":"AAA;qBCK;CDyB;IEG;gCCC;kCCY,yDD;0BEC,iDF;iBGG,yCH;2BIC,iDJ;sBKC,4CL;8BMC,oDN;wBOC,8CP;wBQC,gDR;mBSC,2CT;qBUC,6CV;oBWC,0CX;qBYC;aZE;4BaC,+Db;6BcC;adE;qBeC,kCf;6BgBC,0ChB;+BiBG,oEjB;iCkBC,6DlB;wBmBC;kBnBE;KDG;CFC;IuBG;2BCG;KDS;CvBC;IyBG;CzBE"}},"type":"js/module"}]}