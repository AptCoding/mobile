{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":195,"column":0,"index":7394}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":195,"column":0,"index":7394}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@tanstack/react-query","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":86,"index":86}}],"key":"67ISVYMo1RFOUYqthAT6DxIQ3Aw="}},{"name":"@trpc/client","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":87},"end":{"line":2,"column":67,"index":154}}],"key":"F7lDHhOULB/+RRe/q4ibaBc/bJA="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":155},"end":{"line":3,"column":75,"index":230}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"../internals/getClientArgs.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":231},"end":{"line":4,"column":63,"index":294}}],"key":"UJNhWv7PoE+HTbcA2t1hau1qP+o="}},{"name":"../internals/trpcResult.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":295},"end":{"line":5,"column":99,"index":394}}],"key":"c8io7io8lNZwzTI4aTzK2CIVz0w="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createUtilityFunctions = createUtilityFunctions;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _reactQuery = require(_dependencyMap[2], \"@tanstack/react-query\");\n  var _client = require(_dependencyMap[3], \"@trpc/client\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[4], \"@trpc/server/unstable-core-do-not-import\");\n  var _getClientArgs = require(_dependencyMap[5], \"../internals/getClientArgs.mjs\");\n  var _trpcResult = require(_dependencyMap[6], \"../internals/trpcResult.mjs\");\n  /**\n   * Creates a set of utility functions that can be used to interact with `react-query`\n   * @param opts the `TRPCClient` and `QueryClient` to use\n   * @returns a set of utility functions that can be used to interact with `react-query`\n   * @internal\n   */\n  function createUtilityFunctions(opts) {\n    var client = opts.client,\n      queryClient = opts.queryClient;\n    var untypedClient = client instanceof _client.TRPCUntypedClient ? client : (0, _client.getUntypedClient)(client);\n    return {\n      infiniteQueryOptions: (path, queryKey, opts) => {\n        var inputIsSkipToken = queryKey[1]?.input === _reactQuery.skipToken;\n        var queryFn = /*#__PURE__*/function () {\n          var _ref = (0, _asyncToGenerator2.default)(function* (queryFnContext) {\n            var actualOpts = {\n              ...opts,\n              trpc: {\n                ...opts?.trpc,\n                ...(opts?.trpc?.abortOnUnmount ? {\n                  signal: queryFnContext.signal\n                } : {\n                  signal: null\n                })\n              }\n            };\n            var result = yield untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts, {\n              direction: queryFnContext.direction,\n              pageParam: queryFnContext.pageParam\n            }));\n            return result;\n          });\n          return function queryFn(_x) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n        return Object.assign((0, _reactQuery.infiniteQueryOptions)({\n          ...opts,\n          initialData: opts?.initialData,\n          queryKey,\n          queryFn: inputIsSkipToken ? _reactQuery.skipToken : queryFn,\n          initialPageParam: opts?.initialCursor ?? null\n        }), {\n          trpc: (0, _trpcResult.createTRPCOptionsResult)({\n            path\n          })\n        });\n      },\n      queryOptions: (path, queryKey, opts) => {\n        var inputIsSkipToken = queryKey[1]?.input === _reactQuery.skipToken;\n        var queryFn = /*#__PURE__*/function () {\n          var _ref2 = (0, _asyncToGenerator2.default)(function* (queryFnContext) {\n            var actualOpts = {\n              ...opts,\n              trpc: {\n                ...opts?.trpc,\n                ...(opts?.trpc?.abortOnUnmount ? {\n                  signal: queryFnContext.signal\n                } : {\n                  signal: null\n                })\n              }\n            };\n            var result = yield untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts));\n            if ((0, _unstableCoreDoNotImport.isAsyncIterable)(result)) {\n              return (0, _trpcResult.buildQueryFromAsyncIterable)(result, queryClient, queryKey);\n            }\n            return result;\n          });\n          return function queryFn(_x2) {\n            return _ref2.apply(this, arguments);\n          };\n        }();\n        return Object.assign((0, _reactQuery.queryOptions)({\n          ...opts,\n          initialData: opts?.initialData,\n          queryKey,\n          queryFn: inputIsSkipToken ? _reactQuery.skipToken : queryFn\n        }), {\n          trpc: (0, _trpcResult.createTRPCOptionsResult)({\n            path\n          })\n        });\n      },\n      fetchQuery: (queryKey, opts) => {\n        return queryClient.fetchQuery({\n          ...opts,\n          queryKey,\n          queryFn: () => untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, opts))\n        });\n      },\n      fetchInfiniteQuery: (queryKey, opts) => {\n        return queryClient.fetchInfiniteQuery({\n          ...opts,\n          queryKey,\n          queryFn: _ref3 => {\n            var pageParam = _ref3.pageParam,\n              direction = _ref3.direction;\n            return untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, opts, {\n              pageParam,\n              direction\n            }));\n          },\n          initialPageParam: opts?.initialCursor ?? null\n        });\n      },\n      prefetchQuery: (queryKey, opts) => {\n        return queryClient.prefetchQuery({\n          ...opts,\n          queryKey,\n          queryFn: () => untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, opts))\n        });\n      },\n      prefetchInfiniteQuery: (queryKey, opts) => {\n        return queryClient.prefetchInfiniteQuery({\n          ...opts,\n          queryKey,\n          queryFn: _ref4 => {\n            var pageParam = _ref4.pageParam,\n              direction = _ref4.direction;\n            return untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, opts, {\n              pageParam,\n              direction\n            }));\n          },\n          initialPageParam: opts?.initialCursor ?? null\n        });\n      },\n      ensureQueryData: (queryKey, opts) => {\n        return queryClient.ensureQueryData({\n          ...opts,\n          queryKey,\n          queryFn: () => untypedClient.query(...(0, _getClientArgs.getClientArgs)(queryKey, opts))\n        });\n      },\n      invalidateQueries: (queryKey, filters, options) => {\n        return queryClient.invalidateQueries({\n          ...filters,\n          queryKey\n        }, options);\n      },\n      resetQueries: (queryKey, filters, options) => {\n        return queryClient.resetQueries({\n          ...filters,\n          queryKey\n        }, options);\n      },\n      refetchQueries: (queryKey, filters, options) => {\n        return queryClient.refetchQueries({\n          ...filters,\n          queryKey\n        }, options);\n      },\n      cancelQuery: (queryKey, options) => {\n        return queryClient.cancelQueries({\n          queryKey\n        }, options);\n      },\n      setQueryData: (queryKey, updater, options) => {\n        return queryClient.setQueryData(queryKey, updater, options);\n      },\n      // eslint-disable-next-line max-params\n      setQueriesData: (queryKey, filters, updater, options) => {\n        return queryClient.setQueriesData({\n          ...filters,\n          queryKey\n        }, updater, options);\n      },\n      getQueryData: queryKey => {\n        return queryClient.getQueryData(queryKey);\n      },\n      setInfiniteQueryData: (queryKey, updater, options) => {\n        return queryClient.setQueryData(queryKey, updater, options);\n      },\n      getInfiniteQueryData: queryKey => {\n        return queryClient.getQueryData(queryKey);\n      },\n      setMutationDefaults: (mutationKey, options) => {\n        var path = mutationKey[0];\n        var canonicalMutationFn = input => {\n          return untypedClient.mutation(...(0, _getClientArgs.getClientArgs)([path, {\n            input\n          }], opts));\n        };\n        return queryClient.setMutationDefaults(mutationKey, typeof options === 'function' ? options({\n          canonicalMutationFn\n        }) : options);\n      },\n      getMutationDefaults: mutationKey => {\n        return queryClient.getMutationDefaults(mutationKey);\n      },\n      isMutating: filters => {\n        return queryClient.isMutating({\n          ...filters,\n          exact: true\n        });\n      }\n    };\n  }\n});","lineCount":212,"map":[[8,2,1,0],[8,6,1,0,"_reactQuery"],[8,17,1,0],[8,20,1,0,"require"],[8,27,1,0],[8,28,1,0,"_dependencyMap"],[8,42,1,0],[9,2,2,0],[9,6,2,0,"_client"],[9,13,2,0],[9,16,2,0,"require"],[9,23,2,0],[9,24,2,0,"_dependencyMap"],[9,38,2,0],[10,2,3,0],[10,6,3,0,"_unstableCoreDoNotImport"],[10,30,3,0],[10,33,3,0,"require"],[10,40,3,0],[10,41,3,0,"_dependencyMap"],[10,55,3,0],[11,2,4,0],[11,6,4,0,"_getClientArgs"],[11,20,4,0],[11,23,4,0,"require"],[11,30,4,0],[11,31,4,0,"_dependencyMap"],[11,45,4,0],[12,2,5,0],[12,6,5,0,"_trpcResult"],[12,17,5,0],[12,20,5,0,"require"],[12,27,5,0],[12,28,5,0,"_dependencyMap"],[12,42,5,0],[13,2,7,0],[14,0,8,0],[15,0,9,0],[16,0,10,0],[17,0,11,0],[18,0,12,0],[19,2,12,4],[19,11,12,13,"createUtilityFunctions"],[19,33,12,35,"createUtilityFunctions"],[19,34,12,36,"opts"],[19,38,12,40],[19,40,12,42],[20,4,13,4],[20,8,13,12,"client"],[20,14,13,18],[20,17,13,36,"opts"],[20,21,13,40],[20,22,13,12,"client"],[20,28,13,18],[21,6,13,20,"queryClient"],[21,17,13,31],[21,20,13,36,"opts"],[21,24,13,40],[21,25,13,20,"queryClient"],[21,36,13,31],[22,4,14,4],[22,8,14,10,"untypedClient"],[22,21,14,23],[22,24,14,26,"client"],[22,30,14,32],[22,42,14,44,"TRPCUntypedClient"],[22,67,14,61],[22,70,14,64,"client"],[22,76,14,70],[22,79,14,73],[22,83,14,73,"getUntypedClient"],[22,107,14,89],[22,109,14,90,"client"],[22,115,14,96],[22,116,14,97],[23,4,15,4],[23,11,15,11],[24,6,16,8,"infiniteQueryOptions"],[24,26,16,28],[24,28,16,30,"infiniteQueryOptions"],[24,29,16,31,"path"],[24,33,16,35],[24,35,16,37,"queryKey"],[24,43,16,45],[24,45,16,47,"opts"],[24,49,16,51],[24,54,16,54],[25,8,17,12],[25,12,17,18,"inputIsSkipToken"],[25,28,17,34],[25,31,17,37,"queryKey"],[25,39,17,45],[25,40,17,46],[25,41,17,47],[25,42,17,48],[25,44,17,50,"input"],[25,49,17,55],[25,54,17,60,"skipToken"],[25,75,17,69],[26,8,18,12],[26,12,18,18,"queryFn"],[26,19,18,25],[27,10,18,25],[27,14,18,25,"_ref"],[27,18,18,25],[27,25,18,25,"_asyncToGenerator2"],[27,43,18,25],[27,44,18,25,"default"],[27,51,18,25],[27,53,18,28],[27,64,18,35,"queryFnContext"],[27,78,18,49],[27,80,18,52],[28,12,19,16],[28,16,19,22,"actualOpts"],[28,26,19,32],[28,29,19,35],[29,14,20,20],[29,17,20,23,"opts"],[29,21,20,27],[30,14,21,20,"trpc"],[30,18,21,24],[30,20,21,26],[31,16,22,24],[31,19,22,27,"opts"],[31,23,22,31],[31,25,22,33,"trpc"],[31,29,22,37],[32,16,23,24],[32,20,23,27,"opts"],[32,24,23,31],[32,26,23,33,"trpc"],[32,30,23,37],[32,32,23,39,"abortOnUnmount"],[32,46,23,53],[32,49,23,56],[33,18,24,28,"signal"],[33,24,24,34],[33,26,24,36,"queryFnContext"],[33,40,24,50],[33,41,24,51,"signal"],[34,16,25,24],[34,17,25,25],[34,20,25,28],[35,18,26,28,"signal"],[35,24,26,34],[35,26,26,36],[36,16,27,24],[36,17,27,25],[37,14,28,20],[38,12,29,16],[38,13,29,17],[39,12,30,16],[39,16,30,22,"result"],[39,22,30,28],[39,31,30,37,"untypedClient"],[39,44,30,50],[39,45,30,51,"query"],[39,50,30,56],[39,51,30,57],[39,54,30,60],[39,58,30,60,"getClientArgs"],[39,86,30,73],[39,88,30,74,"queryKey"],[39,96,30,82],[39,98,30,84,"actualOpts"],[39,108,30,94],[39,110,30,96],[40,14,31,20,"direction"],[40,23,31,29],[40,25,31,31,"queryFnContext"],[40,39,31,45],[40,40,31,46,"direction"],[40,49,31,55],[41,14,32,20,"pageParam"],[41,23,32,29],[41,25,32,31,"queryFnContext"],[41,39,32,45],[41,40,32,46,"pageParam"],[42,12,33,16],[42,13,33,17],[42,14,33,18],[42,15,33,19],[43,12,34,16],[43,19,34,23,"result"],[43,25,34,29],[44,10,35,12],[44,11,35,13],[45,10,35,13],[45,26,18,18,"queryFn"],[45,33,18,25,"queryFn"],[45,34,18,25,"_x"],[45,36,18,25],[46,12,18,25],[46,19,18,25,"_ref"],[46,23,18,25],[46,24,18,25,"apply"],[46,29,18,25],[46,36,18,25,"arguments"],[46,45,18,25],[47,10,18,25],[48,8,18,25],[48,11,35,13],[49,8,36,12],[49,15,36,19,"Object"],[49,21,36,25],[49,22,36,26,"assign"],[49,28,36,32],[49,29,36,33],[49,33,36,33,"infiniteQueryOptions"],[49,65,36,53],[49,67,36,54],[50,10,37,16],[50,13,37,19,"opts"],[50,17,37,23],[51,10,38,16,"initialData"],[51,21,38,27],[51,23,38,29,"opts"],[51,27,38,33],[51,29,38,35,"initialData"],[51,40,38,46],[52,10,39,16,"queryKey"],[52,18,39,24],[53,10,40,16,"queryFn"],[53,17,40,23],[53,19,40,25,"inputIsSkipToken"],[53,35,40,41],[53,38,40,44,"skipToken"],[53,59,40,53],[53,62,40,56,"queryFn"],[53,69,40,63],[54,10,41,16,"initialPageParam"],[54,26,41,32],[54,28,41,34,"opts"],[54,32,41,38],[54,34,41,40,"initialCursor"],[54,47,41,53],[54,51,41,57],[55,8,42,12],[55,9,42,13],[55,10,42,14],[55,12,42,16],[56,10,43,16,"trpc"],[56,14,43,20],[56,16,43,22],[56,20,43,22,"createTRPCOptionsResult"],[56,55,43,45],[56,57,43,46],[57,12,44,20,"path"],[58,10,45,16],[58,11,45,17],[59,8,46,12],[59,9,46,13],[59,10,46,14],[60,6,47,8],[60,7,47,9],[61,6,48,8,"queryOptions"],[61,18,48,20],[61,20,48,22,"queryOptions"],[61,21,48,23,"path"],[61,25,48,27],[61,27,48,29,"queryKey"],[61,35,48,37],[61,37,48,39,"opts"],[61,41,48,43],[61,46,48,46],[62,8,49,12],[62,12,49,18,"inputIsSkipToken"],[62,28,49,34],[62,31,49,37,"queryKey"],[62,39,49,45],[62,40,49,46],[62,41,49,47],[62,42,49,48],[62,44,49,50,"input"],[62,49,49,55],[62,54,49,60,"skipToken"],[62,75,49,69],[63,8,50,12],[63,12,50,18,"queryFn"],[63,19,50,25],[64,10,50,25],[64,14,50,25,"_ref2"],[64,19,50,25],[64,26,50,25,"_asyncToGenerator2"],[64,44,50,25],[64,45,50,25,"default"],[64,52,50,25],[64,54,50,28],[64,65,50,35,"queryFnContext"],[64,79,50,49],[64,81,50,52],[65,12,51,16],[65,16,51,22,"actualOpts"],[65,26,51,32],[65,29,51,35],[66,14,52,20],[66,17,52,23,"opts"],[66,21,52,27],[67,14,53,20,"trpc"],[67,18,53,24],[67,20,53,26],[68,16,54,24],[68,19,54,27,"opts"],[68,23,54,31],[68,25,54,33,"trpc"],[68,29,54,37],[69,16,55,24],[69,20,55,27,"opts"],[69,24,55,31],[69,26,55,33,"trpc"],[69,30,55,37],[69,32,55,39,"abortOnUnmount"],[69,46,55,53],[69,49,55,56],[70,18,56,28,"signal"],[70,24,56,34],[70,26,56,36,"queryFnContext"],[70,40,56,50],[70,41,56,51,"signal"],[71,16,57,24],[71,17,57,25],[71,20,57,28],[72,18,58,28,"signal"],[72,24,58,34],[72,26,58,36],[73,16,59,24],[73,17,59,25],[74,14,60,20],[75,12,61,16],[75,13,61,17],[76,12,62,16],[76,16,62,22,"result"],[76,22,62,28],[76,31,62,37,"untypedClient"],[76,44,62,50],[76,45,62,51,"query"],[76,50,62,56],[76,51,62,57],[76,54,62,60],[76,58,62,60,"getClientArgs"],[76,86,62,73],[76,88,62,74,"queryKey"],[76,96,62,82],[76,98,62,84,"actualOpts"],[76,108,62,94],[76,109,62,95],[76,110,62,96],[77,12,63,16],[77,16,63,20],[77,20,63,20,"isAsyncIterable"],[77,60,63,35],[77,62,63,36,"result"],[77,68,63,42],[77,69,63,43],[77,71,63,45],[78,14,64,20],[78,21,64,27],[78,25,64,27,"buildQueryFromAsyncIterable"],[78,64,64,54],[78,66,64,55,"result"],[78,72,64,61],[78,74,64,63,"queryClient"],[78,85,64,74],[78,87,64,76,"queryKey"],[78,95,64,84],[78,96,64,85],[79,12,65,16],[80,12,66,16],[80,19,66,23,"result"],[80,25,66,29],[81,10,67,12],[81,11,67,13],[82,10,67,13],[82,26,50,18,"queryFn"],[82,33,50,25,"queryFn"],[82,34,50,25,"_x2"],[82,37,50,25],[83,12,50,25],[83,19,50,25,"_ref2"],[83,24,50,25],[83,25,50,25,"apply"],[83,30,50,25],[83,37,50,25,"arguments"],[83,46,50,25],[84,10,50,25],[85,8,50,25],[85,11,67,13],[86,8,68,12],[86,15,68,19,"Object"],[86,21,68,25],[86,22,68,26,"assign"],[86,28,68,32],[86,29,68,33],[86,33,68,33,"queryOptions"],[86,57,68,45],[86,59,68,46],[87,10,69,16],[87,13,69,19,"opts"],[87,17,69,23],[88,10,70,16,"initialData"],[88,21,70,27],[88,23,70,29,"opts"],[88,27,70,33],[88,29,70,35,"initialData"],[88,40,70,46],[89,10,71,16,"queryKey"],[89,18,71,24],[90,10,72,16,"queryFn"],[90,17,72,23],[90,19,72,25,"inputIsSkipToken"],[90,35,72,41],[90,38,72,44,"skipToken"],[90,59,72,53],[90,62,72,56,"queryFn"],[91,8,73,12],[91,9,73,13],[91,10,73,14],[91,12,73,16],[92,10,74,16,"trpc"],[92,14,74,20],[92,16,74,22],[92,20,74,22,"createTRPCOptionsResult"],[92,55,74,45],[92,57,74,46],[93,12,75,20,"path"],[94,10,76,16],[94,11,76,17],[95,8,77,12],[95,9,77,13],[95,10,77,14],[96,6,78,8],[96,7,78,9],[97,6,79,8,"fetchQuery"],[97,16,79,18],[97,18,79,20,"fetchQuery"],[97,19,79,21,"queryKey"],[97,27,79,29],[97,29,79,31,"opts"],[97,33,79,35],[97,38,79,38],[98,8,80,12],[98,15,80,19,"queryClient"],[98,26,80,30],[98,27,80,31,"fetchQuery"],[98,37,80,41],[98,38,80,42],[99,10,81,16],[99,13,81,19,"opts"],[99,17,81,23],[100,10,82,16,"queryKey"],[100,18,82,24],[101,10,83,16,"queryFn"],[101,17,83,23],[101,19,83,25,"queryFn"],[101,20,83,25],[101,25,83,29,"untypedClient"],[101,38,83,42],[101,39,83,43,"query"],[101,44,83,48],[101,45,83,49],[101,48,83,52],[101,52,83,52,"getClientArgs"],[101,80,83,65],[101,82,83,66,"queryKey"],[101,90,83,74],[101,92,83,76,"opts"],[101,96,83,80],[101,97,83,81],[102,8,84,12],[102,9,84,13],[102,10,84,14],[103,6,85,8],[103,7,85,9],[104,6,86,8,"fetchInfiniteQuery"],[104,24,86,26],[104,26,86,28,"fetchInfiniteQuery"],[104,27,86,29,"queryKey"],[104,35,86,37],[104,37,86,39,"opts"],[104,41,86,43],[104,46,86,46],[105,8,87,12],[105,15,87,19,"queryClient"],[105,26,87,30],[105,27,87,31,"fetchInfiniteQuery"],[105,45,87,49],[105,46,87,50],[106,10,88,16],[106,13,88,19,"opts"],[106,17,88,23],[107,10,89,16,"queryKey"],[107,18,89,24],[108,10,90,16,"queryFn"],[108,17,90,23],[108,19,90,25,"_ref3"],[108,24,90,25],[108,28,90,53],[109,12,90,53],[109,16,90,28,"pageParam"],[109,25,90,37],[109,28,90,37,"_ref3"],[109,33,90,37],[109,34,90,28,"pageParam"],[109,43,90,37],[110,14,90,39,"direction"],[110,23,90,48],[110,26,90,48,"_ref3"],[110,31,90,48],[110,32,90,39,"direction"],[110,41,90,48],[111,12,91,20],[111,19,91,27,"untypedClient"],[111,32,91,40],[111,33,91,41,"query"],[111,38,91,46],[111,39,91,47],[111,42,91,50],[111,46,91,50,"getClientArgs"],[111,74,91,63],[111,76,91,64,"queryKey"],[111,84,91,72],[111,86,91,74,"opts"],[111,90,91,78],[111,92,91,80],[112,14,92,24,"pageParam"],[112,23,92,33],[113,14,93,24,"direction"],[114,12,94,20],[114,13,94,21],[114,14,94,22],[114,15,94,23],[115,10,95,16],[115,11,95,17],[116,10,96,16,"initialPageParam"],[116,26,96,32],[116,28,96,34,"opts"],[116,32,96,38],[116,34,96,40,"initialCursor"],[116,47,96,53],[116,51,96,57],[117,8,97,12],[117,9,97,13],[117,10,97,14],[118,6,98,8],[118,7,98,9],[119,6,99,8,"prefetchQuery"],[119,19,99,21],[119,21,99,23,"prefetchQuery"],[119,22,99,24,"queryKey"],[119,30,99,32],[119,32,99,34,"opts"],[119,36,99,38],[119,41,99,41],[120,8,100,12],[120,15,100,19,"queryClient"],[120,26,100,30],[120,27,100,31,"prefetchQuery"],[120,40,100,44],[120,41,100,45],[121,10,101,16],[121,13,101,19,"opts"],[121,17,101,23],[122,10,102,16,"queryKey"],[122,18,102,24],[123,10,103,16,"queryFn"],[123,17,103,23],[123,19,103,25,"queryFn"],[123,20,103,25],[123,25,103,29,"untypedClient"],[123,38,103,42],[123,39,103,43,"query"],[123,44,103,48],[123,45,103,49],[123,48,103,52],[123,52,103,52,"getClientArgs"],[123,80,103,65],[123,82,103,66,"queryKey"],[123,90,103,74],[123,92,103,76,"opts"],[123,96,103,80],[123,97,103,81],[124,8,104,12],[124,9,104,13],[124,10,104,14],[125,6,105,8],[125,7,105,9],[126,6,106,8,"prefetchInfiniteQuery"],[126,27,106,29],[126,29,106,31,"prefetchInfiniteQuery"],[126,30,106,32,"queryKey"],[126,38,106,40],[126,40,106,42,"opts"],[126,44,106,46],[126,49,106,49],[127,8,107,12],[127,15,107,19,"queryClient"],[127,26,107,30],[127,27,107,31,"prefetchInfiniteQuery"],[127,48,107,52],[127,49,107,53],[128,10,108,16],[128,13,108,19,"opts"],[128,17,108,23],[129,10,109,16,"queryKey"],[129,18,109,24],[130,10,110,16,"queryFn"],[130,17,110,23],[130,19,110,25,"_ref4"],[130,24,110,25],[130,28,110,53],[131,12,110,53],[131,16,110,28,"pageParam"],[131,25,110,37],[131,28,110,37,"_ref4"],[131,33,110,37],[131,34,110,28,"pageParam"],[131,43,110,37],[132,14,110,39,"direction"],[132,23,110,48],[132,26,110,48,"_ref4"],[132,31,110,48],[132,32,110,39,"direction"],[132,41,110,48],[133,12,111,20],[133,19,111,27,"untypedClient"],[133,32,111,40],[133,33,111,41,"query"],[133,38,111,46],[133,39,111,47],[133,42,111,50],[133,46,111,50,"getClientArgs"],[133,74,111,63],[133,76,111,64,"queryKey"],[133,84,111,72],[133,86,111,74,"opts"],[133,90,111,78],[133,92,111,80],[134,14,112,24,"pageParam"],[134,23,112,33],[135,14,113,24,"direction"],[136,12,114,20],[136,13,114,21],[136,14,114,22],[136,15,114,23],[137,10,115,16],[137,11,115,17],[138,10,116,16,"initialPageParam"],[138,26,116,32],[138,28,116,34,"opts"],[138,32,116,38],[138,34,116,40,"initialCursor"],[138,47,116,53],[138,51,116,57],[139,8,117,12],[139,9,117,13],[139,10,117,14],[140,6,118,8],[140,7,118,9],[141,6,119,8,"ensureQueryData"],[141,21,119,23],[141,23,119,25,"ensureQueryData"],[141,24,119,26,"queryKey"],[141,32,119,34],[141,34,119,36,"opts"],[141,38,119,40],[141,43,119,43],[142,8,120,12],[142,15,120,19,"queryClient"],[142,26,120,30],[142,27,120,31,"ensureQueryData"],[142,42,120,46],[142,43,120,47],[143,10,121,16],[143,13,121,19,"opts"],[143,17,121,23],[144,10,122,16,"queryKey"],[144,18,122,24],[145,10,123,16,"queryFn"],[145,17,123,23],[145,19,123,25,"queryFn"],[145,20,123,25],[145,25,123,29,"untypedClient"],[145,38,123,42],[145,39,123,43,"query"],[145,44,123,48],[145,45,123,49],[145,48,123,52],[145,52,123,52,"getClientArgs"],[145,80,123,65],[145,82,123,66,"queryKey"],[145,90,123,74],[145,92,123,76,"opts"],[145,96,123,80],[145,97,123,81],[146,8,124,12],[146,9,124,13],[146,10,124,14],[147,6,125,8],[147,7,125,9],[148,6,126,8,"invalidateQueries"],[148,23,126,25],[148,25,126,27,"invalidateQueries"],[148,26,126,28,"queryKey"],[148,34,126,36],[148,36,126,38,"filters"],[148,43,126,45],[148,45,126,47,"options"],[148,52,126,54],[148,57,126,57],[149,8,127,12],[149,15,127,19,"queryClient"],[149,26,127,30],[149,27,127,31,"invalidateQueries"],[149,44,127,48],[149,45,127,49],[150,10,128,16],[150,13,128,19,"filters"],[150,20,128,26],[151,10,129,16,"queryKey"],[152,8,130,12],[152,9,130,13],[152,11,130,15,"options"],[152,18,130,22],[152,19,130,23],[153,6,131,8],[153,7,131,9],[154,6,132,8,"resetQueries"],[154,18,132,20],[154,20,132,22,"resetQueries"],[154,21,132,23,"queryKey"],[154,29,132,31],[154,31,132,33,"filters"],[154,38,132,40],[154,40,132,42,"options"],[154,47,132,49],[154,52,132,52],[155,8,133,12],[155,15,133,19,"queryClient"],[155,26,133,30],[155,27,133,31,"resetQueries"],[155,39,133,43],[155,40,133,44],[156,10,134,16],[156,13,134,19,"filters"],[156,20,134,26],[157,10,135,16,"queryKey"],[158,8,136,12],[158,9,136,13],[158,11,136,15,"options"],[158,18,136,22],[158,19,136,23],[159,6,137,8],[159,7,137,9],[160,6,138,8,"refetchQueries"],[160,20,138,22],[160,22,138,24,"refetchQueries"],[160,23,138,25,"queryKey"],[160,31,138,33],[160,33,138,35,"filters"],[160,40,138,42],[160,42,138,44,"options"],[160,49,138,51],[160,54,138,54],[161,8,139,12],[161,15,139,19,"queryClient"],[161,26,139,30],[161,27,139,31,"refetchQueries"],[161,41,139,45],[161,42,139,46],[162,10,140,16],[162,13,140,19,"filters"],[162,20,140,26],[163,10,141,16,"queryKey"],[164,8,142,12],[164,9,142,13],[164,11,142,15,"options"],[164,18,142,22],[164,19,142,23],[165,6,143,8],[165,7,143,9],[166,6,144,8,"cancelQuery"],[166,17,144,19],[166,19,144,21,"cancelQuery"],[166,20,144,22,"queryKey"],[166,28,144,30],[166,30,144,32,"options"],[166,37,144,39],[166,42,144,42],[167,8,145,12],[167,15,145,19,"queryClient"],[167,26,145,30],[167,27,145,31,"cancelQueries"],[167,40,145,44],[167,41,145,45],[168,10,146,16,"queryKey"],[169,8,147,12],[169,9,147,13],[169,11,147,15,"options"],[169,18,147,22],[169,19,147,23],[170,6,148,8],[170,7,148,9],[171,6,149,8,"setQueryData"],[171,18,149,20],[171,20,149,22,"setQueryData"],[171,21,149,23,"queryKey"],[171,29,149,31],[171,31,149,33,"updater"],[171,38,149,40],[171,40,149,42,"options"],[171,47,149,49],[171,52,149,52],[172,8,150,12],[172,15,150,19,"queryClient"],[172,26,150,30],[172,27,150,31,"setQueryData"],[172,39,150,43],[172,40,150,44,"queryKey"],[172,48,150,52],[172,50,150,54,"updater"],[172,57,150,61],[172,59,150,63,"options"],[172,66,150,70],[172,67,150,71],[173,6,151,8],[173,7,151,9],[174,6,152,8],[175,6,153,8,"setQueriesData"],[175,20,153,22],[175,22,153,24,"setQueriesData"],[175,23,153,25,"queryKey"],[175,31,153,33],[175,33,153,35,"filters"],[175,40,153,42],[175,42,153,44,"updater"],[175,49,153,51],[175,51,153,53,"options"],[175,58,153,60],[175,63,153,63],[176,8,154,12],[176,15,154,19,"queryClient"],[176,26,154,30],[176,27,154,31,"setQueriesData"],[176,41,154,45],[176,42,154,46],[177,10,155,16],[177,13,155,19,"filters"],[177,20,155,26],[178,10,156,16,"queryKey"],[179,8,157,12],[179,9,157,13],[179,11,157,15,"updater"],[179,18,157,22],[179,20,157,24,"options"],[179,27,157,31],[179,28,157,32],[180,6,158,8],[180,7,158,9],[181,6,159,8,"getQueryData"],[181,18,159,20],[181,20,159,23,"queryKey"],[181,28,159,31],[181,32,159,34],[182,8,160,12],[182,15,160,19,"queryClient"],[182,26,160,30],[182,27,160,31,"getQueryData"],[182,39,160,43],[182,40,160,44,"queryKey"],[182,48,160,52],[182,49,160,53],[183,6,161,8],[183,7,161,9],[184,6,162,8,"setInfiniteQueryData"],[184,26,162,28],[184,28,162,30,"setInfiniteQueryData"],[184,29,162,31,"queryKey"],[184,37,162,39],[184,39,162,41,"updater"],[184,46,162,48],[184,48,162,50,"options"],[184,55,162,57],[184,60,162,60],[185,8,163,12],[185,15,163,19,"queryClient"],[185,26,163,30],[185,27,163,31,"setQueryData"],[185,39,163,43],[185,40,163,44,"queryKey"],[185,48,163,52],[185,50,163,54,"updater"],[185,57,163,61],[185,59,163,63,"options"],[185,66,163,70],[185,67,163,71],[186,6,164,8],[186,7,164,9],[187,6,165,8,"getInfiniteQueryData"],[187,26,165,28],[187,28,165,31,"queryKey"],[187,36,165,39],[187,40,165,42],[188,8,166,12],[188,15,166,19,"queryClient"],[188,26,166,30],[188,27,166,31,"getQueryData"],[188,39,166,43],[188,40,166,44,"queryKey"],[188,48,166,52],[188,49,166,53],[189,6,167,8],[189,7,167,9],[190,6,168,8,"setMutationDefaults"],[190,25,168,27],[190,27,168,29,"setMutationDefaults"],[190,28,168,30,"mutationKey"],[190,39,168,41],[190,41,168,43,"options"],[190,48,168,50],[190,53,168,53],[191,8,169,12],[191,12,169,18,"path"],[191,16,169,22],[191,19,169,25,"mutationKey"],[191,30,169,36],[191,31,169,37],[191,32,169,38],[191,33,169,39],[192,8,170,12],[192,12,170,18,"canonicalMutationFn"],[192,31,170,37],[192,34,170,41,"input"],[192,39,170,46],[192,43,170,49],[193,10,171,16],[193,17,171,23,"untypedClient"],[193,30,171,36],[193,31,171,37,"mutation"],[193,39,171,45],[193,40,171,46],[193,43,171,49],[193,47,171,49,"getClientArgs"],[193,75,171,62],[193,77,171,63],[193,78,172,20,"path"],[193,82,172,24],[193,84,173,20],[194,12,174,24,"input"],[195,10,175,20],[195,11,175,21],[195,12,176,17],[195,14,176,19,"opts"],[195,18,176,23],[195,19,176,24],[195,20,176,25],[196,8,177,12],[196,9,177,13],[197,8,178,12],[197,15,178,19,"queryClient"],[197,26,178,30],[197,27,178,31,"setMutationDefaults"],[197,46,178,50],[197,47,178,51,"mutationKey"],[197,58,178,62],[197,60,178,64],[197,67,178,71,"options"],[197,74,178,78],[197,79,178,83],[197,89,178,93],[197,92,178,96,"options"],[197,99,178,103],[197,100,178,104],[198,10,179,16,"canonicalMutationFn"],[199,8,180,12],[199,9,180,13],[199,10,180,14],[199,13,180,17,"options"],[199,20,180,24],[199,21,180,25],[200,6,181,8],[200,7,181,9],[201,6,182,8,"getMutationDefaults"],[201,25,182,27],[201,27,182,30,"mutationKey"],[201,38,182,41],[201,42,182,44],[202,8,183,12],[202,15,183,19,"queryClient"],[202,26,183,30],[202,27,183,31,"getMutationDefaults"],[202,46,183,50],[202,47,183,51,"mutationKey"],[202,58,183,62],[202,59,183,63],[203,6,184,8],[203,7,184,9],[204,6,185,8,"isMutating"],[204,16,185,18],[204,18,185,21,"filters"],[204,25,185,28],[204,29,185,31],[205,8,186,12],[205,15,186,19,"queryClient"],[205,26,186,30],[205,27,186,31,"isMutating"],[205,37,186,41],[205,38,186,42],[206,10,187,16],[206,13,187,19,"filters"],[206,20,187,26],[207,10,188,16,"exact"],[207,15,188,21],[207,17,188,23],[208,8,189,12],[208,9,189,13],[208,10,189,14],[209,6,190,8],[210,4,191,4],[210,5,191,5],[211,2,192,0],[212,0,192,1],[212,3]],"functionMap":{"names":["<global>","createUtilityFunctions","infiniteQueryOptions","queryFn","queryOptions","fetchQuery","queryClient.fetchQuery$argument_0.queryFn","fetchInfiniteQuery","queryClient.fetchInfiniteQuery$argument_0.queryFn","prefetchQuery","queryClient.prefetchQuery$argument_0.queryFn","prefetchInfiniteQuery","queryClient.prefetchInfiniteQuery$argument_0.queryFn","ensureQueryData","queryClient.ensureQueryData$argument_0.queryFn","invalidateQueries","resetQueries","refetchQueries","cancelQuery","setQueryData","setQueriesData","getQueryData","setInfiniteQueryData","getInfiniteQueryData","setMutationDefaults","canonicalMutationFn","getMutationDefaults","isMutating"],"mappings":"AAA;ICW;8BCI;4BCE;aDiB;SDY;sBGC;4BDE;aCiB;SHW;oBIC;yBCI,yDD;SJE;4BMC;yBCI;iBDK;SNG;uBQC;yBCI,yDD;SRE;+BUC;yBCI;iBDK;SVG;yBYC;yBCI,yDD;SZE;2BcC;SdK;sBeC;SfK;wBgBC;ShBK;qBiBC;SjBI;sBkBC;SlBE;wBmBE;SnBK;sBoBC;SpBE;8BqBC;SrBE;8BsBC;StBE;6BuBC;wCCE;aDO;SvBI;6ByBC;SzBE;oB0BC;S1BK;CDE"}},"type":"js/module"}]}