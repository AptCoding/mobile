{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":0,"index":19646}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":0,"index":19646}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"react-native-css-interop","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":0,"index":19646}}],"key":"ZrL+fRRzIYt1gg3CUCNUQvfweAo="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":501,"column":0,"index":19646}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@tanstack/react-query","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":220,"index":220}}],"key":"67ISVYMo1RFOUYqthAT6DxIQ3Aw="}},{"name":"@trpc/client","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":221},"end":{"line":2,"column":85,"index":306}}],"key":"F7lDHhOULB/+RRe/q4ibaBc/bJA="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":307},"end":{"line":3,"column":75,"index":382}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":383},"end":{"line":4,"column":31,"index":414}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"../../internals/context.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":415},"end":{"line":5,"column":58,"index":473}}],"key":"6m2tjKgUYB7pTMmlXgLiVLA+fZU="}},{"name":"../../internals/getClientArgs.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":474},"end":{"line":6,"column":66,"index":540}}],"key":"a689yw29MsbwVaLbxaC43g3axtY="}},{"name":"../../internals/getQueryKey.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":7,"column":0,"index":541},"end":{"line":7,"column":94,"index":635}}],"key":"xfAAWB8frr31M+7LFyVadVBLMw8="}},{"name":"../../internals/trpcResult.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":8,"column":0,"index":636},"end":{"line":8,"column":92,"index":728}}],"key":"Dto1gR7Y8mkIpLEtcuHq9hLhWhk="}},{"name":"../../utils/createUtilityFunctions.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":9,"column":0,"index":729},"end":{"line":9,"column":80,"index":809}}],"key":"AK5u5INaNbWAHkgg/PF7i9TR9o4="}},{"name":"../proxy/useQueriesProxy.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":10,"column":0,"index":810},"end":{"line":10,"column":64,"index":874}}],"key":"60WWWg8NNZ/0q1xGBI1yjI3lwg4="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.createRootHooks = createRootHooks;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _reactNativeCssInterop = require(_dependencyMap[2], \"react-native-css-interop\");\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n  var _reactQuery = require(_dependencyMap[4], \"@tanstack/react-query\");\n  var _client = require(_dependencyMap[5], \"@trpc/client\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[6], \"@trpc/server/unstable-core-do-not-import\");\n  var React = _interopRequireWildcard(require(_dependencyMap[7], \"react\"));\n  var _context = require(_dependencyMap[8], \"../../internals/context.mjs\");\n  var _getClientArgs = require(_dependencyMap[9], \"../../internals/getClientArgs.mjs\");\n  var _getQueryKey = require(_dependencyMap[10], \"../../internals/getQueryKey.mjs\");\n  var _trpcResult = require(_dependencyMap[11], \"../../internals/trpcResult.mjs\");\n  var _createUtilityFunctions = require(_dependencyMap[12], \"../../utils/createUtilityFunctions.mjs\");\n  var _useQueriesProxy = require(_dependencyMap[13], \"../proxy/useQueriesProxy.mjs\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var trackResult = (result, onTrackResult) => {\n    var trackedResult = new Proxy(result, {\n      get(target, prop) {\n        onTrackResult(prop);\n        return target[prop];\n      }\n    });\n    return trackedResult;\n  };\n  /**\n   * @internal\n   */\n  function createRootHooks(config) {\n    var mutationSuccessOverride = config?.overrides?.useMutation?.onSuccess ?? (options => options.originalFn());\n    var Context = config?.context ?? _context.TRPCContext;\n    var createClient = _client.createTRPCClient;\n    var TRPCProvider = props => {\n      var _props$abortOnUnmount = props.abortOnUnmount,\n        abortOnUnmount = _props$abortOnUnmount === void 0 ? false : _props$abortOnUnmount,\n        queryClient = props.queryClient,\n        ssrContext = props.ssrContext;\n      var _React$useState = React.useState(props.ssrState ?? false),\n        _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),\n        ssrState = _React$useState2[0],\n        setSSRState = _React$useState2[1];\n      var client = props.client instanceof _client.TRPCUntypedClient ? props.client : (0, _client.getUntypedClient)(props.client);\n      var fns = React.useMemo(() => (0, _createUtilityFunctions.createUtilityFunctions)({\n        client,\n        queryClient\n      }), [client, queryClient]);\n      var contextValue = React.useMemo(() => ({\n        abortOnUnmount,\n        queryClient,\n        client,\n        ssrContext: ssrContext ?? null,\n        ssrState,\n        ...fns\n      }), [abortOnUnmount, client, fns, queryClient, ssrContext, ssrState]);\n      React.useEffect(() => {\n        // Only updating state to `mounted` if we are using SSR.\n        // This makes it so we don't have an unnecessary re-render when opting out of SSR.\n        setSSRState(state => state ? 'mounted' : false);\n      }, []);\n      return /*#__PURE__*/(0, _reactNativeCssInterop.createInteropElement)(Context.Provider, {\n        value: contextValue\n      }, props.children);\n    };\n    function useContext() {\n      var context = React.useContext(Context);\n      if (!context) {\n        throw new Error('Unable to find tRPC Context. Did you forget to wrap your App inside `withTRPC` HoC?');\n      }\n      return context;\n    }\n    /**\n    * Hack to make sure errors return `status`='error` when doing SSR\n    * @see https://github.com/trpc/trpc/pull/1645\n    */\n    function useSSRQueryOptionsIfNeeded(queryKey, opts) {\n      var _useContext = useContext(),\n        queryClient = _useContext.queryClient,\n        ssrState = _useContext.ssrState;\n      return ssrState && ssrState !== 'mounted' && queryClient.getQueryCache().find({\n        queryKey\n      })?.state.status === 'error' ? {\n        retryOnMount: false,\n        ...opts\n      } : opts;\n    }\n    function useQuery$1(path, input, opts) {\n      var context = useContext();\n      var abortOnUnmount = context.abortOnUnmount,\n        client = context.client,\n        ssrState = context.ssrState,\n        queryClient = context.queryClient,\n        prefetchQuery = context.prefetchQuery;\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, 'query');\n      var defaultOpts = queryClient.getQueryDefaults(queryKey);\n      var isInputSkipToken = input === _reactQuery.skipToken;\n      if (typeof window === 'undefined' && ssrState === 'prepass' && opts?.trpc?.ssr !== false && (opts?.enabled ?? defaultOpts?.enabled) !== false && !isInputSkipToken && !queryClient.getQueryCache().find({\n        queryKey\n      })) {\n        void prefetchQuery(queryKey, opts);\n      }\n      var ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n        ...defaultOpts,\n        ...opts\n      });\n      var shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? config?.abortOnUnmount ?? abortOnUnmount;\n      var hook = (0, _reactQuery.useQuery)({\n        ...ssrOpts,\n        queryKey: queryKey,\n        queryFn: isInputSkipToken ? input : (/*#__PURE__*/function () {\n          var _ref = (0, _asyncToGenerator2.default)(function* (queryFunctionContext) {\n            var actualOpts = {\n              ...ssrOpts,\n              trpc: {\n                ...ssrOpts?.trpc,\n                ...(shouldAbortOnUnmount ? {\n                  signal: queryFunctionContext.signal\n                } : {\n                  signal: null\n                })\n              }\n            };\n            var result = yield client.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts));\n            if ((0, _unstableCoreDoNotImport.isAsyncIterable)(result)) {\n              return (0, _trpcResult.buildQueryFromAsyncIterable)(result, queryClient, queryKey);\n            }\n            return result;\n          });\n          return function (_x) {\n            return _ref.apply(this, arguments);\n          };\n        }())\n      }, queryClient);\n      hook.trpc = (0, _trpcResult.useHookResult)({\n        path\n      });\n      return hook;\n    }\n    function usePrefetchQuery$1(path, input, opts) {\n      var context = useContext();\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, 'query');\n      var isInputSkipToken = input === _reactQuery.skipToken;\n      var shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? config?.abortOnUnmount ?? context.abortOnUnmount;\n      (0, _reactQuery.usePrefetchQuery)({\n        ...opts,\n        queryKey: queryKey,\n        queryFn: isInputSkipToken ? input : queryFunctionContext => {\n          var actualOpts = {\n            trpc: {\n              ...opts?.trpc,\n              ...(shouldAbortOnUnmount ? {\n                signal: queryFunctionContext.signal\n              } : {})\n            }\n          };\n          return context.client.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts));\n        }\n      });\n    }\n    function useSuspenseQuery$1(path, input, opts) {\n      var context = useContext();\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, 'query');\n      var shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? config?.abortOnUnmount ?? context.abortOnUnmount;\n      var hook = (0, _reactQuery.useSuspenseQuery)({\n        ...opts,\n        queryKey: queryKey,\n        queryFn: queryFunctionContext => {\n          var actualOpts = {\n            ...opts,\n            trpc: {\n              ...opts?.trpc,\n              ...(shouldAbortOnUnmount ? {\n                signal: queryFunctionContext.signal\n              } : {\n                signal: null\n              })\n            }\n          };\n          return context.client.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts));\n        }\n      }, context.queryClient);\n      hook.trpc = (0, _trpcResult.useHookResult)({\n        path\n      });\n      return [hook.data, hook];\n    }\n    function useMutation$1(path, opts) {\n      var _useContext2 = useContext(),\n        client = _useContext2.client,\n        queryClient = _useContext2.queryClient;\n      var mutationKey = (0, _getQueryKey.getMutationKeyInternal)(path);\n      var defaultOpts = queryClient.defaultMutationOptions(queryClient.getMutationDefaults(mutationKey));\n      var hook = (0, _reactQuery.useMutation)({\n        ...opts,\n        mutationKey: mutationKey,\n        mutationFn: input => {\n          return client.mutation(...(0, _getClientArgs.getClientArgs)([path, {\n            input\n          }], opts));\n        },\n        onSuccess() {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          var originalFn = () => opts?.onSuccess?.(...args) ?? defaultOpts?.onSuccess?.(...args);\n          return mutationSuccessOverride({\n            originalFn,\n            queryClient,\n            meta: opts?.meta ?? defaultOpts?.meta ?? {}\n          });\n        }\n      }, queryClient);\n      hook.trpc = (0, _trpcResult.useHookResult)({\n        path\n      });\n      return hook;\n    }\n    /* istanbul ignore next -- @preserve */\n    function useSubscription(path, input, opts) {\n      var enabled = opts?.enabled ?? input !== _reactQuery.skipToken;\n      var queryKey = (0, _reactQuery.hashKey)((0, _getQueryKey.getQueryKeyInternal)(path, input, 'any'));\n      var _useContext3 = useContext(),\n        client = _useContext3.client;\n      var optsRef = React.useRef(opts);\n      optsRef.current = opts;\n      var trackedProps = React.useRef(new Set([]));\n      var addTrackedProp = React.useCallback(key => {\n        trackedProps.current.add(key);\n      }, []);\n      var currentSubscriptionRef = React.useRef(null);\n      var reset = React.useCallback(() => {\n        // unsubscribe from the previous subscription\n        currentSubscriptionRef.current?.();\n        updateState(getInitialState);\n        if (!enabled) {\n          return;\n        }\n        var isStopped = false;\n        var subscription = client.subscription(path.join('.'), input ?? undefined, {\n          onStarted: () => {\n            if (!isStopped) {\n              optsRef.current.onStarted?.();\n              updateState(prev => ({\n                ...prev,\n                status: 'pending',\n                error: null\n              }));\n            }\n          },\n          onData: data => {\n            if (!isStopped) {\n              optsRef.current.onData?.(data);\n              updateState(prev => ({\n                ...prev,\n                status: 'pending',\n                data,\n                error: null\n              }));\n            }\n          },\n          onError: error => {\n            if (!isStopped) {\n              optsRef.current.onError?.(error);\n              updateState(prev => ({\n                ...prev,\n                status: 'error',\n                error\n              }));\n            }\n          },\n          onConnectionStateChange: result => {\n            var delta = {\n              status: result.state,\n              error: result.error\n            };\n            updateState(prev => {\n              return {\n                ...prev,\n                ...delta\n              };\n            });\n          }\n        });\n        currentSubscriptionRef.current = () => {\n          isStopped = true;\n          subscription.unsubscribe();\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n      }, [queryKey, enabled]);\n      var getInitialState = React.useCallback(() => {\n        return enabled ? {\n          data: undefined,\n          error: null,\n          status: 'connecting',\n          reset\n        } : {\n          data: undefined,\n          error: null,\n          status: 'idle',\n          reset\n        };\n      }, [enabled, reset]);\n      var resultRef = React.useRef(getInitialState());\n      var _React$useState3 = React.useState(trackResult(resultRef.current, addTrackedProp)),\n        _React$useState4 = (0, _slicedToArray2.default)(_React$useState3, 2),\n        state = _React$useState4[0],\n        setState = _React$useState4[1];\n      state.reset = reset;\n      var updateState = React.useCallback(callback => {\n        var prev = resultRef.current;\n        var next = resultRef.current = callback(prev);\n        var shouldUpdate = false;\n        for (var key of trackedProps.current) {\n          if (prev[key] !== next[key]) {\n            shouldUpdate = true;\n            break;\n          }\n        }\n        if (shouldUpdate) {\n          setState(trackResult(next, addTrackedProp));\n        }\n      }, [addTrackedProp]);\n      React.useEffect(() => {\n        if (!enabled) {\n          return;\n        }\n        reset();\n        return () => {\n          currentSubscriptionRef.current?.();\n        };\n      }, [reset, enabled]);\n      return state;\n    }\n    function useInfiniteQuery$1(path, input, opts) {\n      var _useContext4 = useContext(),\n        client = _useContext4.client,\n        ssrState = _useContext4.ssrState,\n        prefetchInfiniteQuery = _useContext4.prefetchInfiniteQuery,\n        queryClient = _useContext4.queryClient,\n        abortOnUnmount = _useContext4.abortOnUnmount;\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, 'infinite');\n      var defaultOpts = queryClient.getQueryDefaults(queryKey);\n      var isInputSkipToken = input === _reactQuery.skipToken;\n      if (typeof window === 'undefined' && ssrState === 'prepass' && opts?.trpc?.ssr !== false && (opts?.enabled ?? defaultOpts?.enabled) !== false && !isInputSkipToken && !queryClient.getQueryCache().find({\n        queryKey\n      })) {\n        void prefetchInfiniteQuery(queryKey, {\n          ...defaultOpts,\n          ...opts\n        });\n      }\n      var ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n        ...defaultOpts,\n        ...opts\n      });\n      // request option should take priority over global\n      var shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? abortOnUnmount;\n      var hook = (0, _reactQuery.useInfiniteQuery)({\n        ...ssrOpts,\n        initialPageParam: opts.initialCursor ?? null,\n        persister: opts.persister,\n        queryKey: queryKey,\n        queryFn: isInputSkipToken ? input : queryFunctionContext => {\n          var actualOpts = {\n            ...ssrOpts,\n            trpc: {\n              ...ssrOpts?.trpc,\n              ...(shouldAbortOnUnmount ? {\n                signal: queryFunctionContext.signal\n              } : {\n                signal: null\n              })\n            }\n          };\n          return client.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts, {\n            pageParam: queryFunctionContext.pageParam ?? opts.initialCursor,\n            direction: queryFunctionContext.direction\n          }));\n        }\n      }, queryClient);\n      hook.trpc = (0, _trpcResult.useHookResult)({\n        path\n      });\n      return hook;\n    }\n    function usePrefetchInfiniteQuery$1(path, input, opts) {\n      var context = useContext();\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, 'infinite');\n      var defaultOpts = context.queryClient.getQueryDefaults(queryKey);\n      var isInputSkipToken = input === _reactQuery.skipToken;\n      var ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n        ...defaultOpts,\n        ...opts\n      });\n      // request option should take priority over global\n      var shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? context.abortOnUnmount;\n      (0, _reactQuery.usePrefetchInfiniteQuery)({\n        ...opts,\n        initialPageParam: opts.initialCursor ?? null,\n        queryKey,\n        queryFn: isInputSkipToken ? input : queryFunctionContext => {\n          var actualOpts = {\n            ...ssrOpts,\n            trpc: {\n              ...ssrOpts?.trpc,\n              ...(shouldAbortOnUnmount ? {\n                signal: queryFunctionContext.signal\n              } : {})\n            }\n          };\n          return context.client.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts, {\n            pageParam: queryFunctionContext.pageParam ?? opts.initialCursor,\n            direction: queryFunctionContext.direction\n          }));\n        }\n      });\n    }\n    function useSuspenseInfiniteQuery$1(path, input, opts) {\n      var context = useContext();\n      var queryKey = (0, _getQueryKey.getQueryKeyInternal)(path, input, 'infinite');\n      var defaultOpts = context.queryClient.getQueryDefaults(queryKey);\n      var ssrOpts = useSSRQueryOptionsIfNeeded(queryKey, {\n        ...defaultOpts,\n        ...opts\n      });\n      // request option should take priority over global\n      var shouldAbortOnUnmount = opts?.trpc?.abortOnUnmount ?? context.abortOnUnmount;\n      var hook = (0, _reactQuery.useSuspenseInfiniteQuery)({\n        ...opts,\n        initialPageParam: opts.initialCursor ?? null,\n        queryKey,\n        queryFn: queryFunctionContext => {\n          var actualOpts = {\n            ...ssrOpts,\n            trpc: {\n              ...ssrOpts?.trpc,\n              ...(shouldAbortOnUnmount ? {\n                signal: queryFunctionContext.signal\n              } : {})\n            }\n          };\n          return context.client.query(...(0, _getClientArgs.getClientArgs)(queryKey, actualOpts, {\n            pageParam: queryFunctionContext.pageParam ?? opts.initialCursor,\n            direction: queryFunctionContext.direction\n          }));\n        }\n      }, context.queryClient);\n      hook.trpc = (0, _trpcResult.useHookResult)({\n        path\n      });\n      // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n      return [hook.data, hook];\n    }\n    var useQueries$1 = (queriesCallback, options) => {\n      var _useContext5 = useContext(),\n        ssrState = _useContext5.ssrState,\n        queryClient = _useContext5.queryClient,\n        prefetchQuery = _useContext5.prefetchQuery,\n        client = _useContext5.client;\n      var proxy = (0, _useQueriesProxy.createUseQueries)(client);\n      var queries = queriesCallback(proxy);\n      if (typeof window === 'undefined' && ssrState === 'prepass') {\n        for (var query of queries) {\n          var queryOption = query;\n          if (queryOption.trpc?.ssr !== false && !queryClient.getQueryCache().find({\n            queryKey: queryOption.queryKey\n          })) {\n            void prefetchQuery(queryOption.queryKey, queryOption);\n          }\n        }\n      }\n      return (0, _reactQuery.useQueries)({\n        queries: queries.map(query => ({\n          ...query,\n          queryKey: query.queryKey\n        })),\n        combine: options?.combine\n      }, queryClient);\n    };\n    var useSuspenseQueries$1 = queriesCallback => {\n      var _useContext6 = useContext(),\n        queryClient = _useContext6.queryClient,\n        client = _useContext6.client;\n      var proxy = (0, _useQueriesProxy.createUseQueries)(client);\n      var queries = queriesCallback(proxy);\n      var hook = (0, _reactQuery.useSuspenseQueries)({\n        queries: queries.map(query => ({\n          ...query,\n          queryFn: query.queryFn,\n          queryKey: query.queryKey\n        }))\n      }, queryClient);\n      return [hook.map(h => h.data), hook];\n    };\n    return {\n      Provider: TRPCProvider,\n      createClient,\n      useContext,\n      useUtils: useContext,\n      useQuery: useQuery$1,\n      usePrefetchQuery: usePrefetchQuery$1,\n      useSuspenseQuery: useSuspenseQuery$1,\n      useQueries: useQueries$1,\n      useSuspenseQueries: useSuspenseQueries$1,\n      useMutation: useMutation$1,\n      useSubscription,\n      useInfiniteQuery: useInfiniteQuery$1,\n      usePrefetchInfiniteQuery: usePrefetchInfiniteQuery$1,\n      useSuspenseInfiniteQuery: useSuspenseInfiniteQuery$1\n    };\n  }\n});","lineCount":516,"map":[[10,2,1,0],[10,6,1,0,"_reactQuery"],[10,17,1,0],[10,20,1,0,"require"],[10,27,1,0],[10,28,1,0,"_dependencyMap"],[10,42,1,0],[11,2,2,0],[11,6,2,0,"_client"],[11,13,2,0],[11,16,2,0,"require"],[11,23,2,0],[11,24,2,0,"_dependencyMap"],[11,38,2,0],[12,2,3,0],[12,6,3,0,"_unstableCoreDoNotImport"],[12,30,3,0],[12,33,3,0,"require"],[12,40,3,0],[12,41,3,0,"_dependencyMap"],[12,55,3,0],[13,2,4,0],[13,6,4,0,"React"],[13,11,4,0],[13,14,4,0,"_interopRequireWildcard"],[13,37,4,0],[13,38,4,0,"require"],[13,45,4,0],[13,46,4,0,"_dependencyMap"],[13,60,4,0],[14,2,5,0],[14,6,5,0,"_context"],[14,14,5,0],[14,17,5,0,"require"],[14,24,5,0],[14,25,5,0,"_dependencyMap"],[14,39,5,0],[15,2,6,0],[15,6,6,0,"_getClientArgs"],[15,20,6,0],[15,23,6,0,"require"],[15,30,6,0],[15,31,6,0,"_dependencyMap"],[15,45,6,0],[16,2,7,0],[16,6,7,0,"_getQueryKey"],[16,18,7,0],[16,21,7,0,"require"],[16,28,7,0],[16,29,7,0,"_dependencyMap"],[16,43,7,0],[17,2,8,0],[17,6,8,0,"_trpcResult"],[17,17,8,0],[17,20,8,0,"require"],[17,27,8,0],[17,28,8,0,"_dependencyMap"],[17,42,8,0],[18,2,9,0],[18,6,9,0,"_createUtilityFunctions"],[18,29,9,0],[18,32,9,0,"require"],[18,39,9,0],[18,40,9,0,"_dependencyMap"],[18,54,9,0],[19,2,10,0],[19,6,10,0,"_useQueriesProxy"],[19,22,10,0],[19,25,10,0,"require"],[19,32,10,0],[19,33,10,0,"_dependencyMap"],[19,47,10,0],[20,2,10,64],[20,11,10,64,"_getRequireWildcardCache"],[20,36,10,64,"e"],[20,37,10,64],[20,66,10,64,"WeakMap"],[20,73,10,64],[20,92,10,64,"r"],[20,93,10,64],[20,100,10,64,"WeakMap"],[20,107,10,64],[20,111,10,64,"t"],[20,112,10,64],[20,119,10,64,"WeakMap"],[20,126,10,64],[20,138,10,64,"_getRequireWildcardCache"],[20,162,10,64],[20,174,10,64,"_getRequireWildcardCache"],[20,175,10,64,"e"],[20,176,10,64],[20,187,10,64,"e"],[20,188,10,64],[20,191,10,64,"t"],[20,192,10,64],[20,195,10,64,"r"],[20,196,10,64],[20,201,10,64,"e"],[20,202,10,64],[21,2,10,64],[21,11,10,64,"_interopRequireWildcard"],[21,35,10,64,"e"],[21,36,10,64],[21,38,10,64,"r"],[21,39,10,64],[21,48,10,64,"r"],[21,49,10,64],[21,53,10,64,"e"],[21,54,10,64],[21,58,10,64,"e"],[21,59,10,64],[21,60,10,64,"__esModule"],[21,70,10,64],[21,79,10,64,"e"],[21,80,10,64],[21,95,10,64,"e"],[21,96,10,64],[21,119,10,64,"e"],[21,120,10,64],[21,145,10,64,"e"],[21,146,10,64],[21,157,10,64,"default"],[21,164,10,64],[21,166,10,64,"e"],[21,167,10,64],[21,175,10,64,"t"],[21,176,10,64],[21,179,10,64,"_getRequireWildcardCache"],[21,203,10,64],[21,204,10,64,"r"],[21,205,10,64],[21,212,10,64,"t"],[21,213,10,64],[21,217,10,64,"t"],[21,218,10,64],[21,219,10,64,"has"],[21,222,10,64],[21,223,10,64,"e"],[21,224,10,64],[21,234,10,64,"t"],[21,235,10,64],[21,236,10,64,"get"],[21,239,10,64],[21,240,10,64,"e"],[21,241,10,64],[21,248,10,64,"n"],[21,249,10,64],[21,254,10,64,"__proto__"],[21,263,10,64],[21,273,10,64,"a"],[21,274,10,64],[21,277,10,64,"Object"],[21,283,10,64],[21,284,10,64,"defineProperty"],[21,298,10,64],[21,302,10,64,"Object"],[21,308,10,64],[21,309,10,64,"getOwnPropertyDescriptor"],[21,333,10,64],[21,344,10,64,"u"],[21,345,10,64],[21,349,10,64,"e"],[21,350,10,64],[21,370,10,64,"u"],[21,371,10,64],[21,378,10,64,"hasOwnProperty"],[21,392,10,64],[21,393,10,64,"call"],[21,397,10,64],[21,398,10,64,"e"],[21,399,10,64],[21,401,10,64,"u"],[21,402,10,64],[21,411,10,64,"i"],[21,412,10,64],[21,415,10,64,"a"],[21,416,10,64],[21,419,10,64,"Object"],[21,425,10,64],[21,426,10,64,"getOwnPropertyDescriptor"],[21,450,10,64],[21,451,10,64,"e"],[21,452,10,64],[21,454,10,64,"u"],[21,455,10,64],[21,465,10,64,"i"],[21,466,10,64],[21,471,10,64,"i"],[21,472,10,64],[21,473,10,64,"get"],[21,476,10,64],[21,480,10,64,"i"],[21,481,10,64],[21,482,10,64,"set"],[21,485,10,64],[21,489,10,64,"Object"],[21,495,10,64],[21,496,10,64,"defineProperty"],[21,510,10,64],[21,511,10,64,"n"],[21,512,10,64],[21,514,10,64,"u"],[21,515,10,64],[21,517,10,64,"i"],[21,518,10,64],[21,522,10,64,"n"],[21,523,10,64],[21,524,10,64,"u"],[21,525,10,64],[21,529,10,64,"e"],[21,530,10,64],[21,531,10,64,"u"],[21,532,10,64],[21,544,10,64,"n"],[21,545,10,64],[21,546,10,64,"default"],[21,553,10,64],[21,556,10,64,"e"],[21,557,10,64],[21,559,10,64,"t"],[21,560,10,64],[21,564,10,64,"t"],[21,565,10,64],[21,566,10,64,"set"],[21,569,10,64],[21,570,10,64,"e"],[21,571,10,64],[21,573,10,64,"n"],[21,574,10,64],[21,577,10,64,"n"],[21,578,10,64],[22,2,12,0],[22,6,12,6,"trackResult"],[22,17,12,17],[22,20,12,20,"trackResult"],[22,21,12,21,"result"],[22,27,12,27],[22,29,12,29,"onTrackResult"],[22,42,12,42],[22,47,12,45],[23,4,13,4],[23,8,13,10,"trackedResult"],[23,21,13,23],[23,24,13,26],[23,28,13,30,"Proxy"],[23,33,13,35],[23,34,13,36,"result"],[23,40,13,42],[23,42,13,44],[24,6,14,8,"get"],[24,9,14,11,"get"],[24,10,14,13,"target"],[24,16,14,19],[24,18,14,21,"prop"],[24,22,14,25],[24,24,14,27],[25,8,15,12,"onTrackResult"],[25,21,15,25],[25,22,15,26,"prop"],[25,26,15,30],[25,27,15,31],[26,8,16,12],[26,15,16,19,"target"],[26,21,16,25],[26,22,16,26,"prop"],[26,26,16,30],[26,27,16,31],[27,6,17,8],[28,4,18,4],[28,5,18,5],[28,6,18,6],[29,4,19,4],[29,11,19,11,"trackedResult"],[29,24,19,24],[30,2,20,0],[30,3,20,1],[31,2,21,0],[32,0,22,0],[33,0,23,0],[34,2,23,4],[34,11,23,13,"createRootHooks"],[34,26,23,28,"createRootHooks"],[34,27,23,29,"config"],[34,33,23,35],[34,35,23,37],[35,4,24,4],[35,8,24,10,"mutationSuccessOverride"],[35,31,24,33],[35,34,24,36,"config"],[35,40,24,42],[35,42,24,44,"overrides"],[35,51,24,53],[35,53,24,55,"useMutation"],[35,64,24,66],[35,66,24,68,"onSuccess"],[35,75,24,77],[35,80,24,83,"options"],[35,87,24,90],[35,91,24,93,"options"],[35,98,24,100],[35,99,24,101,"originalFn"],[35,109,24,111],[35,110,24,112],[35,111,24,113],[35,112,24,114],[36,4,25,4],[36,8,25,10,"Context"],[36,15,25,17],[36,18,25,20,"config"],[36,24,25,26],[36,26,25,28,"context"],[36,33,25,35],[36,37,25,39,"TRPCContext"],[36,57,25,50],[37,4,26,4],[37,8,26,10,"createClient"],[37,20,26,22],[37,23,26,25,"createTRPCClient"],[37,47,26,41],[38,4,27,4],[38,8,27,10,"TRPCProvider"],[38,20,27,22],[38,23,27,26,"props"],[38,28,27,31],[38,32,27,34],[39,6,28,8],[39,10,28,8,"_props$abortOnUnmount"],[39,31,28,8],[39,34,28,68,"props"],[39,39,28,73],[39,40,28,16,"abortOnUnmount"],[39,54,28,30],[40,8,28,16,"abortOnUnmount"],[40,22,28,30],[40,25,28,30,"_props$abortOnUnmount"],[40,46,28,30],[40,60,28,33],[40,65,28,38],[40,68,28,38,"_props$abortOnUnmount"],[40,89,28,38],[41,8,28,40,"queryClient"],[41,19,28,51],[41,22,28,68,"props"],[41,27,28,73],[41,28,28,40,"queryClient"],[41,39,28,51],[42,8,28,53,"ssrContext"],[42,18,28,63],[42,21,28,68,"props"],[42,26,28,73],[42,27,28,53,"ssrContext"],[42,37,28,63],[43,6,29,8],[43,10,29,8,"_React$useState"],[43,25,29,8],[43,28,29,40,"React"],[43,33,29,45],[43,34,29,46,"useState"],[43,42,29,54],[43,43,29,55,"props"],[43,48,29,60],[43,49,29,61,"ssrState"],[43,57,29,69],[43,61,29,73],[43,66,29,78],[43,67,29,79],[44,8,29,79,"_React$useState2"],[44,24,29,79],[44,31,29,79,"_slicedToArray2"],[44,46,29,79],[44,47,29,79,"default"],[44,54,29,79],[44,56,29,79,"_React$useState"],[44,71,29,79],[45,8,29,15,"ssrState"],[45,16,29,23],[45,19,29,23,"_React$useState2"],[45,35,29,23],[46,8,29,25,"setSSRState"],[46,19,29,36],[46,22,29,36,"_React$useState2"],[46,38,29,36],[47,6,30,8],[47,10,30,14,"client"],[47,16,30,20],[47,19,30,23,"props"],[47,24,30,28],[47,25,30,29,"client"],[47,31,30,35],[47,43,30,47,"TRPCUntypedClient"],[47,68,30,64],[47,71,30,67,"props"],[47,76,30,72],[47,77,30,73,"client"],[47,83,30,79],[47,86,30,82],[47,90,30,82,"getUntypedClient"],[47,114,30,98],[47,116,30,99,"props"],[47,121,30,104],[47,122,30,105,"client"],[47,128,30,111],[47,129,30,112],[48,6,31,8],[48,10,31,14,"fns"],[48,13,31,17],[48,16,31,20,"React"],[48,21,31,25],[48,22,31,26,"useMemo"],[48,29,31,33],[48,30,31,34],[48,36,31,38],[48,40,31,38,"createUtilityFunctions"],[48,86,31,60],[48,88,31,61],[49,8,32,16,"client"],[49,14,32,22],[50,8,33,16,"queryClient"],[51,6,34,12],[51,7,34,13],[51,8,34,14],[51,10,34,16],[51,11,35,12,"client"],[51,17,35,18],[51,19,36,12,"queryClient"],[51,30,36,23],[51,31,37,9],[51,32,37,10],[52,6,38,8],[52,10,38,14,"contextValue"],[52,22,38,26],[52,25,38,29,"React"],[52,30,38,34],[52,31,38,35,"useMemo"],[52,38,38,42],[52,39,38,43],[52,46,38,48],[53,8,39,16,"abortOnUnmount"],[53,22,39,30],[54,8,40,16,"queryClient"],[54,19,40,27],[55,8,41,16,"client"],[55,14,41,22],[56,8,42,16,"ssrContext"],[56,18,42,26],[56,20,42,28,"ssrContext"],[56,30,42,38],[56,34,42,42],[56,38,42,46],[57,8,43,16,"ssrState"],[57,16,43,24],[58,8,44,16],[58,11,44,19,"fns"],[59,6,45,12],[59,7,45,13],[59,8,45,14],[59,10,45,16],[59,11,46,12,"abortOnUnmount"],[59,25,46,26],[59,27,47,12,"client"],[59,33,47,18],[59,35,48,12,"fns"],[59,38,48,15],[59,40,49,12,"queryClient"],[59,51,49,23],[59,53,50,12,"ssrContext"],[59,63,50,22],[59,65,51,12,"ssrState"],[59,73,51,20],[59,74,52,9],[59,75,52,10],[60,6,53,8,"React"],[60,11,53,13],[60,12,53,14,"useEffect"],[60,21,53,23],[60,22,53,24],[60,28,53,28],[61,8,54,12],[62,8,55,12],[63,8,56,12,"setSSRState"],[63,19,56,23],[63,20,56,25,"state"],[63,25,56,30],[63,29,56,33,"state"],[63,34,56,38],[63,37,56,41],[63,46,56,50],[63,49,56,53],[63,54,56,58],[63,55,56,59],[64,6,57,8],[64,7,57,9],[64,9,57,11],[64,11,57,13],[64,12,57,14],[65,6,58,8],[65,13,58,15],[65,26,58,29],[65,30,58,29,"_reactNativeCssInterop"],[65,52,58,29],[65,53,58,29,"createInteropElement"],[65,73,58,29],[65,75,58,49,"Context"],[65,82,58,56],[65,83,58,57,"Provider"],[65,91,58,65],[65,93,58,67],[66,8,59,12,"value"],[66,13,59,17],[66,15,59,19,"contextValue"],[67,6,60,8],[67,7,60,9],[67,9,60,11,"props"],[67,14,60,16],[67,15,60,17,"children"],[67,23,60,25],[67,24,60,26],[68,4,61,4],[68,5,61,5],[69,4,62,4],[69,13,62,13,"useContext"],[69,23,62,23,"useContext"],[69,24,62,23],[69,26,62,26],[70,6,63,8],[70,10,63,14,"context"],[70,17,63,21],[70,20,63,24,"React"],[70,25,63,29],[70,26,63,30,"useContext"],[70,36,63,40],[70,37,63,41,"Context"],[70,44,63,48],[70,45,63,49],[71,6,64,8],[71,10,64,12],[71,11,64,13,"context"],[71,18,64,20],[71,20,64,22],[72,8,65,12],[72,14,65,18],[72,18,65,22,"Error"],[72,23,65,27],[72,24,65,28],[72,109,65,113],[72,110,65,114],[73,6,66,8],[74,6,67,8],[74,13,67,15,"context"],[74,20,67,22],[75,4,68,4],[76,4,69,4],[77,0,70,0],[78,0,71,0],[79,0,72,0],[80,4,72,6],[80,13,72,15,"useSSRQueryOptionsIfNeeded"],[80,39,72,41,"useSSRQueryOptionsIfNeeded"],[80,40,72,42,"queryKey"],[80,48,72,50],[80,50,72,52,"opts"],[80,54,72,56],[80,56,72,58],[81,6,73,8],[81,10,73,8,"_useContext"],[81,21,73,8],[81,24,73,42,"useContext"],[81,34,73,52],[81,35,73,53],[81,36,73,54],[82,8,73,16,"queryClient"],[82,19,73,27],[82,22,73,27,"_useContext"],[82,33,73,27],[82,34,73,16,"queryClient"],[82,45,73,27],[83,8,73,29,"ssrState"],[83,16,73,37],[83,19,73,37,"_useContext"],[83,30,73,37],[83,31,73,29,"ssrState"],[83,39,73,37],[84,6,74,8],[84,13,74,15,"ssrState"],[84,21,74,23],[84,25,74,27,"ssrState"],[84,33,74,35],[84,38,74,40],[84,47,74,49],[84,51,74,53,"queryClient"],[84,62,74,64],[84,63,74,65,"getQueryCache"],[84,76,74,78],[84,77,74,79],[84,78,74,80],[84,79,74,81,"find"],[84,83,74,85],[84,84,74,86],[85,8,75,12,"queryKey"],[86,6,76,8],[86,7,76,9],[86,8,76,10],[86,10,76,12,"state"],[86,15,76,17],[86,16,76,18,"status"],[86,22,76,24],[86,27,76,29],[86,34,76,36],[86,37,76,39],[87,8,77,12,"retryOnMount"],[87,20,77,24],[87,22,77,26],[87,27,77,31],[88,8,78,12],[88,11,78,15,"opts"],[89,6,79,8],[89,7,79,9],[89,10,79,12,"opts"],[89,14,79,16],[90,4,80,4],[91,4,81,4],[91,13,81,13,"useQuery$1"],[91,23,81,23,"useQuery$1"],[91,24,81,24,"path"],[91,28,81,28],[91,30,81,30,"input"],[91,35,81,35],[91,37,81,37,"opts"],[91,41,81,41],[91,43,81,43],[92,6,82,8],[92,10,82,14,"context"],[92,17,82,21],[92,20,82,24,"useContext"],[92,30,82,34],[92,31,82,35],[92,32,82,36],[93,6,83,8],[93,10,83,16,"abortOnUnmount"],[93,24,83,30],[93,27,83,81,"context"],[93,34,83,88],[93,35,83,16,"abortOnUnmount"],[93,49,83,30],[94,8,83,32,"client"],[94,14,83,38],[94,17,83,81,"context"],[94,24,83,88],[94,25,83,32,"client"],[94,31,83,38],[95,8,83,40,"ssrState"],[95,16,83,48],[95,19,83,81,"context"],[95,26,83,88],[95,27,83,40,"ssrState"],[95,35,83,48],[96,8,83,50,"queryClient"],[96,19,83,61],[96,22,83,81,"context"],[96,29,83,88],[96,30,83,50,"queryClient"],[96,41,83,61],[97,8,83,63,"prefetchQuery"],[97,21,83,76],[97,24,83,81,"context"],[97,31,83,88],[97,32,83,63,"prefetchQuery"],[97,45,83,76],[98,6,84,8],[98,10,84,14,"queryKey"],[98,18,84,22],[98,21,84,25],[98,25,84,25,"getQueryKeyInternal"],[98,57,84,44],[98,59,84,45,"path"],[98,63,84,49],[98,65,84,51,"input"],[98,70,84,56],[98,72,84,58],[98,79,84,65],[98,80,84,66],[99,6,85,8],[99,10,85,14,"defaultOpts"],[99,21,85,25],[99,24,85,28,"queryClient"],[99,35,85,39],[99,36,85,40,"getQueryDefaults"],[99,52,85,56],[99,53,85,57,"queryKey"],[99,61,85,65],[99,62,85,66],[100,6,86,8],[100,10,86,14,"isInputSkipToken"],[100,26,86,30],[100,29,86,33,"input"],[100,34,86,38],[100,39,86,43,"skipToken"],[100,60,86,52],[101,6,87,8],[101,10,87,12],[101,17,87,19,"window"],[101,23,87,25],[101,28,87,30],[101,39,87,41],[101,43,87,45,"ssrState"],[101,51,87,53],[101,56,87,58],[101,65,87,67],[101,69,87,71,"opts"],[101,73,87,75],[101,75,87,77,"trpc"],[101,79,87,81],[101,81,87,83,"ssr"],[101,84,87,86],[101,89,87,91],[101,94,87,96],[101,98,87,100],[101,99,87,101,"opts"],[101,103,87,105],[101,105,87,107,"enabled"],[101,112,87,114],[101,116,87,118,"defaultOpts"],[101,127,87,129],[101,129,87,131,"enabled"],[101,136,87,138],[101,142,87,144],[101,147,87,149],[101,151,87,153],[101,152,87,154,"isInputSkipToken"],[101,168,87,170],[101,172,87,174],[101,173,87,175,"queryClient"],[101,184,87,186],[101,185,87,187,"getQueryCache"],[101,198,87,200],[101,199,87,201],[101,200,87,202],[101,201,87,203,"find"],[101,205,87,207],[101,206,87,208],[102,8,88,12,"queryKey"],[103,6,89,8],[103,7,89,9],[103,8,89,10],[103,10,89,12],[104,8,90,12],[104,13,90,17,"prefetchQuery"],[104,26,90,30],[104,27,90,31,"queryKey"],[104,35,90,39],[104,37,90,41,"opts"],[104,41,90,45],[104,42,90,46],[105,6,91,8],[106,6,92,8],[106,10,92,14,"ssrOpts"],[106,17,92,21],[106,20,92,24,"useSSRQueryOptionsIfNeeded"],[106,46,92,50],[106,47,92,51,"queryKey"],[106,55,92,59],[106,57,92,61],[107,8,93,12],[107,11,93,15,"defaultOpts"],[107,22,93,26],[108,8,94,12],[108,11,94,15,"opts"],[109,6,95,8],[109,7,95,9],[109,8,95,10],[110,6,96,8],[110,10,96,14,"shouldAbortOnUnmount"],[110,30,96,34],[110,33,96,37,"opts"],[110,37,96,41],[110,39,96,43,"trpc"],[110,43,96,47],[110,45,96,49,"abortOnUnmount"],[110,59,96,63],[110,63,96,67,"config"],[110,69,96,73],[110,71,96,75,"abortOnUnmount"],[110,85,96,89],[110,89,96,93,"abortOnUnmount"],[110,103,96,107],[111,6,97,8],[111,10,97,14,"hook"],[111,14,97,18],[111,17,97,21],[111,21,97,21,"useQuery"],[111,41,97,29],[111,43,97,30],[112,8,98,12],[112,11,98,15,"ssrOpts"],[112,18,98,22],[113,8,99,12,"queryKey"],[113,16,99,20],[113,18,99,22,"queryKey"],[113,26,99,30],[114,8,100,12,"queryFn"],[114,15,100,19],[114,17,100,21,"isInputSkipToken"],[114,33,100,37],[114,36,100,40,"input"],[114,41,100,45],[115,10,100,45],[115,14,100,45,"_ref"],[115,18,100,45],[115,25,100,45,"_asyncToGenerator2"],[115,43,100,45],[115,44,100,45,"default"],[115,51,100,45],[115,53,100,48],[115,64,100,55,"queryFunctionContext"],[115,84,100,75],[115,86,100,78],[116,12,101,16],[116,16,101,22,"actualOpts"],[116,26,101,32],[116,29,101,35],[117,14,102,20],[117,17,102,23,"ssrOpts"],[117,24,102,30],[118,14,103,20,"trpc"],[118,18,103,24],[118,20,103,26],[119,16,104,24],[119,19,104,27,"ssrOpts"],[119,26,104,34],[119,28,104,36,"trpc"],[119,32,104,40],[120,16,105,24],[120,20,105,27,"shouldAbortOnUnmount"],[120,40,105,47],[120,43,105,50],[121,18,106,28,"signal"],[121,24,106,34],[121,26,106,36,"queryFunctionContext"],[121,46,106,56],[121,47,106,57,"signal"],[122,16,107,24],[122,17,107,25],[122,20,107,28],[123,18,108,28,"signal"],[123,24,108,34],[123,26,108,36],[124,16,109,24],[124,17,109,25],[125,14,110,20],[126,12,111,16],[126,13,111,17],[127,12,112,16],[127,16,112,22,"result"],[127,22,112,28],[127,31,112,37,"client"],[127,37,112,43],[127,38,112,44,"query"],[127,43,112,49],[127,44,112,50],[127,47,112,53],[127,51,112,53,"getClientArgs"],[127,79,112,66],[127,81,112,67,"queryKey"],[127,89,112,75],[127,91,112,77,"actualOpts"],[127,101,112,87],[127,102,112,88],[127,103,112,89],[128,12,113,16],[128,16,113,20],[128,20,113,20,"isAsyncIterable"],[128,60,113,35],[128,62,113,36,"result"],[128,68,113,42],[128,69,113,43],[128,71,113,45],[129,14,114,20],[129,21,114,27],[129,25,114,27,"buildQueryFromAsyncIterable"],[129,64,114,54],[129,66,114,55,"result"],[129,72,114,61],[129,74,114,63,"queryClient"],[129,85,114,74],[129,87,114,76,"queryKey"],[129,95,114,84],[129,96,114,85],[130,12,115,16],[131,12,116,16],[131,19,116,23,"result"],[131,25,116,29],[132,10,117,12],[132,11,117,13],[133,10,117,13],[133,27,117,13,"_x"],[133,29,117,13],[134,12,117,13],[134,19,117,13,"_ref"],[134,23,117,13],[134,24,117,13,"apply"],[134,29,117,13],[134,36,117,13,"arguments"],[134,45,117,13],[135,10,117,13],[136,8,117,13],[137,6,118,8],[137,7,118,9],[137,9,118,11,"queryClient"],[137,20,118,22],[137,21,118,23],[138,6,119,8,"hook"],[138,10,119,12],[138,11,119,13,"trpc"],[138,15,119,17],[138,18,119,20],[138,22,119,20,"useHookResult"],[138,47,119,33],[138,49,119,34],[139,8,120,12,"path"],[140,6,121,8],[140,7,121,9],[140,8,121,10],[141,6,122,8],[141,13,122,15,"hook"],[141,17,122,19],[142,4,123,4],[143,4,124,4],[143,13,124,13,"usePrefetchQuery$1"],[143,31,124,31,"usePrefetchQuery$1"],[143,32,124,32,"path"],[143,36,124,36],[143,38,124,38,"input"],[143,43,124,43],[143,45,124,45,"opts"],[143,49,124,49],[143,51,124,51],[144,6,125,8],[144,10,125,14,"context"],[144,17,125,21],[144,20,125,24,"useContext"],[144,30,125,34],[144,31,125,35],[144,32,125,36],[145,6,126,8],[145,10,126,14,"queryKey"],[145,18,126,22],[145,21,126,25],[145,25,126,25,"getQueryKeyInternal"],[145,57,126,44],[145,59,126,45,"path"],[145,63,126,49],[145,65,126,51,"input"],[145,70,126,56],[145,72,126,58],[145,79,126,65],[145,80,126,66],[146,6,127,8],[146,10,127,14,"isInputSkipToken"],[146,26,127,30],[146,29,127,33,"input"],[146,34,127,38],[146,39,127,43,"skipToken"],[146,60,127,52],[147,6,128,8],[147,10,128,14,"shouldAbortOnUnmount"],[147,30,128,34],[147,33,128,37,"opts"],[147,37,128,41],[147,39,128,43,"trpc"],[147,43,128,47],[147,45,128,49,"abortOnUnmount"],[147,59,128,63],[147,63,128,67,"config"],[147,69,128,73],[147,71,128,75,"abortOnUnmount"],[147,85,128,89],[147,89,128,93,"context"],[147,96,128,100],[147,97,128,101,"abortOnUnmount"],[147,111,128,115],[148,6,129,8],[148,10,129,8,"usePrefetchQuery"],[148,38,129,24],[148,40,129,25],[149,8,130,12],[149,11,130,15,"opts"],[149,15,130,19],[150,8,131,12,"queryKey"],[150,16,131,20],[150,18,131,22,"queryKey"],[150,26,131,30],[151,8,132,12,"queryFn"],[151,15,132,19],[151,17,132,21,"isInputSkipToken"],[151,33,132,37],[151,36,132,40,"input"],[151,41,132,45],[151,44,132,49,"queryFunctionContext"],[151,64,132,69],[151,68,132,72],[152,10,133,16],[152,14,133,22,"actualOpts"],[152,24,133,32],[152,27,133,35],[153,12,134,20,"trpc"],[153,16,134,24],[153,18,134,26],[154,14,135,24],[154,17,135,27,"opts"],[154,21,135,31],[154,23,135,33,"trpc"],[154,27,135,37],[155,14,136,24],[155,18,136,27,"shouldAbortOnUnmount"],[155,38,136,47],[155,41,136,50],[156,16,137,28,"signal"],[156,22,137,34],[156,24,137,36,"queryFunctionContext"],[156,44,137,56],[156,45,137,57,"signal"],[157,14,138,24],[157,15,138,25],[157,18,138,28],[157,19,138,29],[157,20,138,30],[158,12,139,20],[159,10,140,16],[159,11,140,17],[160,10,141,16],[160,17,141,23,"context"],[160,24,141,30],[160,25,141,31,"client"],[160,31,141,37],[160,32,141,38,"query"],[160,37,141,43],[160,38,141,44],[160,41,141,47],[160,45,141,47,"getClientArgs"],[160,73,141,60],[160,75,141,61,"queryKey"],[160,83,141,69],[160,85,141,71,"actualOpts"],[160,95,141,81],[160,96,141,82],[160,97,141,83],[161,8,142,12],[162,6,143,8],[162,7,143,9],[162,8,143,10],[163,4,144,4],[164,4,145,4],[164,13,145,13,"useSuspenseQuery$1"],[164,31,145,31,"useSuspenseQuery$1"],[164,32,145,32,"path"],[164,36,145,36],[164,38,145,38,"input"],[164,43,145,43],[164,45,145,45,"opts"],[164,49,145,49],[164,51,145,51],[165,6,146,8],[165,10,146,14,"context"],[165,17,146,21],[165,20,146,24,"useContext"],[165,30,146,34],[165,31,146,35],[165,32,146,36],[166,6,147,8],[166,10,147,14,"queryKey"],[166,18,147,22],[166,21,147,25],[166,25,147,25,"getQueryKeyInternal"],[166,57,147,44],[166,59,147,45,"path"],[166,63,147,49],[166,65,147,51,"input"],[166,70,147,56],[166,72,147,58],[166,79,147,65],[166,80,147,66],[167,6,148,8],[167,10,148,14,"shouldAbortOnUnmount"],[167,30,148,34],[167,33,148,37,"opts"],[167,37,148,41],[167,39,148,43,"trpc"],[167,43,148,47],[167,45,148,49,"abortOnUnmount"],[167,59,148,63],[167,63,148,67,"config"],[167,69,148,73],[167,71,148,75,"abortOnUnmount"],[167,85,148,89],[167,89,148,93,"context"],[167,96,148,100],[167,97,148,101,"abortOnUnmount"],[167,111,148,115],[168,6,149,8],[168,10,149,14,"hook"],[168,14,149,18],[168,17,149,21],[168,21,149,21,"useSuspenseQuery"],[168,49,149,37],[168,51,149,38],[169,8,150,12],[169,11,150,15,"opts"],[169,15,150,19],[170,8,151,12,"queryKey"],[170,16,151,20],[170,18,151,22,"queryKey"],[170,26,151,30],[171,8,152,12,"queryFn"],[171,15,152,19],[171,17,152,22,"queryFunctionContext"],[171,37,152,42],[171,41,152,45],[172,10,153,16],[172,14,153,22,"actualOpts"],[172,24,153,32],[172,27,153,35],[173,12,154,20],[173,15,154,23,"opts"],[173,19,154,27],[174,12,155,20,"trpc"],[174,16,155,24],[174,18,155,26],[175,14,156,24],[175,17,156,27,"opts"],[175,21,156,31],[175,23,156,33,"trpc"],[175,27,156,37],[176,14,157,24],[176,18,157,27,"shouldAbortOnUnmount"],[176,38,157,47],[176,41,157,50],[177,16,158,28,"signal"],[177,22,158,34],[177,24,158,36,"queryFunctionContext"],[177,44,158,56],[177,45,158,57,"signal"],[178,14,159,24],[178,15,159,25],[178,18,159,28],[179,16,160,28,"signal"],[179,22,160,34],[179,24,160,36],[180,14,161,24],[180,15,161,25],[181,12,162,20],[182,10,163,16],[182,11,163,17],[183,10,164,16],[183,17,164,23,"context"],[183,24,164,30],[183,25,164,31,"client"],[183,31,164,37],[183,32,164,38,"query"],[183,37,164,43],[183,38,164,44],[183,41,164,47],[183,45,164,47,"getClientArgs"],[183,73,164,60],[183,75,164,61,"queryKey"],[183,83,164,69],[183,85,164,71,"actualOpts"],[183,95,164,81],[183,96,164,82],[183,97,164,83],[184,8,165,12],[185,6,166,8],[185,7,166,9],[185,9,166,11,"context"],[185,16,166,18],[185,17,166,19,"queryClient"],[185,28,166,30],[185,29,166,31],[186,6,167,8,"hook"],[186,10,167,12],[186,11,167,13,"trpc"],[186,15,167,17],[186,18,167,20],[186,22,167,20,"useHookResult"],[186,47,167,33],[186,49,167,34],[187,8,168,12,"path"],[188,6,169,8],[188,7,169,9],[188,8,169,10],[189,6,170,8],[189,13,170,15],[189,14,171,12,"hook"],[189,18,171,16],[189,19,171,17,"data"],[189,23,171,21],[189,25,172,12,"hook"],[189,29,172,16],[189,30,173,9],[190,4,174,4],[191,4,175,4],[191,13,175,13,"useMutation$1"],[191,26,175,26,"useMutation$1"],[191,27,175,27,"path"],[191,31,175,31],[191,33,175,33,"opts"],[191,37,175,37],[191,39,175,39],[192,6,176,8],[192,10,176,8,"_useContext2"],[192,22,176,8],[192,25,176,40,"useContext"],[192,35,176,50],[192,36,176,51],[192,37,176,52],[193,8,176,16,"client"],[193,14,176,22],[193,17,176,22,"_useContext2"],[193,29,176,22],[193,30,176,16,"client"],[193,36,176,22],[194,8,176,24,"queryClient"],[194,19,176,35],[194,22,176,35,"_useContext2"],[194,34,176,35],[194,35,176,24,"queryClient"],[194,46,176,35],[195,6,177,8],[195,10,177,14,"mutationKey"],[195,21,177,25],[195,24,177,28],[195,28,177,28,"getMutationKeyInternal"],[195,63,177,50],[195,65,177,51,"path"],[195,69,177,55],[195,70,177,56],[196,6,178,8],[196,10,178,14,"defaultOpts"],[196,21,178,25],[196,24,178,28,"queryClient"],[196,35,178,39],[196,36,178,40,"defaultMutationOptions"],[196,58,178,62],[196,59,178,63,"queryClient"],[196,70,178,74],[196,71,178,75,"getMutationDefaults"],[196,90,178,94],[196,91,178,95,"mutationKey"],[196,102,178,106],[196,103,178,107],[196,104,178,108],[197,6,179,8],[197,10,179,14,"hook"],[197,14,179,18],[197,17,179,21],[197,21,179,21,"useMutation"],[197,44,179,32],[197,46,179,33],[198,8,180,12],[198,11,180,15,"opts"],[198,15,180,19],[199,8,181,12,"mutationKey"],[199,19,181,23],[199,21,181,25,"mutationKey"],[199,32,181,36],[200,8,182,12,"mutationFn"],[200,18,182,22],[200,20,182,25,"input"],[200,25,182,30],[200,29,182,33],[201,10,183,16],[201,17,183,23,"client"],[201,23,183,29],[201,24,183,30,"mutation"],[201,32,183,38],[201,33,183,39],[201,36,183,42],[201,40,183,42,"getClientArgs"],[201,68,183,55],[201,70,183,56],[201,71,184,20,"path"],[201,75,184,24],[201,77,185,20],[202,12,186,24,"input"],[203,10,187,20],[203,11,187,21],[203,12,188,17],[203,14,188,19,"opts"],[203,18,188,23],[203,19,188,24],[203,20,188,25],[204,8,189,12],[204,9,189,13],[205,8,190,12,"onSuccess"],[205,17,190,21,"onSuccess"],[205,18,190,21],[205,20,190,32],[206,10,190,32],[206,19,190,32,"_len"],[206,23,190,32],[206,26,190,32,"arguments"],[206,35,190,32],[206,36,190,32,"length"],[206,42,190,32],[206,44,190,26,"args"],[206,48,190,30],[206,55,190,30,"Array"],[206,60,190,30],[206,61,190,30,"_len"],[206,65,190,30],[206,68,190,30,"_key"],[206,72,190,30],[206,78,190,30,"_key"],[206,82,190,30],[206,85,190,30,"_len"],[206,89,190,30],[206,91,190,30,"_key"],[206,95,190,30],[207,12,190,26,"args"],[207,16,190,30],[207,17,190,30,"_key"],[207,21,190,30],[207,25,190,30,"arguments"],[207,34,190,30],[207,35,190,30,"_key"],[207,39,190,30],[208,10,190,30],[209,10,191,16],[209,14,191,22,"originalFn"],[209,24,191,32],[209,27,191,35,"originalFn"],[209,28,191,35],[209,33,191,39,"opts"],[209,37,191,43],[209,39,191,45,"onSuccess"],[209,48,191,54],[209,51,191,57],[209,54,191,60,"args"],[209,58,191,64],[209,59,191,65],[209,63,191,69,"defaultOpts"],[209,74,191,80],[209,76,191,82,"onSuccess"],[209,85,191,91],[209,88,191,94],[209,91,191,97,"args"],[209,95,191,101],[209,96,191,102],[210,10,192,16],[210,17,192,23,"mutationSuccessOverride"],[210,40,192,46],[210,41,192,47],[211,12,193,20,"originalFn"],[211,22,193,30],[212,12,194,20,"queryClient"],[212,23,194,31],[213,12,195,20,"meta"],[213,16,195,24],[213,18,195,26,"opts"],[213,22,195,30],[213,24,195,32,"meta"],[213,28,195,36],[213,32,195,40,"defaultOpts"],[213,43,195,51],[213,45,195,53,"meta"],[213,49,195,57],[213,53,195,61],[213,54,195,62],[214,10,196,16],[214,11,196,17],[214,12,196,18],[215,8,197,12],[216,6,198,8],[216,7,198,9],[216,9,198,11,"queryClient"],[216,20,198,22],[216,21,198,23],[217,6,199,8,"hook"],[217,10,199,12],[217,11,199,13,"trpc"],[217,15,199,17],[217,18,199,20],[217,22,199,20,"useHookResult"],[217,47,199,33],[217,49,199,34],[218,8,200,12,"path"],[219,6,201,8],[219,7,201,9],[219,8,201,10],[220,6,202,8],[220,13,202,15,"hook"],[220,17,202,19],[221,4,203,4],[222,4,204,4],[223,4,204,44],[223,13,204,53,"useSubscription"],[223,28,204,68,"useSubscription"],[223,29,204,69,"path"],[223,33,204,73],[223,35,204,75,"input"],[223,40,204,80],[223,42,204,82,"opts"],[223,46,204,86],[223,48,204,88],[224,6,205,8],[224,10,205,14,"enabled"],[224,17,205,21],[224,20,205,24,"opts"],[224,24,205,28],[224,26,205,30,"enabled"],[224,33,205,37],[224,37,205,41,"input"],[224,42,205,46],[224,47,205,51,"skipToken"],[224,68,205,60],[225,6,206,8],[225,10,206,14,"queryKey"],[225,18,206,22],[225,21,206,25],[225,25,206,25,"hashKey"],[225,44,206,32],[225,46,206,33],[225,50,206,33,"getQueryKeyInternal"],[225,82,206,52],[225,84,206,53,"path"],[225,88,206,57],[225,90,206,59,"input"],[225,95,206,64],[225,97,206,66],[225,102,206,71],[225,103,206,72],[225,104,206,73],[226,6,207,8],[226,10,207,8,"_useContext3"],[226,22,207,8],[226,25,207,27,"useContext"],[226,35,207,37],[226,36,207,38],[226,37,207,39],[227,8,207,16,"client"],[227,14,207,22],[227,17,207,22,"_useContext3"],[227,29,207,22],[227,30,207,16,"client"],[227,36,207,22],[228,6,208,8],[228,10,208,14,"optsRef"],[228,17,208,21],[228,20,208,24,"React"],[228,25,208,29],[228,26,208,30,"useRef"],[228,32,208,36],[228,33,208,37,"opts"],[228,37,208,41],[228,38,208,42],[229,6,209,8,"optsRef"],[229,13,209,15],[229,14,209,16,"current"],[229,21,209,23],[229,24,209,26,"opts"],[229,28,209,30],[230,6,210,8],[230,10,210,14,"trackedProps"],[230,22,210,26],[230,25,210,29,"React"],[230,30,210,34],[230,31,210,35,"useRef"],[230,37,210,41],[230,38,210,42],[230,42,210,46,"Set"],[230,45,210,49],[230,46,210,50],[230,48,210,52],[230,49,210,53],[230,50,210,54],[231,6,211,8],[231,10,211,14,"addTrackedProp"],[231,24,211,28],[231,27,211,31,"React"],[231,32,211,36],[231,33,211,37,"useCallback"],[231,44,211,48],[231,45,211,50,"key"],[231,48,211,53],[231,52,211,56],[232,8,212,12,"trackedProps"],[232,20,212,24],[232,21,212,25,"current"],[232,28,212,32],[232,29,212,33,"add"],[232,32,212,36],[232,33,212,37,"key"],[232,36,212,40],[232,37,212,41],[233,6,213,8],[233,7,213,9],[233,9,213,11],[233,11,213,13],[233,12,213,14],[234,6,214,8],[234,10,214,14,"currentSubscriptionRef"],[234,32,214,36],[234,35,214,39,"React"],[234,40,214,44],[234,41,214,45,"useRef"],[234,47,214,51],[234,48,214,52],[234,52,214,56],[234,53,214,57],[235,6,215,8],[235,10,215,14,"reset"],[235,15,215,19],[235,18,215,22,"React"],[235,23,215,27],[235,24,215,28,"useCallback"],[235,35,215,39],[235,36,215,40],[235,42,215,44],[236,8,216,12],[237,8,217,12,"currentSubscriptionRef"],[237,30,217,34],[237,31,217,35,"current"],[237,38,217,42],[237,41,217,45],[237,42,217,46],[238,8,218,12,"updateState"],[238,19,218,23],[238,20,218,24,"getInitialState"],[238,35,218,39],[238,36,218,40],[239,8,219,12],[239,12,219,16],[239,13,219,17,"enabled"],[239,20,219,24],[239,22,219,26],[240,10,220,16],[241,8,221,12],[242,8,222,12],[242,12,222,16,"isStopped"],[242,21,222,25],[242,24,222,28],[242,29,222,33],[243,8,223,12],[243,12,223,18,"subscription"],[243,24,223,30],[243,27,223,33,"client"],[243,33,223,39],[243,34,223,40,"subscription"],[243,46,223,52],[243,47,223,53,"path"],[243,51,223,57],[243,52,223,58,"join"],[243,56,223,62],[243,57,223,63],[243,60,223,66],[243,61,223,67],[243,63,223,69,"input"],[243,68,223,74],[243,72,223,78,"undefined"],[243,81,223,87],[243,83,223,89],[244,10,224,16,"onStarted"],[244,19,224,25],[244,21,224,27,"onStarted"],[244,22,224,27],[244,27,224,31],[245,12,225,20],[245,16,225,24],[245,17,225,25,"isStopped"],[245,26,225,34],[245,28,225,36],[246,14,226,24,"optsRef"],[246,21,226,31],[246,22,226,32,"current"],[246,29,226,39],[246,30,226,40,"onStarted"],[246,39,226,49],[246,42,226,52],[246,43,226,53],[247,14,227,24,"updateState"],[247,25,227,35],[247,26,227,37,"prev"],[247,30,227,41],[247,35,227,45],[248,16,228,32],[248,19,228,35,"prev"],[248,23,228,39],[249,16,229,32,"status"],[249,22,229,38],[249,24,229,40],[249,33,229,49],[250,16,230,32,"error"],[250,21,230,37],[250,23,230,39],[251,14,231,28],[251,15,231,29],[251,16,231,30],[251,17,231,31],[252,12,232,20],[253,10,233,16],[253,11,233,17],[254,10,234,16,"onData"],[254,16,234,22],[254,18,234,25,"data"],[254,22,234,29],[254,26,234,32],[255,12,235,20],[255,16,235,24],[255,17,235,25,"isStopped"],[255,26,235,34],[255,28,235,36],[256,14,236,24,"optsRef"],[256,21,236,31],[256,22,236,32,"current"],[256,29,236,39],[256,30,236,40,"onData"],[256,36,236,46],[256,39,236,49,"data"],[256,43,236,53],[256,44,236,54],[257,14,237,24,"updateState"],[257,25,237,35],[257,26,237,37,"prev"],[257,30,237,41],[257,35,237,45],[258,16,238,32],[258,19,238,35,"prev"],[258,23,238,39],[259,16,239,32,"status"],[259,22,239,38],[259,24,239,40],[259,33,239,49],[260,16,240,32,"data"],[260,20,240,36],[261,16,241,32,"error"],[261,21,241,37],[261,23,241,39],[262,14,242,28],[262,15,242,29],[262,16,242,30],[262,17,242,31],[263,12,243,20],[264,10,244,16],[264,11,244,17],[265,10,245,16,"onError"],[265,17,245,23],[265,19,245,26,"error"],[265,24,245,31],[265,28,245,34],[266,12,246,20],[266,16,246,24],[266,17,246,25,"isStopped"],[266,26,246,34],[266,28,246,36],[267,14,247,24,"optsRef"],[267,21,247,31],[267,22,247,32,"current"],[267,29,247,39],[267,30,247,40,"onError"],[267,37,247,47],[267,40,247,50,"error"],[267,45,247,55],[267,46,247,56],[268,14,248,24,"updateState"],[268,25,248,35],[268,26,248,37,"prev"],[268,30,248,41],[268,35,248,45],[269,16,249,32],[269,19,249,35,"prev"],[269,23,249,39],[270,16,250,32,"status"],[270,22,250,38],[270,24,250,40],[270,31,250,47],[271,16,251,32,"error"],[272,14,252,28],[272,15,252,29],[272,16,252,30],[272,17,252,31],[273,12,253,20],[274,10,254,16],[274,11,254,17],[275,10,255,16,"onConnectionStateChange"],[275,33,255,39],[275,35,255,42,"result"],[275,41,255,48],[275,45,255,51],[276,12,256,20],[276,16,256,26,"delta"],[276,21,256,31],[276,24,256,34],[277,14,257,24,"status"],[277,20,257,30],[277,22,257,32,"result"],[277,28,257,38],[277,29,257,39,"state"],[277,34,257,44],[278,14,258,24,"error"],[278,19,258,29],[278,21,258,31,"result"],[278,27,258,37],[278,28,258,38,"error"],[279,12,259,20],[279,13,259,21],[280,12,260,20,"updateState"],[280,23,260,31],[280,24,260,33,"prev"],[280,28,260,37],[280,32,260,40],[281,14,261,24],[281,21,261,31],[282,16,262,28],[282,19,262,31,"prev"],[282,23,262,35],[283,16,263,28],[283,19,263,31,"delta"],[284,14,264,24],[284,15,264,25],[285,12,265,20],[285,13,265,21],[285,14,265,22],[286,10,266,16],[287,8,267,12],[287,9,267,13],[287,10,267,14],[288,8,268,12,"currentSubscriptionRef"],[288,30,268,34],[288,31,268,35,"current"],[288,38,268,42],[288,41,268,45],[288,47,268,49],[289,10,269,16,"isStopped"],[289,19,269,25],[289,22,269,28],[289,26,269,32],[290,10,270,16,"subscription"],[290,22,270,28],[290,23,270,29,"unsubscribe"],[290,34,270,40],[290,35,270,41],[290,36,270,42],[291,8,271,12],[291,9,271,13],[292,8,272,8],[293,6,273,8],[293,7,273,9],[293,9,273,11],[293,10,274,12,"queryKey"],[293,18,274,20],[293,20,275,12,"enabled"],[293,27,275,19],[293,28,276,9],[293,29,276,10],[294,6,277,8],[294,10,277,14,"getInitialState"],[294,25,277,29],[294,28,277,32,"React"],[294,33,277,37],[294,34,277,38,"useCallback"],[294,45,277,49],[294,46,277,50],[294,52,277,54],[295,8,278,12],[295,15,278,19,"enabled"],[295,22,278,26],[295,25,278,29],[296,10,279,16,"data"],[296,14,279,20],[296,16,279,22,"undefined"],[296,25,279,31],[297,10,280,16,"error"],[297,15,280,21],[297,17,280,23],[297,21,280,27],[298,10,281,16,"status"],[298,16,281,22],[298,18,281,24],[298,30,281,36],[299,10,282,16,"reset"],[300,8,283,12],[300,9,283,13],[300,12,283,16],[301,10,284,16,"data"],[301,14,284,20],[301,16,284,22,"undefined"],[301,25,284,31],[302,10,285,16,"error"],[302,15,285,21],[302,17,285,23],[302,21,285,27],[303,10,286,16,"status"],[303,16,286,22],[303,18,286,24],[303,24,286,30],[304,10,287,16,"reset"],[305,8,288,12],[305,9,288,13],[306,6,289,8],[306,7,289,9],[306,9,289,11],[306,10,290,12,"enabled"],[306,17,290,19],[306,19,291,12,"reset"],[306,24,291,17],[306,25,292,9],[306,26,292,10],[307,6,293,8],[307,10,293,14,"resultRef"],[307,19,293,23],[307,22,293,26,"React"],[307,27,293,31],[307,28,293,32,"useRef"],[307,34,293,38],[307,35,293,39,"getInitialState"],[307,50,293,54],[307,51,293,55],[307,52,293,56],[307,53,293,57],[308,6,294,8],[308,10,294,8,"_React$useState3"],[308,26,294,8],[308,29,294,34,"React"],[308,34,294,39],[308,35,294,40,"useState"],[308,43,294,48],[308,44,294,49,"trackResult"],[308,55,294,60],[308,56,294,61,"resultRef"],[308,65,294,70],[308,66,294,71,"current"],[308,73,294,78],[308,75,294,80,"addTrackedProp"],[308,89,294,94],[308,90,294,95],[308,91,294,96],[309,8,294,96,"_React$useState4"],[309,24,294,96],[309,31,294,96,"_slicedToArray2"],[309,46,294,96],[309,47,294,96,"default"],[309,54,294,96],[309,56,294,96,"_React$useState3"],[309,72,294,96],[310,8,294,15,"state"],[310,13,294,20],[310,16,294,20,"_React$useState4"],[310,32,294,20],[311,8,294,22,"setState"],[311,16,294,30],[311,19,294,30,"_React$useState4"],[311,35,294,30],[312,6,295,8,"state"],[312,11,295,13],[312,12,295,14,"reset"],[312,17,295,19],[312,20,295,22,"reset"],[312,25,295,27],[313,6,296,8],[313,10,296,14,"updateState"],[313,21,296,25],[313,24,296,28,"React"],[313,29,296,33],[313,30,296,34,"useCallback"],[313,41,296,45],[313,42,296,47,"callback"],[313,50,296,55],[313,54,296,58],[314,8,297,12],[314,12,297,18,"prev"],[314,16,297,22],[314,19,297,25,"resultRef"],[314,28,297,34],[314,29,297,35,"current"],[314,36,297,42],[315,8,298,12],[315,12,298,18,"next"],[315,16,298,22],[315,19,298,25,"resultRef"],[315,28,298,34],[315,29,298,35,"current"],[315,36,298,42],[315,39,298,45,"callback"],[315,47,298,53],[315,48,298,54,"prev"],[315,52,298,58],[315,53,298,59],[316,8,299,12],[316,12,299,16,"shouldUpdate"],[316,24,299,28],[316,27,299,31],[316,32,299,36],[317,8,300,12],[317,13,300,17],[317,17,300,23,"key"],[317,20,300,26],[317,24,300,30,"trackedProps"],[317,36,300,42],[317,37,300,43,"current"],[317,44,300,50],[317,46,300,51],[318,10,301,16],[318,14,301,20,"prev"],[318,18,301,24],[318,19,301,25,"key"],[318,22,301,28],[318,23,301,29],[318,28,301,34,"next"],[318,32,301,38],[318,33,301,39,"key"],[318,36,301,42],[318,37,301,43],[318,39,301,45],[319,12,302,20,"shouldUpdate"],[319,24,302,32],[319,27,302,35],[319,31,302,39],[320,12,303,20],[321,10,304,16],[322,8,305,12],[323,8,306,12],[323,12,306,16,"shouldUpdate"],[323,24,306,28],[323,26,306,30],[324,10,307,16,"setState"],[324,18,307,24],[324,19,307,25,"trackResult"],[324,30,307,36],[324,31,307,37,"next"],[324,35,307,41],[324,37,307,43,"addTrackedProp"],[324,51,307,57],[324,52,307,58],[324,53,307,59],[325,8,308,12],[326,6,309,8],[326,7,309,9],[326,9,309,11],[326,10,310,12,"addTrackedProp"],[326,24,310,26],[326,25,311,9],[326,26,311,10],[327,6,312,8,"React"],[327,11,312,13],[327,12,312,14,"useEffect"],[327,21,312,23],[327,22,312,24],[327,28,312,28],[328,8,313,12],[328,12,313,16],[328,13,313,17,"enabled"],[328,20,313,24],[328,22,313,26],[329,10,314,16],[330,8,315,12],[331,8,316,12,"reset"],[331,13,316,17],[331,14,316,18],[331,15,316,19],[332,8,317,12],[332,15,317,19],[332,21,317,23],[333,10,318,16,"currentSubscriptionRef"],[333,32,318,38],[333,33,318,39,"current"],[333,40,318,46],[333,43,318,49],[333,44,318,50],[334,8,319,12],[334,9,319,13],[335,6,320,8],[335,7,320,9],[335,9,320,11],[335,10,321,12,"reset"],[335,15,321,17],[335,17,322,12,"enabled"],[335,24,322,19],[335,25,323,9],[335,26,323,10],[336,6,324,8],[336,13,324,15,"state"],[336,18,324,20],[337,4,325,4],[338,4,326,4],[338,13,326,13,"useInfiniteQuery$1"],[338,31,326,31,"useInfiniteQuery$1"],[338,32,326,32,"path"],[338,36,326,36],[338,38,326,38,"input"],[338,43,326,43],[338,45,326,45,"opts"],[338,49,326,49],[338,51,326,51],[339,6,327,8],[339,10,327,8,"_useContext4"],[339,22,327,8],[339,25,327,89,"useContext"],[339,35,327,99],[339,36,327,100],[339,37,327,101],[340,8,327,16,"client"],[340,14,327,22],[340,17,327,22,"_useContext4"],[340,29,327,22],[340,30,327,16,"client"],[340,36,327,22],[341,8,327,24,"ssrState"],[341,16,327,32],[341,19,327,32,"_useContext4"],[341,31,327,32],[341,32,327,24,"ssrState"],[341,40,327,32],[342,8,327,34,"prefetchInfiniteQuery"],[342,29,327,55],[342,32,327,55,"_useContext4"],[342,44,327,55],[342,45,327,34,"prefetchInfiniteQuery"],[342,66,327,55],[343,8,327,57,"queryClient"],[343,19,327,68],[343,22,327,68,"_useContext4"],[343,34,327,68],[343,35,327,57,"queryClient"],[343,46,327,68],[344,8,327,70,"abortOnUnmount"],[344,22,327,84],[344,25,327,84,"_useContext4"],[344,37,327,84],[344,38,327,70,"abortOnUnmount"],[344,52,327,84],[345,6,328,8],[345,10,328,14,"queryKey"],[345,18,328,22],[345,21,328,25],[345,25,328,25,"getQueryKeyInternal"],[345,57,328,44],[345,59,328,45,"path"],[345,63,328,49],[345,65,328,51,"input"],[345,70,328,56],[345,72,328,58],[345,82,328,68],[345,83,328,69],[346,6,329,8],[346,10,329,14,"defaultOpts"],[346,21,329,25],[346,24,329,28,"queryClient"],[346,35,329,39],[346,36,329,40,"getQueryDefaults"],[346,52,329,56],[346,53,329,57,"queryKey"],[346,61,329,65],[346,62,329,66],[347,6,330,8],[347,10,330,14,"isInputSkipToken"],[347,26,330,30],[347,29,330,33,"input"],[347,34,330,38],[347,39,330,43,"skipToken"],[347,60,330,52],[348,6,331,8],[348,10,331,12],[348,17,331,19,"window"],[348,23,331,25],[348,28,331,30],[348,39,331,41],[348,43,331,45,"ssrState"],[348,51,331,53],[348,56,331,58],[348,65,331,67],[348,69,331,71,"opts"],[348,73,331,75],[348,75,331,77,"trpc"],[348,79,331,81],[348,81,331,83,"ssr"],[348,84,331,86],[348,89,331,91],[348,94,331,96],[348,98,331,100],[348,99,331,101,"opts"],[348,103,331,105],[348,105,331,107,"enabled"],[348,112,331,114],[348,116,331,118,"defaultOpts"],[348,127,331,129],[348,129,331,131,"enabled"],[348,136,331,138],[348,142,331,144],[348,147,331,149],[348,151,331,153],[348,152,331,154,"isInputSkipToken"],[348,168,331,170],[348,172,331,174],[348,173,331,175,"queryClient"],[348,184,331,186],[348,185,331,187,"getQueryCache"],[348,198,331,200],[348,199,331,201],[348,200,331,202],[348,201,331,203,"find"],[348,205,331,207],[348,206,331,208],[349,8,332,12,"queryKey"],[350,6,333,8],[350,7,333,9],[350,8,333,10],[350,10,333,12],[351,8,334,12],[351,13,334,17,"prefetchInfiniteQuery"],[351,34,334,38],[351,35,334,39,"queryKey"],[351,43,334,47],[351,45,334,49],[352,10,335,16],[352,13,335,19,"defaultOpts"],[352,24,335,30],[353,10,336,16],[353,13,336,19,"opts"],[354,8,337,12],[354,9,337,13],[354,10,337,14],[355,6,338,8],[356,6,339,8],[356,10,339,14,"ssrOpts"],[356,17,339,21],[356,20,339,24,"useSSRQueryOptionsIfNeeded"],[356,46,339,50],[356,47,339,51,"queryKey"],[356,55,339,59],[356,57,339,61],[357,8,340,12],[357,11,340,15,"defaultOpts"],[357,22,340,26],[358,8,341,12],[358,11,341,15,"opts"],[359,6,342,8],[359,7,342,9],[359,8,342,10],[360,6,343,8],[361,6,344,8],[361,10,344,14,"shouldAbortOnUnmount"],[361,30,344,34],[361,33,344,37,"opts"],[361,37,344,41],[361,39,344,43,"trpc"],[361,43,344,47],[361,45,344,49,"abortOnUnmount"],[361,59,344,63],[361,63,344,67,"abortOnUnmount"],[361,77,344,81],[362,6,345,8],[362,10,345,14,"hook"],[362,14,345,18],[362,17,345,21],[362,21,345,21,"useInfiniteQuery"],[362,49,345,37],[362,51,345,38],[363,8,346,12],[363,11,346,15,"ssrOpts"],[363,18,346,22],[364,8,347,12,"initialPageParam"],[364,24,347,28],[364,26,347,30,"opts"],[364,30,347,34],[364,31,347,35,"initialCursor"],[364,44,347,48],[364,48,347,52],[364,52,347,56],[365,8,348,12,"persister"],[365,17,348,21],[365,19,348,23,"opts"],[365,23,348,27],[365,24,348,28,"persister"],[365,33,348,37],[366,8,349,12,"queryKey"],[366,16,349,20],[366,18,349,22,"queryKey"],[366,26,349,30],[367,8,350,12,"queryFn"],[367,15,350,19],[367,17,350,21,"isInputSkipToken"],[367,33,350,37],[367,36,350,40,"input"],[367,41,350,45],[367,44,350,49,"queryFunctionContext"],[367,64,350,69],[367,68,350,72],[368,10,351,16],[368,14,351,22,"actualOpts"],[368,24,351,32],[368,27,351,35],[369,12,352,20],[369,15,352,23,"ssrOpts"],[369,22,352,30],[370,12,353,20,"trpc"],[370,16,353,24],[370,18,353,26],[371,14,354,24],[371,17,354,27,"ssrOpts"],[371,24,354,34],[371,26,354,36,"trpc"],[371,30,354,40],[372,14,355,24],[372,18,355,27,"shouldAbortOnUnmount"],[372,38,355,47],[372,41,355,50],[373,16,356,28,"signal"],[373,22,356,34],[373,24,356,36,"queryFunctionContext"],[373,44,356,56],[373,45,356,57,"signal"],[374,14,357,24],[374,15,357,25],[374,18,357,28],[375,16,358,28,"signal"],[375,22,358,34],[375,24,358,36],[376,14,359,24],[376,15,359,25],[377,12,360,20],[378,10,361,16],[378,11,361,17],[379,10,362,16],[379,17,362,23,"client"],[379,23,362,29],[379,24,362,30,"query"],[379,29,362,35],[379,30,362,36],[379,33,362,39],[379,37,362,39,"getClientArgs"],[379,65,362,52],[379,67,362,53,"queryKey"],[379,75,362,61],[379,77,362,63,"actualOpts"],[379,87,362,73],[379,89,362,75],[380,12,363,20,"pageParam"],[380,21,363,29],[380,23,363,31,"queryFunctionContext"],[380,43,363,51],[380,44,363,52,"pageParam"],[380,53,363,61],[380,57,363,65,"opts"],[380,61,363,69],[380,62,363,70,"initialCursor"],[380,75,363,83],[381,12,364,20,"direction"],[381,21,364,29],[381,23,364,31,"queryFunctionContext"],[381,43,364,51],[381,44,364,52,"direction"],[382,10,365,16],[382,11,365,17],[382,12,365,18],[382,13,365,19],[383,8,366,12],[384,6,367,8],[384,7,367,9],[384,9,367,11,"queryClient"],[384,20,367,22],[384,21,367,23],[385,6,368,8,"hook"],[385,10,368,12],[385,11,368,13,"trpc"],[385,15,368,17],[385,18,368,20],[385,22,368,20,"useHookResult"],[385,47,368,33],[385,49,368,34],[386,8,369,12,"path"],[387,6,370,8],[387,7,370,9],[387,8,370,10],[388,6,371,8],[388,13,371,15,"hook"],[388,17,371,19],[389,4,372,4],[390,4,373,4],[390,13,373,13,"usePrefetchInfiniteQuery$1"],[390,39,373,39,"usePrefetchInfiniteQuery$1"],[390,40,373,40,"path"],[390,44,373,44],[390,46,373,46,"input"],[390,51,373,51],[390,53,373,53,"opts"],[390,57,373,57],[390,59,373,59],[391,6,374,8],[391,10,374,14,"context"],[391,17,374,21],[391,20,374,24,"useContext"],[391,30,374,34],[391,31,374,35],[391,32,374,36],[392,6,375,8],[392,10,375,14,"queryKey"],[392,18,375,22],[392,21,375,25],[392,25,375,25,"getQueryKeyInternal"],[392,57,375,44],[392,59,375,45,"path"],[392,63,375,49],[392,65,375,51,"input"],[392,70,375,56],[392,72,375,58],[392,82,375,68],[392,83,375,69],[393,6,376,8],[393,10,376,14,"defaultOpts"],[393,21,376,25],[393,24,376,28,"context"],[393,31,376,35],[393,32,376,36,"queryClient"],[393,43,376,47],[393,44,376,48,"getQueryDefaults"],[393,60,376,64],[393,61,376,65,"queryKey"],[393,69,376,73],[393,70,376,74],[394,6,377,8],[394,10,377,14,"isInputSkipToken"],[394,26,377,30],[394,29,377,33,"input"],[394,34,377,38],[394,39,377,43,"skipToken"],[394,60,377,52],[395,6,378,8],[395,10,378,14,"ssrOpts"],[395,17,378,21],[395,20,378,24,"useSSRQueryOptionsIfNeeded"],[395,46,378,50],[395,47,378,51,"queryKey"],[395,55,378,59],[395,57,378,61],[396,8,379,12],[396,11,379,15,"defaultOpts"],[396,22,379,26],[397,8,380,12],[397,11,380,15,"opts"],[398,6,381,8],[398,7,381,9],[398,8,381,10],[399,6,382,8],[400,6,383,8],[400,10,383,14,"shouldAbortOnUnmount"],[400,30,383,34],[400,33,383,37,"opts"],[400,37,383,41],[400,39,383,43,"trpc"],[400,43,383,47],[400,45,383,49,"abortOnUnmount"],[400,59,383,63],[400,63,383,67,"context"],[400,70,383,74],[400,71,383,75,"abortOnUnmount"],[400,85,383,89],[401,6,384,8],[401,10,384,8,"usePrefetchInfiniteQuery"],[401,46,384,32],[401,48,384,33],[402,8,385,12],[402,11,385,15,"opts"],[402,15,385,19],[403,8,386,12,"initialPageParam"],[403,24,386,28],[403,26,386,30,"opts"],[403,30,386,34],[403,31,386,35,"initialCursor"],[403,44,386,48],[403,48,386,52],[403,52,386,56],[404,8,387,12,"queryKey"],[404,16,387,20],[405,8,388,12,"queryFn"],[405,15,388,19],[405,17,388,21,"isInputSkipToken"],[405,33,388,37],[405,36,388,40,"input"],[405,41,388,45],[405,44,388,49,"queryFunctionContext"],[405,64,388,69],[405,68,388,72],[406,10,389,16],[406,14,389,22,"actualOpts"],[406,24,389,32],[406,27,389,35],[407,12,390,20],[407,15,390,23,"ssrOpts"],[407,22,390,30],[408,12,391,20,"trpc"],[408,16,391,24],[408,18,391,26],[409,14,392,24],[409,17,392,27,"ssrOpts"],[409,24,392,34],[409,26,392,36,"trpc"],[409,30,392,40],[410,14,393,24],[410,18,393,27,"shouldAbortOnUnmount"],[410,38,393,47],[410,41,393,50],[411,16,394,28,"signal"],[411,22,394,34],[411,24,394,36,"queryFunctionContext"],[411,44,394,56],[411,45,394,57,"signal"],[412,14,395,24],[412,15,395,25],[412,18,395,28],[412,19,395,29],[412,20,395,30],[413,12,396,20],[414,10,397,16],[414,11,397,17],[415,10,398,16],[415,17,398,23,"context"],[415,24,398,30],[415,25,398,31,"client"],[415,31,398,37],[415,32,398,38,"query"],[415,37,398,43],[415,38,398,44],[415,41,398,47],[415,45,398,47,"getClientArgs"],[415,73,398,60],[415,75,398,61,"queryKey"],[415,83,398,69],[415,85,398,71,"actualOpts"],[415,95,398,81],[415,97,398,83],[416,12,399,20,"pageParam"],[416,21,399,29],[416,23,399,31,"queryFunctionContext"],[416,43,399,51],[416,44,399,52,"pageParam"],[416,53,399,61],[416,57,399,65,"opts"],[416,61,399,69],[416,62,399,70,"initialCursor"],[416,75,399,83],[417,12,400,20,"direction"],[417,21,400,29],[417,23,400,31,"queryFunctionContext"],[417,43,400,51],[417,44,400,52,"direction"],[418,10,401,16],[418,11,401,17],[418,12,401,18],[418,13,401,19],[419,8,402,12],[420,6,403,8],[420,7,403,9],[420,8,403,10],[421,4,404,4],[422,4,405,4],[422,13,405,13,"useSuspenseInfiniteQuery$1"],[422,39,405,39,"useSuspenseInfiniteQuery$1"],[422,40,405,40,"path"],[422,44,405,44],[422,46,405,46,"input"],[422,51,405,51],[422,53,405,53,"opts"],[422,57,405,57],[422,59,405,59],[423,6,406,8],[423,10,406,14,"context"],[423,17,406,21],[423,20,406,24,"useContext"],[423,30,406,34],[423,31,406,35],[423,32,406,36],[424,6,407,8],[424,10,407,14,"queryKey"],[424,18,407,22],[424,21,407,25],[424,25,407,25,"getQueryKeyInternal"],[424,57,407,44],[424,59,407,45,"path"],[424,63,407,49],[424,65,407,51,"input"],[424,70,407,56],[424,72,407,58],[424,82,407,68],[424,83,407,69],[425,6,408,8],[425,10,408,14,"defaultOpts"],[425,21,408,25],[425,24,408,28,"context"],[425,31,408,35],[425,32,408,36,"queryClient"],[425,43,408,47],[425,44,408,48,"getQueryDefaults"],[425,60,408,64],[425,61,408,65,"queryKey"],[425,69,408,73],[425,70,408,74],[426,6,409,8],[426,10,409,14,"ssrOpts"],[426,17,409,21],[426,20,409,24,"useSSRQueryOptionsIfNeeded"],[426,46,409,50],[426,47,409,51,"queryKey"],[426,55,409,59],[426,57,409,61],[427,8,410,12],[427,11,410,15,"defaultOpts"],[427,22,410,26],[428,8,411,12],[428,11,411,15,"opts"],[429,6,412,8],[429,7,412,9],[429,8,412,10],[430,6,413,8],[431,6,414,8],[431,10,414,14,"shouldAbortOnUnmount"],[431,30,414,34],[431,33,414,37,"opts"],[431,37,414,41],[431,39,414,43,"trpc"],[431,43,414,47],[431,45,414,49,"abortOnUnmount"],[431,59,414,63],[431,63,414,67,"context"],[431,70,414,74],[431,71,414,75,"abortOnUnmount"],[431,85,414,89],[432,6,415,8],[432,10,415,14,"hook"],[432,14,415,18],[432,17,415,21],[432,21,415,21,"useSuspenseInfiniteQuery"],[432,57,415,45],[432,59,415,46],[433,8,416,12],[433,11,416,15,"opts"],[433,15,416,19],[434,8,417,12,"initialPageParam"],[434,24,417,28],[434,26,417,30,"opts"],[434,30,417,34],[434,31,417,35,"initialCursor"],[434,44,417,48],[434,48,417,52],[434,52,417,56],[435,8,418,12,"queryKey"],[435,16,418,20],[436,8,419,12,"queryFn"],[436,15,419,19],[436,17,419,22,"queryFunctionContext"],[436,37,419,42],[436,41,419,45],[437,10,420,16],[437,14,420,22,"actualOpts"],[437,24,420,32],[437,27,420,35],[438,12,421,20],[438,15,421,23,"ssrOpts"],[438,22,421,30],[439,12,422,20,"trpc"],[439,16,422,24],[439,18,422,26],[440,14,423,24],[440,17,423,27,"ssrOpts"],[440,24,423,34],[440,26,423,36,"trpc"],[440,30,423,40],[441,14,424,24],[441,18,424,27,"shouldAbortOnUnmount"],[441,38,424,47],[441,41,424,50],[442,16,425,28,"signal"],[442,22,425,34],[442,24,425,36,"queryFunctionContext"],[442,44,425,56],[442,45,425,57,"signal"],[443,14,426,24],[443,15,426,25],[443,18,426,28],[443,19,426,29],[443,20,426,30],[444,12,427,20],[445,10,428,16],[445,11,428,17],[446,10,429,16],[446,17,429,23,"context"],[446,24,429,30],[446,25,429,31,"client"],[446,31,429,37],[446,32,429,38,"query"],[446,37,429,43],[446,38,429,44],[446,41,429,47],[446,45,429,47,"getClientArgs"],[446,73,429,60],[446,75,429,61,"queryKey"],[446,83,429,69],[446,85,429,71,"actualOpts"],[446,95,429,81],[446,97,429,83],[447,12,430,20,"pageParam"],[447,21,430,29],[447,23,430,31,"queryFunctionContext"],[447,43,430,51],[447,44,430,52,"pageParam"],[447,53,430,61],[447,57,430,65,"opts"],[447,61,430,69],[447,62,430,70,"initialCursor"],[447,75,430,83],[448,12,431,20,"direction"],[448,21,431,29],[448,23,431,31,"queryFunctionContext"],[448,43,431,51],[448,44,431,52,"direction"],[449,10,432,16],[449,11,432,17],[449,12,432,18],[449,13,432,19],[450,8,433,12],[451,6,434,8],[451,7,434,9],[451,9,434,11,"context"],[451,16,434,18],[451,17,434,19,"queryClient"],[451,28,434,30],[451,29,434,31],[452,6,435,8,"hook"],[452,10,435,12],[452,11,435,13,"trpc"],[452,15,435,17],[452,18,435,20],[452,22,435,20,"useHookResult"],[452,47,435,33],[452,49,435,34],[453,8,436,12,"path"],[454,6,437,8],[454,7,437,9],[454,8,437,10],[455,6,438,8],[456,6,439,8],[456,13,439,15],[456,14,440,12,"hook"],[456,18,440,16],[456,19,440,17,"data"],[456,23,440,21],[456,25,441,12,"hook"],[456,29,441,16],[456,30,442,9],[457,4,443,4],[458,4,444,4],[458,8,444,10,"useQueries$1"],[458,20,444,22],[458,23,444,25,"useQueries$1"],[458,24,444,26,"queriesCallback"],[458,39,444,41],[458,41,444,43,"options"],[458,48,444,50],[458,53,444,53],[459,6,445,8],[459,10,445,8,"_useContext5"],[459,22,445,8],[459,25,445,65,"useContext"],[459,35,445,75],[459,36,445,76],[459,37,445,77],[460,8,445,16,"ssrState"],[460,16,445,24],[460,19,445,24,"_useContext5"],[460,31,445,24],[460,32,445,16,"ssrState"],[460,40,445,24],[461,8,445,26,"queryClient"],[461,19,445,37],[461,22,445,37,"_useContext5"],[461,34,445,37],[461,35,445,26,"queryClient"],[461,46,445,37],[462,8,445,39,"prefetchQuery"],[462,21,445,52],[462,24,445,52,"_useContext5"],[462,36,445,52],[462,37,445,39,"prefetchQuery"],[462,50,445,52],[463,8,445,54,"client"],[463,14,445,60],[463,17,445,60,"_useContext5"],[463,29,445,60],[463,30,445,54,"client"],[463,36,445,60],[464,6,446,8],[464,10,446,14,"proxy"],[464,15,446,19],[464,18,446,22],[464,22,446,22,"createUseQueries"],[464,55,446,38],[464,57,446,39,"client"],[464,63,446,45],[464,64,446,46],[465,6,447,8],[465,10,447,14,"queries"],[465,17,447,21],[465,20,447,24,"queriesCallback"],[465,35,447,39],[465,36,447,40,"proxy"],[465,41,447,45],[465,42,447,46],[466,6,448,8],[466,10,448,12],[466,17,448,19,"window"],[466,23,448,25],[466,28,448,30],[466,39,448,41],[466,43,448,45,"ssrState"],[466,51,448,53],[466,56,448,58],[466,65,448,67],[466,67,448,69],[467,8,449,12],[467,13,449,17],[467,17,449,23,"query"],[467,22,449,28],[467,26,449,32,"queries"],[467,33,449,39],[467,35,449,40],[468,10,450,16],[468,14,450,22,"queryOption"],[468,25,450,33],[468,28,450,36,"query"],[468,33,450,41],[469,10,451,16],[469,14,451,20,"queryOption"],[469,25,451,31],[469,26,451,32,"trpc"],[469,30,451,36],[469,32,451,38,"ssr"],[469,35,451,41],[469,40,451,46],[469,45,451,51],[469,49,451,55],[469,50,451,56,"queryClient"],[469,61,451,67],[469,62,451,68,"getQueryCache"],[469,75,451,81],[469,76,451,82],[469,77,451,83],[469,78,451,84,"find"],[469,82,451,88],[469,83,451,89],[470,12,452,20,"queryKey"],[470,20,452,28],[470,22,452,30,"queryOption"],[470,33,452,41],[470,34,452,42,"queryKey"],[471,10,453,16],[471,11,453,17],[471,12,453,18],[471,14,453,20],[472,12,454,20],[472,17,454,25,"prefetchQuery"],[472,30,454,38],[472,31,454,39,"queryOption"],[472,42,454,50],[472,43,454,51,"queryKey"],[472,51,454,59],[472,53,454,61,"queryOption"],[472,64,454,72],[472,65,454,73],[473,10,455,16],[474,8,456,12],[475,6,457,8],[476,6,458,8],[476,13,458,15],[476,17,458,15,"useQueries"],[476,39,458,25],[476,41,458,26],[477,8,459,12,"queries"],[477,15,459,19],[477,17,459,21,"queries"],[477,24,459,28],[477,25,459,29,"map"],[477,28,459,32],[477,29,459,34,"query"],[477,34,459,39],[477,39,459,43],[478,10,460,20],[478,13,460,23,"query"],[478,18,460,28],[479,10,461,20,"queryKey"],[479,18,461,28],[479,20,461,30,"query"],[479,25,461,35],[479,26,461,36,"queryKey"],[480,8,462,16],[480,9,462,17],[480,10,462,18],[480,11,462,19],[481,8,463,12,"combine"],[481,15,463,19],[481,17,463,21,"options"],[481,24,463,28],[481,26,463,30,"combine"],[482,6,464,8],[482,7,464,9],[482,9,464,11,"queryClient"],[482,20,464,22],[482,21,464,23],[483,4,465,4],[483,5,465,5],[484,4,466,4],[484,8,466,10,"useSuspenseQueries$1"],[484,28,466,30],[484,31,466,34,"queriesCallback"],[484,46,466,49],[484,50,466,52],[485,6,467,8],[485,10,467,8,"_useContext6"],[485,22,467,8],[485,25,467,40,"useContext"],[485,35,467,50],[485,36,467,51],[485,37,467,52],[486,8,467,16,"queryClient"],[486,19,467,27],[486,22,467,27,"_useContext6"],[486,34,467,27],[486,35,467,16,"queryClient"],[486,46,467,27],[487,8,467,29,"client"],[487,14,467,35],[487,17,467,35,"_useContext6"],[487,29,467,35],[487,30,467,29,"client"],[487,36,467,35],[488,6,468,8],[488,10,468,14,"proxy"],[488,15,468,19],[488,18,468,22],[488,22,468,22,"createUseQueries"],[488,55,468,38],[488,57,468,39,"client"],[488,63,468,45],[488,64,468,46],[489,6,469,8],[489,10,469,14,"queries"],[489,17,469,21],[489,20,469,24,"queriesCallback"],[489,35,469,39],[489,36,469,40,"proxy"],[489,41,469,45],[489,42,469,46],[490,6,470,8],[490,10,470,14,"hook"],[490,14,470,18],[490,17,470,21],[490,21,470,21,"useSuspenseQueries"],[490,51,470,39],[490,53,470,40],[491,8,471,12,"queries"],[491,15,471,19],[491,17,471,21,"queries"],[491,24,471,28],[491,25,471,29,"map"],[491,28,471,32],[491,29,471,34,"query"],[491,34,471,39],[491,39,471,43],[492,10,472,20],[492,13,472,23,"query"],[492,18,472,28],[493,10,473,20,"queryFn"],[493,17,473,27],[493,19,473,29,"query"],[493,24,473,34],[493,25,473,35,"queryFn"],[493,32,473,42],[494,10,474,20,"queryKey"],[494,18,474,28],[494,20,474,30,"query"],[494,25,474,35],[494,26,474,36,"queryKey"],[495,8,475,16],[495,9,475,17],[495,10,475,18],[496,6,476,8],[496,7,476,9],[496,9,476,11,"queryClient"],[496,20,476,22],[496,21,476,23],[497,6,477,8],[497,13,477,15],[497,14,478,12,"hook"],[497,18,478,16],[497,19,478,17,"map"],[497,22,478,20],[497,23,478,22,"h"],[497,24,478,23],[497,28,478,26,"h"],[497,29,478,27],[497,30,478,28,"data"],[497,34,478,32],[497,35,478,33],[497,37,479,12,"hook"],[497,41,479,16],[497,42,480,9],[498,4,481,4],[498,5,481,5],[499,4,482,4],[499,11,482,11],[500,6,483,8,"Provider"],[500,14,483,16],[500,16,483,18,"TRPCProvider"],[500,28,483,30],[501,6,484,8,"createClient"],[501,18,484,20],[502,6,485,8,"useContext"],[502,16,485,18],[503,6,486,8,"useUtils"],[503,14,486,16],[503,16,486,18,"useContext"],[503,26,486,28],[504,6,487,8,"useQuery"],[504,14,487,16],[504,16,487,18,"useQuery$1"],[504,26,487,28],[505,6,488,8,"usePrefetchQuery"],[505,22,488,24],[505,24,488,26,"usePrefetchQuery$1"],[505,42,488,44],[506,6,489,8,"useSuspenseQuery"],[506,22,489,24],[506,24,489,26,"useSuspenseQuery$1"],[506,42,489,44],[507,6,490,8,"useQueries"],[507,16,490,18],[507,18,490,20,"useQueries$1"],[507,30,490,32],[508,6,491,8,"useSuspenseQueries"],[508,24,491,26],[508,26,491,28,"useSuspenseQueries$1"],[508,46,491,48],[509,6,492,8,"useMutation"],[509,17,492,19],[509,19,492,21,"useMutation$1"],[509,32,492,34],[510,6,493,8,"useSubscription"],[510,21,493,23],[511,6,494,8,"useInfiniteQuery"],[511,22,494,24],[511,24,494,26,"useInfiniteQuery$1"],[511,42,494,44],[512,6,495,8,"usePrefetchInfiniteQuery"],[512,30,495,32],[512,32,495,34,"usePrefetchInfiniteQuery$1"],[512,58,495,60],[513,6,496,8,"useSuspenseInfiniteQuery"],[513,30,496,32],[513,32,496,34,"useSuspenseInfiniteQuery$1"],[514,4,497,4],[514,5,497,5],[515,2,498,0],[516,0,498,1],[516,3]],"functionMap":{"names":["<global>","trackResult","Proxy$argument_1.get","createRootHooks","<anonymous>","TRPCProvider","React.useMemo$argument_0","React.useEffect$argument_0","setSSRState$argument_0","useContext","useSSRQueryOptionsIfNeeded","useQuery$1","usePrefetchQuery$1","useSuspenseQuery$1","useSuspenseQuery$argument_0.queryFn","useMutation$1","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","originalFn","useSubscription","addTrackedProp","reset","client.subscription$argument_2.onStarted","updateState$argument_0","client.subscription$argument_2.onData","client.subscription$argument_2.onError","client.subscription$argument_2.onConnectionStateChange","currentSubscriptionRef.current","getInitialState","updateState","useInfiniteQuery$1","usePrefetchInfiniteQuery$1","useSuspenseInfiniteQuery$1","useSuspenseInfiniteQuery$argument_0.queryFn","useQueries$1","queries.map$argument_0","useSuspenseQueries$1","hook.map$argument_0"],"mappings":"AAA;oBCW;QCE;SDG;CDG;IGG;kFCC,+BD;yBEG;kCCI;cDG;2CCI;cDO;wBEQ;wBCG,kCD;SFC;KFI;IMC;KNM;MOI;KPQ;IQC;gDPmB;aOiB;KRM;ISC;gDRQ;aQU;KTE;IUC;qBCO;aDa;KVS;IYC;wBCO;aDO;YEC;mCCC,mED;aFM;KZM;4CgBC;iDCO;SDE;wCEE;2BCS;oCCG;8BDI;iBDE;wBGC;oCDG;8BCK;iBHE;yBIC;oCFG;8BEI;iBJE;yCKC;gCHK;qBGK;iBLC;6CME;aNG;SFE;kDSI;STY;8CUO;SVa;wBZG;mBHK;aGE;SYC;KhBK;I2BC;gD1BwB;a0BgB;K3BM;I4BC;gD3Be;a2Bc;K5BE;I6BC;qBCc;aDc;K7BU;yB+BC;iCCe;kBDG;K/BG;iCiCC;iCDK;kBCI;qBCG,WD;KjCG;CHiB"}},"type":"js/module"}]}