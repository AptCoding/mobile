{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":128,"column":29,"index":4800}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":128,"column":29,"index":4800}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":128,"column":29,"index":4800}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":128,"column":29,"index":4800}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"react-native-base64","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":41,"index":56}}],"key":"T1fqIz5HArbBkwE/RiCMYvA64So="}},{"name":"../utils/d.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":57},"end":{"line":4,"column":116,"index":173}}],"key":"+bFcaYlr7DrEtDHlIgnOpEnB4GU="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.D = void 0;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/createClass\"));\n  var _reactNativeBase = _interopRequireDefault(require(_dependencyMap[4], \"react-native-base64\"));\n  var _d = require(_dependencyMap[5], \"../utils/d.js\");\n  var D = exports.D = /*#__PURE__*/function () {\n    function D(device, configurations) {\n      (0, _classCallCheck2.default)(this, D);\n      this.device = device;\n      this.configurations = configurations;\n      this.init();\n    }\n    return (0, _createClass2.default)(D, [{\n      key: \"deconstructor\",\n      value: function () {\n        var _deconstructor = (0, _asyncToGenerator2.default)(function* () {\n          if (yield this.device.isConnected()) {\n            yield this.device.cancelConnection();\n          }\n        });\n        function deconstructor() {\n          return _deconstructor.apply(this, arguments);\n        }\n        return deconstructor;\n      }()\n    }, {\n      key: \"init\",\n      value: function () {\n        var _init = (0, _asyncToGenerator2.default)(function* () {\n          yield this.device.requestMTU(512);\n        });\n        function init() {\n          return _init.apply(this, arguments);\n        }\n        return init;\n      }()\n      /**\n       * Authenticates the device with the given password\n       * @param password\n       * @returns the new device instance if the authentication is successful, otherwise null\n       */\n    }, {\n      key: \"authenticate\",\n      value: (function () {\n        var _authenticate = (0, _asyncToGenerator2.default)(function* (password) {\n          yield this.device.writeCharacteristicWithResponseForService(this.configurations.auth, this.configurations.passwordCharacteristicUUID, _reactNativeBase.default.encode(password));\n\n          // Connect again to get all the available services\n          this.device = yield this.device.connect();\n          yield this.device.discoverAllServicesAndCharacteristics();\n          var updatedServices = yield this.device.services();\n          var updatedDefaultService = updatedServices.find(service => service.uuid === this.configurations.default);\n          if (updatedDefaultService) {\n            console.log('Default Service found');\n            return this.device;\n          } else {\n            console.log('Default Service not found');\n            return null;\n          }\n        });\n        function authenticate(_x) {\n          return _authenticate.apply(this, arguments);\n        }\n        return authenticate;\n      }())\n    }, {\n      key: \"getAllKeys\",\n      value: function () {\n        var _getAllKeys = (0, _asyncToGenerator2.default)(function* () {\n          var allkeys = (0, _d.getAllKeysInProperties)();\n          return allkeys;\n        });\n        function getAllKeys() {\n          return _getAllKeys.apply(this, arguments);\n        }\n        return getAllKeys;\n      }()\n      /**\n       * Write a value to a property of the device\n       * @param key key of the property as defined in the properties file\n       * @param value value to write to the property\n       */\n    }, {\n      key: \"write\",\n      value: (function () {\n        var _write = (0, _asyncToGenerator2.default)(function* (key, value) {\n          if (!this.device) {\n            console.log('No this.device connected');\n            return;\n          }\n          var property = (0, _d.getPropertybyKey)(key);\n          var characteristicUUID = property.characteristicId;\n          var isAuth = yield this.auth(this.device);\n          if (!isAuth) {\n            throw new Error('Not authenticated');\n          }\n          var servicesAndCharacteristics = yield this.device.discoverAllServicesAndCharacteristics();\n          var confKey = property.systemKey ? this.configurations.system : this.configurations.default;\n          var encodedValue = (0, _d.encode)((0, _d.getTypeByCharacteristicId)(characteristicUUID), value);\n          servicesAndCharacteristics.writeCharacteristicWithResponseForService(confKey, characteristicUUID, encodedValue).then(() => {\n            console.log('Write characteristic success');\n            return true;\n          }).catch(error => {\n            console.error('Write characteristic error:', error);\n            return false;\n          });\n          return;\n        });\n        function write(_x2, _x3) {\n          return _write.apply(this, arguments);\n        }\n        return write;\n      }()\n      /**\n       * Read a value from a property of the device\n       * @param characteristicUUID the characteristic UUID of the property to read\n       * @returns the value of the property\n       */\n      )\n    }, {\n      key: \"read\",\n      value: (function () {\n        var _read = (0, _asyncToGenerator2.default)(function* (characteristicUUID) {\n          if (!this.device) {\n            console.log('No device is connected when reading Rolec_D');\n            throw new Error('No this.device connected');\n          }\n          var isAuth = yield this.auth(this.device);\n          if (!isAuth) {\n            return 'not authenticated';\n          }\n          var servicesAndCharacteristics = yield this.device.discoverAllServicesAndCharacteristics();\n          var services = yield servicesAndCharacteristics.services();\n          var characteristicExists = yield Promise.allSettled(services.map(/*#__PURE__*/function () {\n            var _ref = (0, _asyncToGenerator2.default)(function* (service) {\n              var characteristics = yield service.characteristics();\n              return characteristics.some(characteristic => characteristic.uuid === characteristicUUID);\n            });\n            return function (_x5) {\n              return _ref.apply(this, arguments);\n            };\n          }())).then(results => results.some(exists => exists));\n          if (!characteristicExists) {\n            console.log('Characteristic not found');\n            return 'Characteristic not found';\n          }\n          var characteristic = yield servicesAndCharacteristics.readCharacteristicForService(this.configurations.default, characteristicUUID);\n          if (!characteristic || !characteristic.value) {\n            return 'no value';\n          }\n          return (0, _d.decode)((0, _d.getTypeByCharacteristicId)(characteristic.uuid), characteristic.value);\n        });\n        function read(_x4) {\n          return _read.apply(this, arguments);\n        }\n        return read;\n      }()\n      /**\n       * check if the device is connected and authenticated by checking if the default service is available.\n       * This function is to be called in the read and write functions\n       * @param device\n       * @returns a boolean indicating if the device is connected and authenticated\n       */\n      )\n    }, {\n      key: \"auth\",\n      value: (function () {\n        var _auth = (0, _asyncToGenerator2.default)(function* (device) {\n          if (!(yield device.isConnected())) {\n            return false;\n          }\n          yield device.discoverAllServicesAndCharacteristics();\n          var services = yield device.services();\n          var defaultService = services.find(service => service.uuid === this.configurations.default);\n          if (defaultService) {\n            console.log('Default Service is found');\n            return true;\n          } else {\n            console.log('No Default Service found');\n          }\n          return false;\n        });\n        function auth(_x6) {\n          return _auth.apply(this, arguments);\n        }\n        return auth;\n      }())\n    }]);\n  }();\n});","lineCount":198,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"D"],[8,11,1,13],[9,2,1,13],[9,6,1,13,"_asyncToGenerator2"],[9,24,1,13],[9,27,1,13,"_interopRequireDefault"],[9,49,1,13],[9,50,1,13,"require"],[9,57,1,13],[9,58,1,13,"_dependencyMap"],[9,72,1,13],[10,2,1,13],[10,6,1,13,"_classCallCheck2"],[10,22,1,13],[10,25,1,13,"_interopRequireDefault"],[10,47,1,13],[10,48,1,13,"require"],[10,55,1,13],[10,56,1,13,"_dependencyMap"],[10,70,1,13],[11,2,1,13],[11,6,1,13,"_createClass2"],[11,19,1,13],[11,22,1,13,"_interopRequireDefault"],[11,44,1,13],[11,45,1,13,"require"],[11,52,1,13],[11,53,1,13,"_dependencyMap"],[11,67,1,13],[12,2,3,0],[12,6,3,0,"_reactNativeBase"],[12,22,3,0],[12,25,3,0,"_interopRequireDefault"],[12,47,3,0],[12,48,3,0,"require"],[12,55,3,0],[12,56,3,0,"_dependencyMap"],[12,70,3,0],[13,2,4,0],[13,6,4,0,"_d"],[13,8,4,0],[13,11,4,0,"require"],[13,18,4,0],[13,19,4,0,"_dependencyMap"],[13,33,4,0],[14,2,4,116],[14,6,5,13,"D"],[14,7,5,14],[14,10,5,14,"exports"],[14,17,5,14],[14,18,5,14,"D"],[14,19,5,14],[15,4,6,2],[15,13,6,2,"D"],[15,15,6,14,"device"],[15,21,6,20],[15,23,6,22,"configurations"],[15,37,6,36],[15,39,6,38],[16,6,6,38],[16,10,6,38,"_classCallCheck2"],[16,26,6,38],[16,27,6,38,"default"],[16,34,6,38],[16,42,6,38,"D"],[16,43,6,38],[17,6,7,4],[17,10,7,8],[17,11,7,9,"device"],[17,17,7,15],[17,20,7,18,"device"],[17,26,7,24],[18,6,8,4],[18,10,8,8],[18,11,8,9,"configurations"],[18,25,8,23],[18,28,8,26,"configurations"],[18,42,8,40],[19,6,9,4],[19,10,9,8],[19,11,9,9,"init"],[19,15,9,13],[19,16,9,14],[19,17,9,15],[20,4,10,2],[21,4,10,3],[21,15,10,3,"_createClass2"],[21,28,10,3],[21,29,10,3,"default"],[21,36,10,3],[21,38,10,3,"D"],[21,39,10,3],[22,6,10,3,"key"],[22,9,10,3],[23,6,10,3,"value"],[23,11,10,3],[24,8,10,3],[24,12,10,3,"_deconstructor"],[24,26,10,3],[24,33,10,3,"_asyncToGenerator2"],[24,51,10,3],[24,52,10,3,"default"],[24,59,10,3],[24,61,11,2],[24,74,11,24],[25,10,12,4],[25,20,12,14],[25,24,12,18],[25,25,12,19,"device"],[25,31,12,25],[25,32,12,26,"isConnected"],[25,43,12,37],[25,44,12,38],[25,45,12,39],[25,47,12,41],[26,12,13,6],[26,18,13,12],[26,22,13,16],[26,23,13,17,"device"],[26,29,13,23],[26,30,13,24,"cancelConnection"],[26,46,13,40],[26,47,13,41],[26,48,13,42],[27,10,14,4],[28,8,15,2],[28,9,15,3],[29,8,15,3],[29,17,11,8,"deconstructor"],[29,30,11,21,"deconstructor"],[29,31,11,21],[30,10,11,21],[30,17,11,21,"_deconstructor"],[30,31,11,21],[30,32,11,21,"apply"],[30,37,11,21],[30,44,11,21,"arguments"],[30,53,11,21],[31,8,11,21],[32,8,11,21],[32,15,11,8,"deconstructor"],[32,28,11,21],[33,6,11,21],[34,4,11,21],[35,6,11,21,"key"],[35,9,11,21],[36,6,11,21,"value"],[36,11,11,21],[37,8,11,21],[37,12,11,21,"_init"],[37,17,11,21],[37,24,11,21,"_asyncToGenerator2"],[37,42,11,21],[37,43,11,21,"default"],[37,50,11,21],[37,52,16,2],[37,65,16,15],[38,10,17,4],[38,16,17,10],[38,20,17,14],[38,21,17,15,"device"],[38,27,17,21],[38,28,17,22,"requestMTU"],[38,38,17,32],[38,39,17,33],[38,42,17,36],[38,43,17,37],[39,8,18,2],[39,9,18,3],[40,8,18,3],[40,17,16,8,"init"],[40,21,16,12,"init"],[40,22,16,12],[41,10,16,12],[41,17,16,12,"_init"],[41,22,16,12],[41,23,16,12,"apply"],[41,28,16,12],[41,35,16,12,"arguments"],[41,44,16,12],[42,8,16,12],[43,8,16,12],[43,15,16,8,"init"],[43,19,16,12],[44,6,16,12],[45,6,20,2],[46,0,21,0],[47,0,22,0],[48,0,23,0],[49,0,24,0],[50,4,20,2],[51,6,20,2,"key"],[51,9,20,2],[52,6,20,2,"value"],[52,11,20,2],[53,8,20,2],[53,12,20,2,"_authenticate"],[53,25,20,2],[53,32,20,2,"_asyncToGenerator2"],[53,50,20,2],[53,51,20,2,"default"],[53,58,20,2],[53,60,25,2],[53,71,25,21,"password"],[53,79,25,29],[53,81,25,31],[54,10,26,4],[54,16,26,10],[54,20,26,14],[54,21,26,15,"device"],[54,27,26,21],[54,28,26,22,"writeCharacteristicWithResponseForService"],[54,69,26,63],[54,70,26,64],[54,74,26,68],[54,75,26,69,"configurations"],[54,89,26,83],[54,90,26,84,"auth"],[54,94,26,88],[54,96,26,90],[54,100,26,94],[54,101,26,95,"configurations"],[54,115,26,109],[54,116,26,110,"passwordCharacteristicUUID"],[54,142,26,136],[54,144,26,138,"base64"],[54,168,26,144],[54,169,26,145,"encode"],[54,175,26,151],[54,176,26,152,"password"],[54,184,26,160],[54,185,26,161],[54,186,26,162],[56,10,28,4],[57,10,29,4],[57,14,29,8],[57,15,29,9,"device"],[57,21,29,15],[57,30,29,24],[57,34,29,28],[57,35,29,29,"device"],[57,41,29,35],[57,42,29,36,"connect"],[57,49,29,43],[57,50,29,44],[57,51,29,45],[58,10,30,4],[58,16,30,10],[58,20,30,14],[58,21,30,15,"device"],[58,27,30,21],[58,28,30,22,"discoverAllServicesAndCharacteristics"],[58,65,30,59],[58,66,30,60],[58,67,30,61],[59,10,31,4],[59,14,31,10,"updatedServices"],[59,29,31,25],[59,38,31,34],[59,42,31,38],[59,43,31,39,"device"],[59,49,31,45],[59,50,31,46,"services"],[59,58,31,54],[59,59,31,55],[59,60,31,56],[60,10,32,4],[60,14,32,10,"updatedDefaultService"],[60,35,32,31],[60,38,32,34,"updatedServices"],[60,53,32,49],[60,54,32,50,"find"],[60,58,32,54],[60,59,32,55,"service"],[60,66,32,62],[60,70,32,66,"service"],[60,77,32,73],[60,78,32,74,"uuid"],[60,82,32,78],[60,87,32,83],[60,91,32,87],[60,92,32,88,"configurations"],[60,106,32,102],[60,107,32,103,"default"],[60,114,32,110],[60,115,32,111],[61,10,33,4],[61,14,33,8,"updatedDefaultService"],[61,35,33,29],[61,37,33,31],[62,12,34,6,"console"],[62,19,34,13],[62,20,34,14,"log"],[62,23,34,17],[62,24,34,18],[62,47,34,41],[62,48,34,42],[63,12,35,6],[63,19,35,13],[63,23,35,17],[63,24,35,18,"device"],[63,30,35,24],[64,10,36,4],[64,11,36,5],[64,17,36,11],[65,12,37,6,"console"],[65,19,37,13],[65,20,37,14,"log"],[65,23,37,17],[65,24,37,18],[65,51,37,45],[65,52,37,46],[66,12,38,6],[66,19,38,13],[66,23,38,17],[67,10,39,4],[68,8,40,2],[68,9,40,3],[69,8,40,3],[69,17,25,8,"authenticate"],[69,29,25,20,"authenticate"],[69,30,25,20,"_x"],[69,32,25,20],[70,10,25,20],[70,17,25,20,"_authenticate"],[70,30,25,20],[70,31,25,20,"apply"],[70,36,25,20],[70,43,25,20,"arguments"],[70,52,25,20],[71,8,25,20],[72,8,25,20],[72,15,25,8,"authenticate"],[72,27,25,20],[73,6,25,20],[74,4,25,20],[75,6,25,20,"key"],[75,9,25,20],[76,6,25,20,"value"],[76,11,25,20],[77,8,25,20],[77,12,25,20,"_getAllKeys"],[77,23,25,20],[77,30,25,20,"_asyncToGenerator2"],[77,48,25,20],[77,49,25,20,"default"],[77,56,25,20],[77,58,41,2],[77,71,41,21],[78,10,42,4],[78,14,42,10,"allkeys"],[78,21,42,17],[78,24,42,20],[78,28,42,20,"getAllKeysInProperties"],[78,53,42,42],[78,55,42,43],[78,56,42,44],[79,10,43,4],[79,17,43,11,"allkeys"],[79,24,43,18],[80,8,44,2],[80,9,44,3],[81,8,44,3],[81,17,41,8,"getAllKeys"],[81,27,41,18,"getAllKeys"],[81,28,41,18],[82,10,41,18],[82,17,41,18,"_getAllKeys"],[82,28,41,18],[82,29,41,18,"apply"],[82,34,41,18],[82,41,41,18,"arguments"],[82,50,41,18],[83,8,41,18],[84,8,41,18],[84,15,41,8,"getAllKeys"],[84,25,41,18],[85,6,41,18],[86,6,46,2],[87,0,47,0],[88,0,48,0],[89,0,49,0],[90,0,50,0],[91,4,46,2],[92,6,46,2,"key"],[92,9,46,2],[93,6,46,2,"value"],[93,11,46,2],[94,8,46,2],[94,12,46,2,"_write"],[94,18,46,2],[94,25,46,2,"_asyncToGenerator2"],[94,43,46,2],[94,44,46,2,"default"],[94,51,46,2],[94,53,51,2],[94,64,51,14,"key"],[94,67,51,17],[94,69,51,19,"value"],[94,74,51,24],[94,76,51,26],[95,10,52,4],[95,14,52,8],[95,15,52,9],[95,19,52,13],[95,20,52,14,"device"],[95,26,52,20],[95,28,52,22],[96,12,53,6,"console"],[96,19,53,13],[96,20,53,14,"log"],[96,23,53,17],[96,24,53,18],[96,50,53,44],[96,51,53,45],[97,12,54,6],[98,10,55,4],[99,10,56,4],[99,14,56,10,"property"],[99,22,56,18],[99,25,56,21],[99,29,56,21,"getPropertybyKey"],[99,48,56,37],[99,50,56,38,"key"],[99,53,56,41],[99,54,56,42],[100,10,57,4],[100,14,57,10,"characteristicUUID"],[100,32,57,28],[100,35,57,31,"property"],[100,43,57,39],[100,44,57,40,"characteristicId"],[100,60,57,56],[101,10,58,4],[101,14,58,10,"isAuth"],[101,20,58,16],[101,29,58,25],[101,33,58,29],[101,34,58,30,"auth"],[101,38,58,34],[101,39,58,35],[101,43,58,39],[101,44,58,40,"device"],[101,50,58,46],[101,51,58,47],[102,10,59,4],[102,14,59,8],[102,15,59,9,"isAuth"],[102,21,59,15],[102,23,59,17],[103,12,60,6],[103,18,60,12],[103,22,60,16,"Error"],[103,27,60,21],[103,28,60,22],[103,47,60,41],[103,48,60,42],[104,10,61,4],[105,10,62,4],[105,14,62,10,"servicesAndCharacteristics"],[105,40,62,36],[105,49,62,45],[105,53,62,49],[105,54,62,50,"device"],[105,60,62,56],[105,61,62,57,"discoverAllServicesAndCharacteristics"],[105,98,62,94],[105,99,62,95],[105,100,62,96],[106,10,63,4],[106,14,63,10,"confKey"],[106,21,63,17],[106,24,63,20,"property"],[106,32,63,28],[106,33,63,29,"systemKey"],[106,42,63,38],[106,45,63,41],[106,49,63,45],[106,50,63,46,"configurations"],[106,64,63,60],[106,65,63,61,"system"],[106,71,63,67],[106,74,63,70],[106,78,63,74],[106,79,63,75,"configurations"],[106,93,63,89],[106,94,63,90,"default"],[106,101,63,97],[107,10,64,4],[107,14,64,10,"encodedValue"],[107,26,64,22],[107,29,64,25],[107,33,64,25,"encode"],[107,42,64,31],[107,44,64,32],[107,48,64,32,"getTypeByCharacteristicId"],[107,76,64,57],[107,78,64,58,"characteristicUUID"],[107,96,64,76],[107,97,64,77],[107,99,64,79,"value"],[107,104,64,84],[107,105,64,85],[108,10,65,4,"servicesAndCharacteristics"],[108,36,65,30],[108,37,65,31,"writeCharacteristicWithResponseForService"],[108,78,65,72],[108,79,65,73,"confKey"],[108,86,65,80],[108,88,65,82,"characteristicUUID"],[108,106,65,100],[108,108,65,102,"encodedValue"],[108,120,65,114],[108,121,65,115],[108,122,65,116,"then"],[108,126,65,120],[108,127,65,121],[108,133,65,127],[109,12,66,6,"console"],[109,19,66,13],[109,20,66,14,"log"],[109,23,66,17],[109,24,66,18],[109,54,66,48],[109,55,66,49],[110,12,67,6],[110,19,67,13],[110,23,67,17],[111,10,68,4],[111,11,68,5],[111,12,68,6],[111,13,68,7,"catch"],[111,18,68,12],[111,19,68,13,"error"],[111,24,68,18],[111,28,68,22],[112,12,69,6,"console"],[112,19,69,13],[112,20,69,14,"error"],[112,25,69,19],[112,26,69,20],[112,55,69,49],[112,57,69,51,"error"],[112,62,69,56],[112,63,69,57],[113,12,70,6],[113,19,70,13],[113,24,70,18],[114,10,71,4],[114,11,71,5],[114,12,71,6],[115,10,72,4],[116,8,73,2],[116,9,73,3],[117,8,73,3],[117,17,51,8,"write"],[117,22,51,13,"write"],[117,23,51,13,"_x2"],[117,26,51,13],[117,28,51,13,"_x3"],[117,31,51,13],[118,10,51,13],[118,17,51,13,"_write"],[118,23,51,13],[118,24,51,13,"apply"],[118,29,51,13],[118,36,51,13,"arguments"],[118,45,51,13],[119,8,51,13],[120,8,51,13],[120,15,51,8,"write"],[120,20,51,13],[121,6,51,13],[122,6,75,2],[123,0,76,0],[124,0,77,0],[125,0,78,0],[126,0,79,0],[127,6,75,2],[128,4,75,2],[129,6,75,2,"key"],[129,9,75,2],[130,6,75,2,"value"],[130,11,75,2],[131,8,75,2],[131,12,75,2,"_read"],[131,17,75,2],[131,24,75,2,"_asyncToGenerator2"],[131,42,75,2],[131,43,75,2,"default"],[131,50,75,2],[131,52,80,2],[131,63,80,13,"characteristicUUID"],[131,81,80,31],[131,83,80,33],[132,10,81,4],[132,14,81,8],[132,15,81,9],[132,19,81,13],[132,20,81,14,"device"],[132,26,81,20],[132,28,81,22],[133,12,82,6,"console"],[133,19,82,13],[133,20,82,14,"log"],[133,23,82,17],[133,24,82,18],[133,69,82,63],[133,70,82,64],[134,12,83,6],[134,18,83,12],[134,22,83,16,"Error"],[134,27,83,21],[134,28,83,22],[134,54,83,48],[134,55,83,49],[135,10,84,4],[136,10,85,4],[136,14,85,10,"isAuth"],[136,20,85,16],[136,29,85,25],[136,33,85,29],[136,34,85,30,"auth"],[136,38,85,34],[136,39,85,35],[136,43,85,39],[136,44,85,40,"device"],[136,50,85,46],[136,51,85,47],[137,10,86,4],[137,14,86,8],[137,15,86,9,"isAuth"],[137,21,86,15],[137,23,86,17],[138,12,87,6],[138,19,87,13],[138,38,87,32],[139,10,88,4],[140,10,89,4],[140,14,89,10,"servicesAndCharacteristics"],[140,40,89,36],[140,49,89,45],[140,53,89,49],[140,54,89,50,"device"],[140,60,89,56],[140,61,89,57,"discoverAllServicesAndCharacteristics"],[140,98,89,94],[140,99,89,95],[140,100,89,96],[141,10,90,4],[141,14,90,10,"services"],[141,22,90,18],[141,31,90,27,"servicesAndCharacteristics"],[141,57,90,53],[141,58,90,54,"services"],[141,66,90,62],[141,67,90,63],[141,68,90,64],[142,10,91,4],[142,14,91,10,"characteristicExists"],[142,34,91,30],[142,43,91,39,"Promise"],[142,50,91,46],[142,51,91,47,"allSettled"],[142,61,91,57],[142,62,91,58,"services"],[142,70,91,66],[142,71,91,67,"map"],[142,74,91,70],[143,12,91,70],[143,16,91,70,"_ref"],[143,20,91,70],[143,27,91,70,"_asyncToGenerator2"],[143,45,91,70],[143,46,91,70,"default"],[143,53,91,70],[143,55,91,71],[143,66,91,77,"service"],[143,73,91,84],[143,75,91,88],[144,14,92,6],[144,18,92,12,"characteristics"],[144,33,92,27],[144,42,92,36,"service"],[144,49,92,43],[144,50,92,44,"characteristics"],[144,65,92,59],[144,66,92,60],[144,67,92,61],[145,14,93,6],[145,21,93,13,"characteristics"],[145,36,93,28],[145,37,93,29,"some"],[145,41,93,33],[145,42,93,34,"characteristic"],[145,56,93,48],[145,60,93,52,"characteristic"],[145,74,93,66],[145,75,93,67,"uuid"],[145,79,93,71],[145,84,93,76,"characteristicUUID"],[145,102,93,94],[145,103,93,95],[146,12,94,4],[146,13,94,5],[147,12,94,5],[147,29,94,5,"_x5"],[147,32,94,5],[148,14,94,5],[148,21,94,5,"_ref"],[148,25,94,5],[148,26,94,5,"apply"],[148,31,94,5],[148,38,94,5,"arguments"],[148,47,94,5],[149,12,94,5],[150,10,94,5],[150,14,94,6],[150,15,94,7],[150,16,94,8,"then"],[150,20,94,12],[150,21,94,13,"results"],[150,28,94,20],[150,32,94,24,"results"],[150,39,94,31],[150,40,94,32,"some"],[150,44,94,36],[150,45,94,37,"exists"],[150,51,94,43],[150,55,94,47,"exists"],[150,61,94,53],[150,62,94,54],[150,63,94,55],[151,10,95,4],[151,14,95,8],[151,15,95,9,"characteristicExists"],[151,35,95,29],[151,37,95,31],[152,12,96,6,"console"],[152,19,96,13],[152,20,96,14,"log"],[152,23,96,17],[152,24,96,18],[152,50,96,44],[152,51,96,45],[153,12,97,6],[153,19,97,13],[153,45,97,39],[154,10,98,4],[155,10,99,4],[155,14,99,10,"characteristic"],[155,28,99,24],[155,37,99,33,"servicesAndCharacteristics"],[155,63,99,59],[155,64,99,60,"readCharacteristicForService"],[155,92,99,88],[155,93,99,89],[155,97,99,93],[155,98,99,94,"configurations"],[155,112,99,108],[155,113,99,109,"default"],[155,120,99,116],[155,122,99,118,"characteristicUUID"],[155,140,99,136],[155,141,99,137],[156,10,100,4],[156,14,100,8],[156,15,100,9,"characteristic"],[156,29,100,23],[156,33,100,27],[156,34,100,28,"characteristic"],[156,48,100,42],[156,49,100,43,"value"],[156,54,100,48],[156,56,100,50],[157,12,101,6],[157,19,101,13],[157,29,101,23],[158,10,102,4],[159,10,103,4],[159,17,103,11],[159,21,103,11,"decode"],[159,30,103,17],[159,32,103,18],[159,36,103,18,"getTypeByCharacteristicId"],[159,64,103,43],[159,66,103,44,"characteristic"],[159,80,103,58],[159,81,103,59,"uuid"],[159,85,103,63],[159,86,103,64],[159,88,103,66,"characteristic"],[159,102,103,80],[159,103,103,81,"value"],[159,108,103,86],[159,109,103,87],[160,8,104,2],[160,9,104,3],[161,8,104,3],[161,17,80,8,"read"],[161,21,80,12,"read"],[161,22,80,12,"_x4"],[161,25,80,12],[162,10,80,12],[162,17,80,12,"_read"],[162,22,80,12],[162,23,80,12,"apply"],[162,28,80,12],[162,35,80,12,"arguments"],[162,44,80,12],[163,8,80,12],[164,8,80,12],[164,15,80,8,"read"],[164,19,80,12],[165,6,80,12],[166,6,106,2],[167,0,107,0],[168,0,108,0],[169,0,109,0],[170,0,110,0],[171,0,111,0],[172,6,106,2],[173,4,106,2],[174,6,106,2,"key"],[174,9,106,2],[175,6,106,2,"value"],[175,11,106,2],[176,8,106,2],[176,12,106,2,"_auth"],[176,17,106,2],[176,24,106,2,"_asyncToGenerator2"],[176,42,106,2],[176,43,106,2,"default"],[176,50,106,2],[176,52,112,2],[176,63,112,13,"device"],[176,69,112,19],[176,71,112,21],[177,10,113,4],[177,14,113,8],[177,22,113,16,"device"],[177,28,113,22],[177,29,113,23,"isConnected"],[177,40,113,34],[177,41,113,35],[177,42,113,36],[177,43,113,37],[177,45,113,39],[178,12,114,6],[178,19,114,13],[178,24,114,18],[179,10,115,4],[180,10,116,4],[180,16,116,10,"device"],[180,22,116,16],[180,23,116,17,"discoverAllServicesAndCharacteristics"],[180,60,116,54],[180,61,116,55],[180,62,116,56],[181,10,117,4],[181,14,117,10,"services"],[181,22,117,18],[181,31,117,27,"device"],[181,37,117,33],[181,38,117,34,"services"],[181,46,117,42],[181,47,117,43],[181,48,117,44],[182,10,118,4],[182,14,118,10,"defaultService"],[182,28,118,24],[182,31,118,27,"services"],[182,39,118,35],[182,40,118,36,"find"],[182,44,118,40],[182,45,118,41,"service"],[182,52,118,48],[182,56,118,52,"service"],[182,63,118,59],[182,64,118,60,"uuid"],[182,68,118,64],[182,73,118,69],[182,77,118,73],[182,78,118,74,"configurations"],[182,92,118,88],[182,93,118,89,"default"],[182,100,118,96],[182,101,118,97],[183,10,119,4],[183,14,119,8,"defaultService"],[183,28,119,22],[183,30,119,24],[184,12,120,6,"console"],[184,19,120,13],[184,20,120,14,"log"],[184,23,120,17],[184,24,120,18],[184,50,120,44],[184,51,120,45],[185,12,121,6],[185,19,121,13],[185,23,121,17],[186,10,122,4],[186,11,122,5],[186,17,122,11],[187,12,123,6,"console"],[187,19,123,13],[187,20,123,14,"log"],[187,23,123,17],[187,24,123,18],[187,50,123,44],[187,51,123,45],[188,10,124,4],[189,10,125,4],[189,17,125,11],[189,22,125,16],[190,8,126,2],[190,9,126,3],[191,8,126,3],[191,17,112,8,"auth"],[191,21,112,12,"auth"],[191,22,112,12,"_x6"],[191,25,112,12],[192,10,112,12],[192,17,112,12,"_auth"],[192,22,112,12],[192,23,112,12,"apply"],[192,28,112,12],[192,35,112,12,"arguments"],[192,44,112,12],[193,8,112,12],[194,8,112,12],[194,15,112,8,"auth"],[194,19,112,12],[195,6,112,12],[196,4,112,12],[197,2,112,12],[198,0,112,12],[198,3]],"functionMap":{"names":["<global>","D","D#constructor","D#deconstructor","D#init","D#authenticate","updatedServices.find$argument_0","D#getAllKeys","D#write","servicesAndCharacteristics.writeCharacteristicWithResponseForService.then$argument_0","servicesAndCharacteristics.writeCharacteristicWithResponseForService.then._catch$argument_0","D#read","services.map$argument_0","characteristics.some$argument_0","Promise.allSettled.then$argument_0","results.some$argument_0","D#auth","services.find$argument_0"],"mappings":"AAA;OCI;ECC;GDI;EEC;GFI;EGC;GHE;EIO;uDCO,uDD;GJQ;EMC;GNG;EOO;yHCc;KDG,QE;KFG;GPE;EUO;uECW;kCCE,4DD;KDC,QG,wBC,gBD,CH;GVU;EeQ;yCCM,uDD;GfQ;CDC"}},"type":"js/module"}]}