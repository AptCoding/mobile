{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/get","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"qjFFB5GnNNadLKzlHyZes/u71/A="}},{"name":"@babel/runtime/helpers/possibleConstructorReturn","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"rcd0dMwf8BS2g+8U1wyhIOxtYEo="}},{"name":"@babel/runtime/helpers/getPrototypeOf","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"4pxOr+e+5cSZAdeEKxSt3F7LoKY="}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"EDnOjopp9yNVawSzfBRsy2dq5dM="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"ohGilxjVqjyE1GooDVDt9OYg9x0="}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":402,"column":40,"index":14400}}],"key":"V6GYoXnblvuuGHJNMy7MHyaunsU="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":34,"index":34}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}},{"name":"react-native","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":35},"end":{"line":2,"column":40,"index":75}}],"key":"XEo4Z+Aarw9Y7I7ZLBt66vGLAVQ="}},{"name":"./Base64","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":76},"end":{"line":3,"column":35,"index":111}}],"key":"Op8Sws+h9UN6G94ogoriaJKM1IE="}},{"name":"./Errors","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":112},"end":{"line":4,"column":38,"index":150}}],"key":"p0bZuh5VpmS0EL6Z8ff6RLwmQS0="}},{"name":"./Fetch","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":151},"end":{"line":5,"column":39,"index":190}}],"key":"Kw7I7/yXAEYxIMlpqbNuG+FKMRA="}},{"name":"./TokenRequest.types","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":6,"column":0,"index":191},"end":{"line":6,"column":50,"index":241}}],"key":"GE3qkX3miLsU7BfdwHq/bL/qnWI="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TokenResponse = exports.TokenRequest = exports.RevokeTokenRequest = exports.Request = exports.RefreshTokenRequest = exports.AccessTokenRequest = void 0;\n  exports.exchangeCodeAsync = exchangeCodeAsync;\n  exports.fetchUserInfoAsync = fetchUserInfoAsync;\n  exports.getCurrentTimeInSeconds = getCurrentTimeInSeconds;\n  exports.refreshAsync = refreshAsync;\n  exports.revokeAsync = revokeAsync;\n  var _get2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/get\"));\n  var _possibleConstructorReturn2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/possibleConstructorReturn\"));\n  var _getPrototypeOf2 = _interopRequireDefault(require(_dependencyMap[3], \"@babel/runtime/helpers/getPrototypeOf\"));\n  var _inherits2 = _interopRequireDefault(require(_dependencyMap[4], \"@babel/runtime/helpers/inherits\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[5], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _classCallCheck2 = _interopRequireDefault(require(_dependencyMap[6], \"@babel/runtime/helpers/classCallCheck\"));\n  var _createClass2 = _interopRequireDefault(require(_dependencyMap[7], \"@babel/runtime/helpers/createClass\"));\n  var _invariant = _interopRequireDefault(require(_dependencyMap[8], \"invariant\"));\n  var _reactNative = require(_dependencyMap[9], \"react-native\");\n  var Base64 = _interopRequireWildcard(require(_dependencyMap[10], \"./Base64\"));\n  var _Errors = require(_dependencyMap[11], \"./Errors\");\n  var _Fetch = require(_dependencyMap[12], \"./Fetch\");\n  var _TokenRequest3 = require(_dependencyMap[13], \"./TokenRequest.types\");\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  function _superPropGet(t, o, e, r) { var p = (0, _get2.default)((0, _getPrototypeOf2.default)(1 & r ? t.prototype : t), o, e); return 2 & r && \"function\" == typeof p ? function (t) { return p.apply(e, t); } : p; }\n  function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }\n  function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function () { return !!t; })(); }\n  /**\n   * Returns the current time in seconds.\n   */\n  function getCurrentTimeInSeconds() {\n    return Math.floor(Date.now() / 1000);\n  }\n  /**\n   * Token Response.\n   *\n   * [Section 5.1](https://tools.ietf.org/html/rfc6749#section-5.1)\n   */\n  var TokenResponse = exports.TokenResponse = /*#__PURE__*/function () {\n    function TokenResponse(response) {\n      (0, _classCallCheck2.default)(this, TokenResponse);\n      this.accessToken = response.accessToken;\n      this.tokenType = response.tokenType ?? 'bearer';\n      this.expiresIn = response.expiresIn;\n      this.refreshToken = response.refreshToken;\n      this.scope = response.scope;\n      this.state = response.state;\n      this.idToken = response.idToken;\n      this.issuedAt = response.issuedAt ?? getCurrentTimeInSeconds();\n    }\n    return (0, _createClass2.default)(TokenResponse, [{\n      key: \"applyResponseConfig\",\n      value: function applyResponseConfig(response) {\n        this.accessToken = response.accessToken ?? this.accessToken;\n        this.tokenType = response.tokenType ?? this.tokenType ?? 'bearer';\n        this.expiresIn = response.expiresIn ?? this.expiresIn;\n        this.refreshToken = response.refreshToken ?? this.refreshToken;\n        this.scope = response.scope ?? this.scope;\n        this.state = response.state ?? this.state;\n        this.idToken = response.idToken ?? this.idToken;\n        this.issuedAt = response.issuedAt ?? this.issuedAt ?? getCurrentTimeInSeconds();\n      }\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          accessToken: this.accessToken,\n          idToken: this.idToken,\n          refreshToken: this.refreshToken,\n          scope: this.scope,\n          state: this.state,\n          tokenType: this.tokenType,\n          issuedAt: this.issuedAt,\n          expiresIn: this.expiresIn\n        };\n      }\n    }, {\n      key: \"refreshAsync\",\n      value: function () {\n        var _refreshAsync = (0, _asyncToGenerator2.default)(function* (config, discovery) {\n          var request = new RefreshTokenRequest({\n            ...config,\n            refreshToken: this.refreshToken\n          });\n          var response = yield request.performAsync(discovery);\n          // Custom: reuse the refresh token if one wasn't returned\n          response.refreshToken = response.refreshToken ?? this.refreshToken;\n          var json = response.getRequestConfig();\n          this.applyResponseConfig(json);\n          return this;\n        });\n        function refreshAsync(_x, _x2) {\n          return _refreshAsync.apply(this, arguments);\n        }\n        return refreshAsync;\n      }()\n    }, {\n      key: \"shouldRefresh\",\n      value: function shouldRefresh() {\n        // no refresh token available and token has expired\n        return !(TokenResponse.isTokenFresh(this) || !this.refreshToken);\n      }\n    }], [{\n      key: \"isTokenFresh\",\n      value:\n      /**\n       * Determines whether a token refresh request must be made to refresh the tokens\n       *\n       * @param token\n       * @param secondsMargin\n       */\n      function isTokenFresh(token) {\n        var secondsMargin = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 60 * 10 * -1;\n        if (!token) {\n          return false;\n        }\n        if (token.expiresIn) {\n          var now = getCurrentTimeInSeconds();\n          return now < token.issuedAt + token.expiresIn + secondsMargin;\n        }\n        // if there is no expiration time but we have an access token, it is assumed to never expire\n        return true;\n      }\n      /**\n       * Creates a `TokenResponse` from query parameters returned from an `AuthRequest`.\n       *\n       * @param params\n       */\n    }, {\n      key: \"fromQueryParams\",\n      value: function fromQueryParams(params) {\n        return new TokenResponse({\n          accessToken: params.access_token,\n          refreshToken: params.refresh_token,\n          scope: params.scope,\n          state: params.state,\n          idToken: params.id_token,\n          tokenType: params.token_type,\n          expiresIn: params.expires_in,\n          issuedAt: params.issued_at\n        });\n      }\n    }]);\n  }();\n  var Request = exports.Request = /*#__PURE__*/function () {\n    function Request(request) {\n      (0, _classCallCheck2.default)(this, Request);\n      this.request = request;\n    }\n    return (0, _createClass2.default)(Request, [{\n      key: \"performAsync\",\n      value: function () {\n        var _performAsync = (0, _asyncToGenerator2.default)(function* (discovery) {\n          throw new Error('performAsync must be extended');\n        });\n        function performAsync(_x3) {\n          return _performAsync.apply(this, arguments);\n        }\n        return performAsync;\n      }()\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        throw new Error('getRequestConfig must be extended');\n      }\n    }, {\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        throw new Error('getQueryBody must be extended');\n      }\n    }]);\n  }();\n  /**\n   * A generic token request.\n   */\n  var TokenRequest = exports.TokenRequest = /*#__PURE__*/function (_Request) {\n    function TokenRequest(request, grantType) {\n      var _this;\n      (0, _classCallCheck2.default)(this, TokenRequest);\n      _this = _callSuper(this, TokenRequest, [request]);\n      _this.grantType = grantType;\n      _this.clientId = request.clientId;\n      _this.clientSecret = request.clientSecret;\n      _this.extraParams = request.extraParams;\n      _this.scopes = request.scopes;\n      return _this;\n    }\n    (0, _inherits2.default)(TokenRequest, _Request);\n    return (0, _createClass2.default)(TokenRequest, [{\n      key: \"getHeaders\",\n      value: function getHeaders() {\n        var headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (typeof this.clientSecret !== 'undefined') {\n          // If client secret exists, it should be converted to base64\n          // https://tools.ietf.org/html/rfc6749#section-2.3.1\n          var encodedClientId = encodeURIComponent(this.clientId);\n          var encodedClientSecret = encodeURIComponent(this.clientSecret);\n          var credentials = `${encodedClientId}:${encodedClientSecret}`;\n          var basicAuth = Base64.encodeNoWrap(credentials);\n          headers.Authorization = `Basic ${basicAuth}`;\n        }\n        return headers;\n      }\n    }, {\n      key: \"performAsync\",\n      value: function () {\n        var _performAsync2 = (0, _asyncToGenerator2.default)(function* (discovery) {\n          // redirect URI must not be nil\n          (0, _invariant.default)(discovery.tokenEndpoint, `Cannot invoke \\`performAsync()\\` without a valid tokenEndpoint`);\n          var response = yield (0, _Fetch.requestAsync)(discovery.tokenEndpoint, {\n            dataType: 'json',\n            method: 'POST',\n            headers: this.getHeaders(),\n            body: this.getQueryBody()\n          });\n          if ('error' in response) {\n            throw new _Errors.TokenError(response);\n          }\n          return new TokenResponse({\n            accessToken: response.access_token,\n            tokenType: response.token_type,\n            expiresIn: response.expires_in,\n            refreshToken: response.refresh_token,\n            scope: response.scope,\n            idToken: response.id_token,\n            issuedAt: response.issued_at\n          });\n        });\n        function performAsync(_x4) {\n          return _performAsync2.apply(this, arguments);\n        }\n        return performAsync;\n      }()\n    }, {\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = {\n          grant_type: this.grantType\n        };\n        if (!this.clientSecret) {\n          // Only add the client ID if client secret is not present, otherwise pass the client id with the secret in the request body.\n          queryBody.client_id = this.clientId;\n        }\n        if (this.scopes) {\n          queryBody.scope = this.scopes.join(' ');\n        }\n        if (this.extraParams) {\n          for (var extra in this.extraParams) {\n            if (extra in this.extraParams && !(extra in queryBody)) {\n              queryBody[extra] = this.extraParams[extra];\n            }\n          }\n        }\n        return queryBody;\n      }\n    }]);\n  }(Request);\n  /**\n   * Access token request. Exchange an authorization code for a user access token.\n   *\n   * [Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\n   */\n  var AccessTokenRequest = exports.AccessTokenRequest = /*#__PURE__*/function (_TokenRequest) {\n    function AccessTokenRequest(options) {\n      var _this2;\n      (0, _classCallCheck2.default)(this, AccessTokenRequest);\n      (0, _invariant.default)(options.redirectUri, `\\`AccessTokenRequest\\` requires a valid \\`redirectUri\\` (it must also match the one used in the auth request). Example: ${_reactNative.Platform.select({\n        web: 'https://yourwebsite.com/redirect',\n        default: 'myapp://redirect'\n      })}`);\n      (0, _invariant.default)(options.code, `\\`AccessTokenRequest\\` requires a valid authorization \\`code\\`. This is what's received from the authorization server after an auth request.`);\n      _this2 = _callSuper(this, AccessTokenRequest, [options, _TokenRequest3.GrantType.AuthorizationCode]);\n      _this2.code = options.code;\n      _this2.redirectUri = options.redirectUri;\n      return _this2;\n    }\n    (0, _inherits2.default)(AccessTokenRequest, _TokenRequest);\n    return (0, _createClass2.default)(AccessTokenRequest, [{\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = _superPropGet(AccessTokenRequest, \"getQueryBody\", this, 3)([]);\n        if (this.redirectUri) {\n          queryBody.redirect_uri = this.redirectUri;\n        }\n        if (this.code) {\n          queryBody.code = this.code;\n        }\n        return queryBody;\n      }\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          clientId: this.clientId,\n          clientSecret: this.clientSecret,\n          grantType: this.grantType,\n          code: this.code,\n          redirectUri: this.redirectUri,\n          extraParams: this.extraParams,\n          scopes: this.scopes\n        };\n      }\n    }]);\n  }(TokenRequest);\n  /**\n   * Refresh request.\n   *\n   * [Section 6](https://tools.ietf.org/html/rfc6749#section-6)\n   */\n  var RefreshTokenRequest = exports.RefreshTokenRequest = /*#__PURE__*/function (_TokenRequest2) {\n    function RefreshTokenRequest(options) {\n      var _this3;\n      (0, _classCallCheck2.default)(this, RefreshTokenRequest);\n      (0, _invariant.default)(options.refreshToken, `\\`RefreshTokenRequest\\` requires a valid \\`refreshToken\\`.`);\n      _this3 = _callSuper(this, RefreshTokenRequest, [options, _TokenRequest3.GrantType.RefreshToken]);\n      _this3.refreshToken = options.refreshToken;\n      return _this3;\n    }\n    (0, _inherits2.default)(RefreshTokenRequest, _TokenRequest2);\n    return (0, _createClass2.default)(RefreshTokenRequest, [{\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = _superPropGet(RefreshTokenRequest, \"getQueryBody\", this, 3)([]);\n        if (this.refreshToken) {\n          queryBody.refresh_token = this.refreshToken;\n        }\n        return queryBody;\n      }\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          clientId: this.clientId,\n          clientSecret: this.clientSecret,\n          grantType: this.grantType,\n          refreshToken: this.refreshToken,\n          extraParams: this.extraParams,\n          scopes: this.scopes\n        };\n      }\n    }]);\n  }(TokenRequest);\n  /**\n   * Revocation request for a given token.\n   *\n   * [Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\n   */\n  var RevokeTokenRequest = exports.RevokeTokenRequest = /*#__PURE__*/function (_Request2) {\n    function RevokeTokenRequest(request) {\n      var _this4;\n      (0, _classCallCheck2.default)(this, RevokeTokenRequest);\n      _this4 = _callSuper(this, RevokeTokenRequest, [request]);\n      (0, _invariant.default)(request.token, `\\`RevokeTokenRequest\\` requires a valid \\`token\\` to revoke.`);\n      _this4.clientId = request.clientId;\n      _this4.clientSecret = request.clientSecret;\n      _this4.token = request.token;\n      _this4.tokenTypeHint = request.tokenTypeHint;\n      return _this4;\n    }\n    (0, _inherits2.default)(RevokeTokenRequest, _Request2);\n    return (0, _createClass2.default)(RevokeTokenRequest, [{\n      key: \"getHeaders\",\n      value: function getHeaders() {\n        var headers = {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        };\n        if (typeof this.clientSecret !== 'undefined' && this.clientId) {\n          // If client secret exists, it should be converted to base64\n          // https://tools.ietf.org/html/rfc6749#section-2.3.1\n          var encodedClientId = encodeURIComponent(this.clientId);\n          var encodedClientSecret = encodeURIComponent(this.clientSecret);\n          var credentials = `${encodedClientId}:${encodedClientSecret}`;\n          var basicAuth = Base64.encodeNoWrap(credentials);\n          headers.Authorization = `Basic ${basicAuth}`;\n        }\n        return headers;\n      }\n      /**\n       * Perform a token revocation request.\n       *\n       * @param discovery The `revocationEndpoint` for a provider.\n       */\n    }, {\n      key: \"performAsync\",\n      value: (function () {\n        var _performAsync3 = (0, _asyncToGenerator2.default)(function* (discovery) {\n          (0, _invariant.default)(discovery.revocationEndpoint, `Cannot invoke \\`performAsync()\\` without a valid revocationEndpoint`);\n          yield (0, _Fetch.requestAsync)(discovery.revocationEndpoint, {\n            method: 'POST',\n            headers: this.getHeaders(),\n            body: this.getQueryBody()\n          });\n          return true;\n        });\n        function performAsync(_x5) {\n          return _performAsync3.apply(this, arguments);\n        }\n        return performAsync;\n      }())\n    }, {\n      key: \"getRequestConfig\",\n      value: function getRequestConfig() {\n        return {\n          clientId: this.clientId,\n          clientSecret: this.clientSecret,\n          token: this.token,\n          tokenTypeHint: this.tokenTypeHint\n        };\n      }\n    }, {\n      key: \"getQueryBody\",\n      value: function getQueryBody() {\n        var queryBody = {\n          token: this.token\n        };\n        if (this.tokenTypeHint) {\n          queryBody.token_type_hint = this.tokenTypeHint;\n        }\n        // Include client creds https://tools.ietf.org/html/rfc6749#section-2.3.1\n        if (this.clientId) {\n          queryBody.client_id = this.clientId;\n        }\n        if (this.clientSecret) {\n          queryBody.client_secret = this.clientSecret;\n        }\n        return queryBody;\n      }\n    }]);\n  }(Request); // @needsAudit\n  /**\n   * Exchange an authorization code for an access token that can be used to get data from the provider.\n   *\n   * @param config Configuration used to exchange the code for a token.\n   * @param discovery The `tokenEndpoint` for a provider.\n   * @return Returns a discovery document with a valid `tokenEndpoint` URL.\n   */\n  function exchangeCodeAsync(config, discovery) {\n    var request = new AccessTokenRequest(config);\n    return request.performAsync(discovery);\n  }\n  // @needsAudit\n  /**\n   * Refresh an access token.\n   * - If the provider didn't return a `refresh_token` then the access token may not be refreshed.\n   * - If the provider didn't return a `expires_in` then it's assumed that the token does not expire.\n   * - Determine if a token needs to be refreshed via `TokenResponse.isTokenFresh()` or `shouldRefresh()` on an instance of `TokenResponse`.\n   *\n   * @see [Section 6](https://tools.ietf.org/html/rfc6749#section-6).\n   *\n   * @param config Configuration used to refresh the given access token.\n   * @param discovery The `tokenEndpoint` for a provider.\n   * @return Returns a discovery document with a valid `tokenEndpoint` URL.\n   */\n  function refreshAsync(config, discovery) {\n    var request = new RefreshTokenRequest(config);\n    return request.performAsync(discovery);\n  }\n  // @needsAudit\n  /**\n   * Revoke a token with a provider. This makes the token unusable, effectively requiring the user to login again.\n   *\n   * @param config Configuration used to revoke a refresh or access token.\n   * @param discovery The `revocationEndpoint` for a provider.\n   * @return Returns a discovery document with a valid `revocationEndpoint` URL. Many providers do not support this feature.\n   */\n  function revokeAsync(config, discovery) {\n    var request = new RevokeTokenRequest(config);\n    return request.performAsync(discovery);\n  }\n  /**\n   * Fetch generic user info from the provider's OpenID Connect `userInfoEndpoint` (if supported).\n   *\n   * @see [UserInfo](https://openid.net/specs/openid-connect-core-1_0.html#UserInfo).\n   *\n   * @param config The `accessToken` for a user, returned from a code exchange or auth request.\n   * @param discovery The `userInfoEndpoint` for a provider.\n   */\n  function fetchUserInfoAsync(config, discovery) {\n    if (!discovery.userInfoEndpoint) {\n      throw new Error('User info endpoint is not defined in the service config discovery document');\n    }\n    return (0, _Fetch.requestAsync)(discovery.userInfoEndpoint, {\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n        Authorization: `Bearer ${config.accessToken}`\n      },\n      dataType: 'json',\n      method: 'GET'\n    });\n  }\n});","lineCount":495,"map":[[19,2,1,0],[19,6,1,0,"_invariant"],[19,16,1,0],[19,19,1,0,"_interopRequireDefault"],[19,41,1,0],[19,42,1,0,"require"],[19,49,1,0],[19,50,1,0,"_dependencyMap"],[19,64,1,0],[20,2,2,0],[20,6,2,0,"_reactNative"],[20,18,2,0],[20,21,2,0,"require"],[20,28,2,0],[20,29,2,0,"_dependencyMap"],[20,43,2,0],[21,2,3,0],[21,6,3,0,"Base64"],[21,12,3,0],[21,15,3,0,"_interopRequireWildcard"],[21,38,3,0],[21,39,3,0,"require"],[21,46,3,0],[21,47,3,0,"_dependencyMap"],[21,61,3,0],[22,2,4,0],[22,6,4,0,"_Errors"],[22,13,4,0],[22,16,4,0,"require"],[22,23,4,0],[22,24,4,0,"_dependencyMap"],[22,38,4,0],[23,2,5,0],[23,6,5,0,"_Fetch"],[23,12,5,0],[23,15,5,0,"require"],[23,22,5,0],[23,23,5,0,"_dependencyMap"],[23,37,5,0],[24,2,6,0],[24,6,6,0,"_TokenRequest3"],[24,20,6,0],[24,23,6,0,"require"],[24,30,6,0],[24,31,6,0,"_dependencyMap"],[24,45,6,0],[25,2,6,50],[25,11,6,50,"_getRequireWildcardCache"],[25,36,6,50,"e"],[25,37,6,50],[25,66,6,50,"WeakMap"],[25,73,6,50],[25,92,6,50,"r"],[25,93,6,50],[25,100,6,50,"WeakMap"],[25,107,6,50],[25,111,6,50,"t"],[25,112,6,50],[25,119,6,50,"WeakMap"],[25,126,6,50],[25,138,6,50,"_getRequireWildcardCache"],[25,162,6,50],[25,174,6,50,"_getRequireWildcardCache"],[25,175,6,50,"e"],[25,176,6,50],[25,187,6,50,"e"],[25,188,6,50],[25,191,6,50,"t"],[25,192,6,50],[25,195,6,50,"r"],[25,196,6,50],[25,201,6,50,"e"],[25,202,6,50],[26,2,6,50],[26,11,6,50,"_interopRequireWildcard"],[26,35,6,50,"e"],[26,36,6,50],[26,38,6,50,"r"],[26,39,6,50],[26,48,6,50,"r"],[26,49,6,50],[26,53,6,50,"e"],[26,54,6,50],[26,58,6,50,"e"],[26,59,6,50],[26,60,6,50,"__esModule"],[26,70,6,50],[26,79,6,50,"e"],[26,80,6,50],[26,95,6,50,"e"],[26,96,6,50],[26,119,6,50,"e"],[26,120,6,50],[26,145,6,50,"e"],[26,146,6,50],[26,157,6,50,"default"],[26,164,6,50],[26,166,6,50,"e"],[26,167,6,50],[26,175,6,50,"t"],[26,176,6,50],[26,179,6,50,"_getRequireWildcardCache"],[26,203,6,50],[26,204,6,50,"r"],[26,205,6,50],[26,212,6,50,"t"],[26,213,6,50],[26,217,6,50,"t"],[26,218,6,50],[26,219,6,50,"has"],[26,222,6,50],[26,223,6,50,"e"],[26,224,6,50],[26,234,6,50,"t"],[26,235,6,50],[26,236,6,50,"get"],[26,239,6,50],[26,240,6,50,"e"],[26,241,6,50],[26,248,6,50,"n"],[26,249,6,50],[26,254,6,50,"__proto__"],[26,263,6,50],[26,273,6,50,"a"],[26,274,6,50],[26,277,6,50,"Object"],[26,283,6,50],[26,284,6,50,"defineProperty"],[26,298,6,50],[26,302,6,50,"Object"],[26,308,6,50],[26,309,6,50,"getOwnPropertyDescriptor"],[26,333,6,50],[26,344,6,50,"u"],[26,345,6,50],[26,349,6,50,"e"],[26,350,6,50],[26,370,6,50,"u"],[26,371,6,50],[26,378,6,50,"hasOwnProperty"],[26,392,6,50],[26,393,6,50,"call"],[26,397,6,50],[26,398,6,50,"e"],[26,399,6,50],[26,401,6,50,"u"],[26,402,6,50],[26,411,6,50,"i"],[26,412,6,50],[26,415,6,50,"a"],[26,416,6,50],[26,419,6,50,"Object"],[26,425,6,50],[26,426,6,50,"getOwnPropertyDescriptor"],[26,450,6,50],[26,451,6,50,"e"],[26,452,6,50],[26,454,6,50,"u"],[26,455,6,50],[26,465,6,50,"i"],[26,466,6,50],[26,471,6,50,"i"],[26,472,6,50],[26,473,6,50,"get"],[26,476,6,50],[26,480,6,50,"i"],[26,481,6,50],[26,482,6,50,"set"],[26,485,6,50],[26,489,6,50,"Object"],[26,495,6,50],[26,496,6,50,"defineProperty"],[26,510,6,50],[26,511,6,50,"n"],[26,512,6,50],[26,514,6,50,"u"],[26,515,6,50],[26,517,6,50,"i"],[26,518,6,50],[26,522,6,50,"n"],[26,523,6,50],[26,524,6,50,"u"],[26,525,6,50],[26,529,6,50,"e"],[26,530,6,50],[26,531,6,50,"u"],[26,532,6,50],[26,544,6,50,"n"],[26,545,6,50],[26,546,6,50,"default"],[26,553,6,50],[26,556,6,50,"e"],[26,557,6,50],[26,559,6,50,"t"],[26,560,6,50],[26,564,6,50,"t"],[26,565,6,50],[26,566,6,50,"set"],[26,569,6,50],[26,570,6,50,"e"],[26,571,6,50],[26,573,6,50,"n"],[26,574,6,50],[26,577,6,50,"n"],[26,578,6,50],[27,2,6,50],[27,11,6,50,"_superPropGet"],[27,25,6,50,"t"],[27,26,6,50],[27,28,6,50,"o"],[27,29,6,50],[27,31,6,50,"e"],[27,32,6,50],[27,34,6,50,"r"],[27,35,6,50],[27,43,6,50,"p"],[27,44,6,50],[27,51,6,50,"_get2"],[27,56,6,50],[27,57,6,50,"default"],[27,64,6,50],[27,70,6,50,"_getPrototypeOf2"],[27,86,6,50],[27,87,6,50,"default"],[27,94,6,50],[27,100,6,50,"r"],[27,101,6,50],[27,104,6,50,"t"],[27,105,6,50],[27,106,6,50,"prototype"],[27,115,6,50],[27,118,6,50,"t"],[27,119,6,50],[27,122,6,50,"o"],[27,123,6,50],[27,125,6,50,"e"],[27,126,6,50],[27,140,6,50,"r"],[27,141,6,50],[27,166,6,50,"p"],[27,167,6,50],[27,180,6,50,"t"],[27,181,6,50],[27,192,6,50,"p"],[27,193,6,50],[27,194,6,50,"apply"],[27,199,6,50],[27,200,6,50,"e"],[27,201,6,50],[27,203,6,50,"t"],[27,204,6,50],[27,211,6,50,"p"],[27,212,6,50],[28,2,6,50],[28,11,6,50,"_callSuper"],[28,22,6,50,"t"],[28,23,6,50],[28,25,6,50,"o"],[28,26,6,50],[28,28,6,50,"e"],[28,29,6,50],[28,40,6,50,"o"],[28,41,6,50],[28,48,6,50,"_getPrototypeOf2"],[28,64,6,50],[28,65,6,50,"default"],[28,72,6,50],[28,74,6,50,"o"],[28,75,6,50],[28,82,6,50,"_possibleConstructorReturn2"],[28,109,6,50],[28,110,6,50,"default"],[28,117,6,50],[28,119,6,50,"t"],[28,120,6,50],[28,122,6,50,"_isNativeReflectConstruct"],[28,147,6,50],[28,152,6,50,"Reflect"],[28,159,6,50],[28,160,6,50,"construct"],[28,169,6,50],[28,170,6,50,"o"],[28,171,6,50],[28,173,6,50,"e"],[28,174,6,50],[28,186,6,50,"_getPrototypeOf2"],[28,202,6,50],[28,203,6,50,"default"],[28,210,6,50],[28,212,6,50,"t"],[28,213,6,50],[28,215,6,50,"constructor"],[28,226,6,50],[28,230,6,50,"o"],[28,231,6,50],[28,232,6,50,"apply"],[28,237,6,50],[28,238,6,50,"t"],[28,239,6,50],[28,241,6,50,"e"],[28,242,6,50],[29,2,6,50],[29,11,6,50,"_isNativeReflectConstruct"],[29,37,6,50],[29,51,6,50,"t"],[29,52,6,50],[29,56,6,50,"Boolean"],[29,63,6,50],[29,64,6,50,"prototype"],[29,73,6,50],[29,74,6,50,"valueOf"],[29,81,6,50],[29,82,6,50,"call"],[29,86,6,50],[29,87,6,50,"Reflect"],[29,94,6,50],[29,95,6,50,"construct"],[29,104,6,50],[29,105,6,50,"Boolean"],[29,112,6,50],[29,145,6,50,"t"],[29,146,6,50],[29,159,6,50,"_isNativeReflectConstruct"],[29,184,6,50],[29,196,6,50,"_isNativeReflectConstruct"],[29,197,6,50],[29,210,6,50,"t"],[29,211,6,50],[30,2,7,0],[31,0,8,0],[32,0,9,0],[33,2,10,7],[33,11,10,16,"getCurrentTimeInSeconds"],[33,34,10,39,"getCurrentTimeInSeconds"],[33,35,10,39],[33,37,10,42],[34,4,11,4],[34,11,11,11,"Math"],[34,15,11,15],[34,16,11,16,"floor"],[34,21,11,21],[34,22,11,22,"Date"],[34,26,11,26],[34,27,11,27,"now"],[34,30,11,30],[34,31,11,31],[34,32,11,32],[34,35,11,35],[34,39,11,39],[34,40,11,40],[35,2,12,0],[36,2,13,0],[37,0,14,0],[38,0,15,0],[39,0,16,0],[40,0,17,0],[41,2,13,0],[41,6,18,13,"TokenResponse"],[41,19,18,26],[41,22,18,26,"exports"],[41,29,18,26],[41,30,18,26,"TokenResponse"],[41,43,18,26],[42,4,65,4],[42,13,65,4,"TokenResponse"],[42,27,65,16,"response"],[42,35,65,24],[42,37,65,26],[43,6,65,26],[43,10,65,26,"_classCallCheck2"],[43,26,65,26],[43,27,65,26,"default"],[43,34,65,26],[43,42,65,26,"TokenResponse"],[43,55,65,26],[44,6,66,8],[44,10,66,12],[44,11,66,13,"accessToken"],[44,22,66,24],[44,25,66,27,"response"],[44,33,66,35],[44,34,66,36,"accessToken"],[44,45,66,47],[45,6,67,8],[45,10,67,12],[45,11,67,13,"tokenType"],[45,20,67,22],[45,23,67,25,"response"],[45,31,67,33],[45,32,67,34,"tokenType"],[45,41,67,43],[45,45,67,47],[45,53,67,55],[46,6,68,8],[46,10,68,12],[46,11,68,13,"expiresIn"],[46,20,68,22],[46,23,68,25,"response"],[46,31,68,33],[46,32,68,34,"expiresIn"],[46,41,68,43],[47,6,69,8],[47,10,69,12],[47,11,69,13,"refreshToken"],[47,23,69,25],[47,26,69,28,"response"],[47,34,69,36],[47,35,69,37,"refreshToken"],[47,47,69,49],[48,6,70,8],[48,10,70,12],[48,11,70,13,"scope"],[48,16,70,18],[48,19,70,21,"response"],[48,27,70,29],[48,28,70,30,"scope"],[48,33,70,35],[49,6,71,8],[49,10,71,12],[49,11,71,13,"state"],[49,16,71,18],[49,19,71,21,"response"],[49,27,71,29],[49,28,71,30,"state"],[49,33,71,35],[50,6,72,8],[50,10,72,12],[50,11,72,13,"idToken"],[50,18,72,20],[50,21,72,23,"response"],[50,29,72,31],[50,30,72,32,"idToken"],[50,37,72,39],[51,6,73,8],[51,10,73,12],[51,11,73,13,"issuedAt"],[51,19,73,21],[51,22,73,24,"response"],[51,30,73,32],[51,31,73,33,"issuedAt"],[51,39,73,41],[51,43,73,45,"getCurrentTimeInSeconds"],[51,66,73,68],[51,67,73,69],[51,68,73,70],[52,4,74,4],[53,4,74,5],[53,15,74,5,"_createClass2"],[53,28,74,5],[53,29,74,5,"default"],[53,36,74,5],[53,38,74,5,"TokenResponse"],[53,51,74,5],[54,6,74,5,"key"],[54,9,74,5],[55,6,74,5,"value"],[55,11,74,5],[55,13,75,4],[55,22,75,4,"applyResponseConfig"],[55,41,75,23,"applyResponseConfig"],[55,42,75,24,"response"],[55,50,75,32],[55,52,75,34],[56,8,76,8],[56,12,76,12],[56,13,76,13,"accessToken"],[56,24,76,24],[56,27,76,27,"response"],[56,35,76,35],[56,36,76,36,"accessToken"],[56,47,76,47],[56,51,76,51],[56,55,76,55],[56,56,76,56,"accessToken"],[56,67,76,67],[57,8,77,8],[57,12,77,12],[57,13,77,13,"tokenType"],[57,22,77,22],[57,25,77,25,"response"],[57,33,77,33],[57,34,77,34,"tokenType"],[57,43,77,43],[57,47,77,47],[57,51,77,51],[57,52,77,52,"tokenType"],[57,61,77,61],[57,65,77,65],[57,73,77,73],[58,8,78,8],[58,12,78,12],[58,13,78,13,"expiresIn"],[58,22,78,22],[58,25,78,25,"response"],[58,33,78,33],[58,34,78,34,"expiresIn"],[58,43,78,43],[58,47,78,47],[58,51,78,51],[58,52,78,52,"expiresIn"],[58,61,78,61],[59,8,79,8],[59,12,79,12],[59,13,79,13,"refreshToken"],[59,25,79,25],[59,28,79,28,"response"],[59,36,79,36],[59,37,79,37,"refreshToken"],[59,49,79,49],[59,53,79,53],[59,57,79,57],[59,58,79,58,"refreshToken"],[59,70,79,70],[60,8,80,8],[60,12,80,12],[60,13,80,13,"scope"],[60,18,80,18],[60,21,80,21,"response"],[60,29,80,29],[60,30,80,30,"scope"],[60,35,80,35],[60,39,80,39],[60,43,80,43],[60,44,80,44,"scope"],[60,49,80,49],[61,8,81,8],[61,12,81,12],[61,13,81,13,"state"],[61,18,81,18],[61,21,81,21,"response"],[61,29,81,29],[61,30,81,30,"state"],[61,35,81,35],[61,39,81,39],[61,43,81,43],[61,44,81,44,"state"],[61,49,81,49],[62,8,82,8],[62,12,82,12],[62,13,82,13,"idToken"],[62,20,82,20],[62,23,82,23,"response"],[62,31,82,31],[62,32,82,32,"idToken"],[62,39,82,39],[62,43,82,43],[62,47,82,47],[62,48,82,48,"idToken"],[62,55,82,55],[63,8,83,8],[63,12,83,12],[63,13,83,13,"issuedAt"],[63,21,83,21],[63,24,83,24,"response"],[63,32,83,32],[63,33,83,33,"issuedAt"],[63,41,83,41],[63,45,83,45],[63,49,83,49],[63,50,83,50,"issuedAt"],[63,58,83,58],[63,62,83,62,"getCurrentTimeInSeconds"],[63,85,83,85],[63,86,83,86],[63,87,83,87],[64,6,84,4],[65,4,84,5],[66,6,84,5,"key"],[66,9,84,5],[67,6,84,5,"value"],[67,11,84,5],[67,13,85,4],[67,22,85,4,"getRequestConfig"],[67,38,85,20,"getRequestConfig"],[67,39,85,20],[67,41,85,23],[68,8,86,8],[68,15,86,15],[69,10,87,12,"accessToken"],[69,21,87,23],[69,23,87,25],[69,27,87,29],[69,28,87,30,"accessToken"],[69,39,87,41],[70,10,88,12,"idToken"],[70,17,88,19],[70,19,88,21],[70,23,88,25],[70,24,88,26,"idToken"],[70,31,88,33],[71,10,89,12,"refreshToken"],[71,22,89,24],[71,24,89,26],[71,28,89,30],[71,29,89,31,"refreshToken"],[71,41,89,43],[72,10,90,12,"scope"],[72,15,90,17],[72,17,90,19],[72,21,90,23],[72,22,90,24,"scope"],[72,27,90,29],[73,10,91,12,"state"],[73,15,91,17],[73,17,91,19],[73,21,91,23],[73,22,91,24,"state"],[73,27,91,29],[74,10,92,12,"tokenType"],[74,19,92,21],[74,21,92,23],[74,25,92,27],[74,26,92,28,"tokenType"],[74,35,92,37],[75,10,93,12,"issuedAt"],[75,18,93,20],[75,20,93,22],[75,24,93,26],[75,25,93,27,"issuedAt"],[75,33,93,35],[76,10,94,12,"expiresIn"],[76,19,94,21],[76,21,94,23],[76,25,94,27],[76,26,94,28,"expiresIn"],[77,8,95,8],[77,9,95,9],[78,6,96,4],[79,4,96,5],[80,6,96,5,"key"],[80,9,96,5],[81,6,96,5,"value"],[81,11,96,5],[82,8,96,5],[82,12,96,5,"_refreshAsync"],[82,25,96,5],[82,32,96,5,"_asyncToGenerator2"],[82,50,96,5],[82,51,96,5,"default"],[82,58,96,5],[82,60,97,4],[82,71,97,23,"config"],[82,77,97,29],[82,79,97,31,"discovery"],[82,88,97,40],[82,90,97,42],[83,10,98,8],[83,14,98,14,"request"],[83,21,98,21],[83,24,98,24],[83,28,98,28,"RefreshTokenRequest"],[83,47,98,47],[83,48,98,48],[84,12,99,12],[84,15,99,15,"config"],[84,21,99,21],[85,12,100,12,"refreshToken"],[85,24,100,24],[85,26,100,26],[85,30,100,30],[85,31,100,31,"refreshToken"],[86,10,101,8],[86,11,101,9],[86,12,101,10],[87,10,102,8],[87,14,102,14,"response"],[87,22,102,22],[87,31,102,31,"request"],[87,38,102,38],[87,39,102,39,"performAsync"],[87,51,102,51],[87,52,102,52,"discovery"],[87,61,102,61],[87,62,102,62],[88,10,103,8],[89,10,104,8,"response"],[89,18,104,16],[89,19,104,17,"refreshToken"],[89,31,104,29],[89,34,104,32,"response"],[89,42,104,40],[89,43,104,41,"refreshToken"],[89,55,104,53],[89,59,104,57],[89,63,104,61],[89,64,104,62,"refreshToken"],[89,76,104,74],[90,10,105,8],[90,14,105,14,"json"],[90,18,105,18],[90,21,105,21,"response"],[90,29,105,29],[90,30,105,30,"getRequestConfig"],[90,46,105,46],[90,47,105,47],[90,48,105,48],[91,10,106,8],[91,14,106,12],[91,15,106,13,"applyResponseConfig"],[91,34,106,32],[91,35,106,33,"json"],[91,39,106,37],[91,40,106,38],[92,10,107,8],[92,17,107,15],[92,21,107,19],[93,8,108,4],[93,9,108,5],[94,8,108,5],[94,17,97,10,"refreshAsync"],[94,29,97,22,"refreshAsync"],[94,30,97,22,"_x"],[94,32,97,22],[94,34,97,22,"_x2"],[94,37,97,22],[95,10,97,22],[95,17,97,22,"_refreshAsync"],[95,30,97,22],[95,31,97,22,"apply"],[95,36,97,22],[95,43,97,22,"arguments"],[95,52,97,22],[96,8,97,22],[97,8,97,22],[97,15,97,10,"refreshAsync"],[97,27,97,22],[98,6,97,22],[99,4,97,22],[100,6,97,22,"key"],[100,9,97,22],[101,6,97,22,"value"],[101,11,97,22],[101,13,109,4],[101,22,109,4,"shouldRefresh"],[101,35,109,17,"shouldRefresh"],[101,36,109,17],[101,38,109,20],[102,8,110,8],[103,8,111,8],[103,15,111,15],[103,17,111,17,"TokenResponse"],[103,30,111,30],[103,31,111,31,"isTokenFresh"],[103,43,111,43],[103,44,111,44],[103,48,111,48],[103,49,111,49],[103,53,111,53],[103,54,111,54],[103,58,111,58],[103,59,111,59,"refreshToken"],[103,71,111,71],[103,72,111,72],[104,6,112,4],[105,4,112,5],[106,6,112,5,"key"],[106,9,112,5],[107,6,112,5,"value"],[107,11,112,5],[108,6,19,4],[109,0,20,0],[110,0,21,0],[111,0,22,0],[112,0,23,0],[113,0,24,0],[114,6,25,4],[114,15,25,11,"isTokenFresh"],[114,27,25,23,"isTokenFresh"],[114,28,25,24,"token"],[114,33,25,29],[114,35,29,34],[115,8,29,34],[115,12,29,4,"secondsMargin"],[115,25,29,17],[115,28,29,17,"arguments"],[115,37,29,17],[115,38,29,17,"length"],[115,44,29,17],[115,52,29,17,"arguments"],[115,61,29,17],[115,69,29,17,"undefined"],[115,78,29,17],[115,81,29,17,"arguments"],[115,90,29,17],[115,96,29,20],[115,98,29,22],[115,101,29,25],[115,103,29,27],[115,106,29,30],[115,107,29,31],[115,108,29,32],[116,8,30,8],[116,12,30,12],[116,13,30,13,"token"],[116,18,30,18],[116,20,30,20],[117,10,31,12],[117,17,31,19],[117,22,31,24],[118,8,32,8],[119,8,33,8],[119,12,33,12,"token"],[119,17,33,17],[119,18,33,18,"expiresIn"],[119,27,33,27],[119,29,33,29],[120,10,34,12],[120,14,34,18,"now"],[120,17,34,21],[120,20,34,24,"getCurrentTimeInSeconds"],[120,43,34,47],[120,44,34,48],[120,45,34,49],[121,10,35,12],[121,17,35,19,"now"],[121,20,35,22],[121,23,35,25,"token"],[121,28,35,30],[121,29,35,31,"issuedAt"],[121,37,35,39],[121,40,35,42,"token"],[121,45,35,47],[121,46,35,48,"expiresIn"],[121,55,35,57],[121,58,35,60,"secondsMargin"],[121,71,35,73],[122,8,36,8],[123,8,37,8],[124,8,38,8],[124,15,38,15],[124,19,38,19],[125,6,39,4],[126,6,40,4],[127,0,41,0],[128,0,42,0],[129,0,43,0],[130,0,44,0],[131,4,40,4],[132,6,40,4,"key"],[132,9,40,4],[133,6,40,4,"value"],[133,11,40,4],[133,13,45,4],[133,22,45,11,"fromQueryParams"],[133,37,45,26,"fromQueryParams"],[133,38,45,27,"params"],[133,44,45,33],[133,46,45,35],[134,8,46,8],[134,15,46,15],[134,19,46,19,"TokenResponse"],[134,32,46,32],[134,33,46,33],[135,10,47,12,"accessToken"],[135,21,47,23],[135,23,47,25,"params"],[135,29,47,31],[135,30,47,32,"access_token"],[135,42,47,44],[136,10,48,12,"refreshToken"],[136,22,48,24],[136,24,48,26,"params"],[136,30,48,32],[136,31,48,33,"refresh_token"],[136,44,48,46],[137,10,49,12,"scope"],[137,15,49,17],[137,17,49,19,"params"],[137,23,49,25],[137,24,49,26,"scope"],[137,29,49,31],[138,10,50,12,"state"],[138,15,50,17],[138,17,50,19,"params"],[138,23,50,25],[138,24,50,26,"state"],[138,29,50,31],[139,10,51,12,"idToken"],[139,17,51,19],[139,19,51,21,"params"],[139,25,51,27],[139,26,51,28,"id_token"],[139,34,51,36],[140,10,52,12,"tokenType"],[140,19,52,21],[140,21,52,23,"params"],[140,27,52,29],[140,28,52,30,"token_type"],[140,38,52,40],[141,10,53,12,"expiresIn"],[141,19,53,21],[141,21,53,23,"params"],[141,27,53,29],[141,28,53,30,"expires_in"],[141,38,53,40],[142,10,54,12,"issuedAt"],[142,18,54,20],[142,20,54,22,"params"],[142,26,54,28],[142,27,54,29,"issued_at"],[143,8,55,8],[143,9,55,9],[143,10,55,10],[144,6,56,4],[145,4,56,5],[146,2,56,5],[147,2,56,5],[147,6,114,13,"Request"],[147,13,114,20],[147,16,114,20,"exports"],[147,23,114,20],[147,24,114,20,"Request"],[147,31,114,20],[148,4,116,4],[148,13,116,4,"Request"],[148,21,116,16,"request"],[148,28,116,23],[148,30,116,25],[149,6,116,25],[149,10,116,25,"_classCallCheck2"],[149,26,116,25],[149,27,116,25,"default"],[149,34,116,25],[149,42,116,25,"Request"],[149,49,116,25],[150,6,117,8],[150,10,117,12],[150,11,117,13,"request"],[150,18,117,20],[150,21,117,23,"request"],[150,28,117,30],[151,4,118,4],[152,4,118,5],[152,15,118,5,"_createClass2"],[152,28,118,5],[152,29,118,5,"default"],[152,36,118,5],[152,38,118,5,"Request"],[152,45,118,5],[153,6,118,5,"key"],[153,9,118,5],[154,6,118,5,"value"],[154,11,118,5],[155,8,118,5],[155,12,118,5,"_performAsync"],[155,25,118,5],[155,32,118,5,"_asyncToGenerator2"],[155,50,118,5],[155,51,118,5,"default"],[155,58,118,5],[155,60,119,4],[155,71,119,23,"discovery"],[155,80,119,32],[155,82,119,34],[156,10,120,8],[156,16,120,14],[156,20,120,18,"Error"],[156,25,120,23],[156,26,120,24],[156,57,120,55],[156,58,120,56],[157,8,121,4],[157,9,121,5],[158,8,121,5],[158,17,119,10,"performAsync"],[158,29,119,22,"performAsync"],[158,30,119,22,"_x3"],[158,33,119,22],[159,10,119,22],[159,17,119,22,"_performAsync"],[159,30,119,22],[159,31,119,22,"apply"],[159,36,119,22],[159,43,119,22,"arguments"],[159,52,119,22],[160,8,119,22],[161,8,119,22],[161,15,119,10,"performAsync"],[161,27,119,22],[162,6,119,22],[163,4,119,22],[164,6,119,22,"key"],[164,9,119,22],[165,6,119,22,"value"],[165,11,119,22],[165,13,122,4],[165,22,122,4,"getRequestConfig"],[165,38,122,20,"getRequestConfig"],[165,39,122,20],[165,41,122,23],[166,8,123,8],[166,14,123,14],[166,18,123,18,"Error"],[166,23,123,23],[166,24,123,24],[166,59,123,59],[166,60,123,60],[167,6,124,4],[168,4,124,5],[169,6,124,5,"key"],[169,9,124,5],[170,6,124,5,"value"],[170,11,124,5],[170,13,125,4],[170,22,125,4,"getQueryBody"],[170,34,125,16,"getQueryBody"],[170,35,125,16],[170,37,125,19],[171,8,126,8],[171,14,126,14],[171,18,126,18,"Error"],[171,23,126,23],[171,24,126,24],[171,55,126,55],[171,56,126,56],[172,6,127,4],[173,4,127,5],[174,2,127,5],[175,2,129,0],[176,0,130,0],[177,0,131,0],[178,2,129,0],[178,6,132,13,"TokenRequest"],[178,18,132,25],[178,21,132,25,"exports"],[178,28,132,25],[178,29,132,25,"TokenRequest"],[178,41,132,25],[178,67,132,25,"_Request"],[178,75,132,25],[179,4,138,4],[179,13,138,4,"TokenRequest"],[179,26,138,16,"request"],[179,33,138,23],[179,35,138,25,"grantType"],[179,44,138,34],[179,46,138,36],[180,6,138,36],[180,10,138,36,"_this"],[180,15,138,36],[181,6,138,36],[181,10,138,36,"_classCallCheck2"],[181,26,138,36],[181,27,138,36,"default"],[181,34,138,36],[181,42,138,36,"TokenRequest"],[181,54,138,36],[182,6,139,8,"_this"],[182,11,139,8],[182,14,139,8,"_callSuper"],[182,24,139,8],[182,31,139,8,"TokenRequest"],[182,43,139,8],[182,46,139,14,"request"],[182,53,139,21],[183,6,140,8,"_this"],[183,11,140,8],[183,12,140,13,"grantType"],[183,21,140,22],[183,24,140,25,"grantType"],[183,33,140,34],[184,6,141,8,"_this"],[184,11,141,8],[184,12,141,13,"clientId"],[184,20,141,21],[184,23,141,24,"request"],[184,30,141,31],[184,31,141,32,"clientId"],[184,39,141,40],[185,6,142,8,"_this"],[185,11,142,8],[185,12,142,13,"clientSecret"],[185,24,142,25],[185,27,142,28,"request"],[185,34,142,35],[185,35,142,36,"clientSecret"],[185,47,142,48],[186,6,143,8,"_this"],[186,11,143,8],[186,12,143,13,"extraParams"],[186,23,143,24],[186,26,143,27,"request"],[186,33,143,34],[186,34,143,35,"extraParams"],[186,45,143,46],[187,6,144,8,"_this"],[187,11,144,8],[187,12,144,13,"scopes"],[187,18,144,19],[187,21,144,22,"request"],[187,28,144,29],[187,29,144,30,"scopes"],[187,35,144,36],[188,6,144,37],[188,13,144,37,"_this"],[188,18,144,37],[189,4,145,4],[190,4,145,5],[190,8,145,5,"_inherits2"],[190,18,145,5],[190,19,145,5,"default"],[190,26,145,5],[190,28,145,5,"TokenRequest"],[190,40,145,5],[190,42,145,5,"_Request"],[190,50,145,5],[191,4,145,5],[191,15,145,5,"_createClass2"],[191,28,145,5],[191,29,145,5,"default"],[191,36,145,5],[191,38,145,5,"TokenRequest"],[191,50,145,5],[192,6,145,5,"key"],[192,9,145,5],[193,6,145,5,"value"],[193,11,145,5],[193,13,146,4],[193,22,146,4,"getHeaders"],[193,32,146,14,"getHeaders"],[193,33,146,14],[193,35,146,17],[194,8,147,8],[194,12,147,14,"headers"],[194,19,147,21],[194,22,147,24],[195,10,147,26],[195,24,147,40],[195,26,147,42],[196,8,147,78],[196,9,147,79],[197,8,148,8],[197,12,148,12],[197,19,148,19],[197,23,148,23],[197,24,148,24,"clientSecret"],[197,36,148,36],[197,41,148,41],[197,52,148,52],[197,54,148,54],[198,10,149,12],[199,10,150,12],[200,10,151,12],[200,14,151,18,"encodedClientId"],[200,29,151,33],[200,32,151,36,"encodeURIComponent"],[200,50,151,54],[200,51,151,55],[200,55,151,59],[200,56,151,60,"clientId"],[200,64,151,68],[200,65,151,69],[201,10,152,12],[201,14,152,18,"encodedClientSecret"],[201,33,152,37],[201,36,152,40,"encodeURIComponent"],[201,54,152,58],[201,55,152,59],[201,59,152,63],[201,60,152,64,"clientSecret"],[201,72,152,76],[201,73,152,77],[202,10,153,12],[202,14,153,18,"credentials"],[202,25,153,29],[202,28,153,32],[202,31,153,35,"encodedClientId"],[202,46,153,50],[202,50,153,54,"encodedClientSecret"],[202,69,153,73],[202,71,153,75],[203,10,154,12],[203,14,154,18,"basicAuth"],[203,23,154,27],[203,26,154,30,"Base64"],[203,32,154,36],[203,33,154,37,"encodeNoWrap"],[203,45,154,49],[203,46,154,50,"credentials"],[203,57,154,61],[203,58,154,62],[204,10,155,12,"headers"],[204,17,155,19],[204,18,155,20,"Authorization"],[204,31,155,33],[204,34,155,36],[204,43,155,45,"basicAuth"],[204,52,155,54],[204,54,155,56],[205,8,156,8],[206,8,157,8],[206,15,157,15,"headers"],[206,22,157,22],[207,6,158,4],[208,4,158,5],[209,6,158,5,"key"],[209,9,158,5],[210,6,158,5,"value"],[210,11,158,5],[211,8,158,5],[211,12,158,5,"_performAsync2"],[211,26,158,5],[211,33,158,5,"_asyncToGenerator2"],[211,51,158,5],[211,52,158,5,"default"],[211,59,158,5],[211,61,159,4],[211,72,159,23,"discovery"],[211,81,159,32],[211,83,159,34],[212,10,160,8],[213,10,161,8],[213,14,161,8,"invariant"],[213,32,161,17],[213,34,161,18,"discovery"],[213,43,161,27],[213,44,161,28,"tokenEndpoint"],[213,57,161,41],[213,59,161,43],[213,123,161,107],[213,124,161,108],[214,10,162,8],[214,14,162,14,"response"],[214,22,162,22],[214,31,162,31],[214,35,162,31,"requestAsync"],[214,54,162,43],[214,56,162,44,"discovery"],[214,65,162,53],[214,66,162,54,"tokenEndpoint"],[214,79,162,67],[214,81,162,69],[215,12,163,12,"dataType"],[215,20,163,20],[215,22,163,22],[215,28,163,28],[216,12,164,12,"method"],[216,18,164,18],[216,20,164,20],[216,26,164,26],[217,12,165,12,"headers"],[217,19,165,19],[217,21,165,21],[217,25,165,25],[217,26,165,26,"getHeaders"],[217,36,165,36],[217,37,165,37],[217,38,165,38],[218,12,166,12,"body"],[218,16,166,16],[218,18,166,18],[218,22,166,22],[218,23,166,23,"getQueryBody"],[218,35,166,35],[218,36,166,36],[219,10,167,8],[219,11,167,9],[219,12,167,10],[220,10,168,8],[220,14,168,12],[220,21,168,19],[220,25,168,23,"response"],[220,33,168,31],[220,35,168,33],[221,12,169,12],[221,18,169,18],[221,22,169,22,"TokenError"],[221,40,169,32],[221,41,169,33,"response"],[221,49,169,41],[221,50,169,42],[222,10,170,8],[223,10,171,8],[223,17,171,15],[223,21,171,19,"TokenResponse"],[223,34,171,32],[223,35,171,33],[224,12,172,12,"accessToken"],[224,23,172,23],[224,25,172,25,"response"],[224,33,172,33],[224,34,172,34,"access_token"],[224,46,172,46],[225,12,173,12,"tokenType"],[225,21,173,21],[225,23,173,23,"response"],[225,31,173,31],[225,32,173,32,"token_type"],[225,42,173,42],[226,12,174,12,"expiresIn"],[226,21,174,21],[226,23,174,23,"response"],[226,31,174,31],[226,32,174,32,"expires_in"],[226,42,174,42],[227,12,175,12,"refreshToken"],[227,24,175,24],[227,26,175,26,"response"],[227,34,175,34],[227,35,175,35,"refresh_token"],[227,48,175,48],[228,12,176,12,"scope"],[228,17,176,17],[228,19,176,19,"response"],[228,27,176,27],[228,28,176,28,"scope"],[228,33,176,33],[229,12,177,12,"idToken"],[229,19,177,19],[229,21,177,21,"response"],[229,29,177,29],[229,30,177,30,"id_token"],[229,38,177,38],[230,12,178,12,"issuedAt"],[230,20,178,20],[230,22,178,22,"response"],[230,30,178,30],[230,31,178,31,"issued_at"],[231,10,179,8],[231,11,179,9],[231,12,179,10],[232,8,180,4],[232,9,180,5],[233,8,180,5],[233,17,159,10,"performAsync"],[233,29,159,22,"performAsync"],[233,30,159,22,"_x4"],[233,33,159,22],[234,10,159,22],[234,17,159,22,"_performAsync2"],[234,31,159,22],[234,32,159,22,"apply"],[234,37,159,22],[234,44,159,22,"arguments"],[234,53,159,22],[235,8,159,22],[236,8,159,22],[236,15,159,10,"performAsync"],[236,27,159,22],[237,6,159,22],[238,4,159,22],[239,6,159,22,"key"],[239,9,159,22],[240,6,159,22,"value"],[240,11,159,22],[240,13,181,4],[240,22,181,4,"getQueryBody"],[240,34,181,16,"getQueryBody"],[240,35,181,16],[240,37,181,19],[241,8,182,8],[241,12,182,14,"queryBody"],[241,21,182,23],[241,24,182,26],[242,10,183,12,"grant_type"],[242,20,183,22],[242,22,183,24],[242,26,183,28],[242,27,183,29,"grantType"],[243,8,184,8],[243,9,184,9],[244,8,185,8],[244,12,185,12],[244,13,185,13],[244,17,185,17],[244,18,185,18,"clientSecret"],[244,30,185,30],[244,32,185,32],[245,10,186,12],[246,10,187,12,"queryBody"],[246,19,187,21],[246,20,187,22,"client_id"],[246,29,187,31],[246,32,187,34],[246,36,187,38],[246,37,187,39,"clientId"],[246,45,187,47],[247,8,188,8],[248,8,189,8],[248,12,189,12],[248,16,189,16],[248,17,189,17,"scopes"],[248,23,189,23],[248,25,189,25],[249,10,190,12,"queryBody"],[249,19,190,21],[249,20,190,22,"scope"],[249,25,190,27],[249,28,190,30],[249,32,190,34],[249,33,190,35,"scopes"],[249,39,190,41],[249,40,190,42,"join"],[249,44,190,46],[249,45,190,47],[249,48,190,50],[249,49,190,51],[250,8,191,8],[251,8,192,8],[251,12,192,12],[251,16,192,16],[251,17,192,17,"extraParams"],[251,28,192,28],[251,30,192,30],[252,10,193,12],[252,15,193,17],[252,19,193,23,"extra"],[252,24,193,28],[252,28,193,32],[252,32,193,36],[252,33,193,37,"extraParams"],[252,44,193,48],[252,46,193,50],[253,12,194,16],[253,16,194,20,"extra"],[253,21,194,25],[253,25,194,29],[253,29,194,33],[253,30,194,34,"extraParams"],[253,41,194,45],[253,45,194,49],[253,47,194,51,"extra"],[253,52,194,56],[253,56,194,60,"queryBody"],[253,65,194,69],[253,66,194,70],[253,68,194,72],[254,14,195,20,"queryBody"],[254,23,195,29],[254,24,195,30,"extra"],[254,29,195,35],[254,30,195,36],[254,33,195,39],[254,37,195,43],[254,38,195,44,"extraParams"],[254,49,195,55],[254,50,195,56,"extra"],[254,55,195,61],[254,56,195,62],[255,12,196,16],[256,10,197,12],[257,8,198,8],[258,8,199,8],[258,15,199,15,"queryBody"],[258,24,199,24],[259,6,200,4],[260,4,200,5],[261,2,200,5],[261,4,132,34,"Request"],[261,11,132,41],[262,2,202,0],[263,0,203,0],[264,0,204,0],[265,0,205,0],[266,0,206,0],[267,2,202,0],[267,6,207,13,"AccessTokenRequest"],[267,24,207,31],[267,27,207,31,"exports"],[267,34,207,31],[267,35,207,31,"AccessTokenRequest"],[267,53,207,31],[267,79,207,31,"_TokenRequest"],[267,92,207,31],[268,4,210,4],[268,13,210,4,"AccessTokenRequest"],[268,32,210,16,"options"],[268,39,210,23],[268,41,210,25],[269,6,210,25],[269,10,210,25,"_this2"],[269,16,210,25],[270,6,210,25],[270,10,210,25,"_classCallCheck2"],[270,26,210,25],[270,27,210,25,"default"],[270,34,210,25],[270,42,210,25,"AccessTokenRequest"],[270,60,210,25],[271,6,211,8],[271,10,211,8,"invariant"],[271,28,211,17],[271,30,211,18,"options"],[271,37,211,25],[271,38,211,26,"redirectUri"],[271,49,211,37],[271,51,211,39],[271,174,211,162,"Platform"],[271,195,211,170],[271,196,211,171,"select"],[271,202,211,177],[271,203,211,178],[272,8,212,12,"web"],[272,11,212,15],[272,13,212,17],[272,47,212,51],[273,8,213,12,"default"],[273,15,213,19],[273,17,213,21],[274,6,214,8],[274,7,214,9],[274,8,214,10],[274,10,214,12],[274,11,214,13],[275,6,215,8],[275,10,215,8,"invariant"],[275,28,215,17],[275,30,215,18,"options"],[275,37,215,25],[275,38,215,26,"code"],[275,42,215,30],[275,44,215,32],[275,186,215,174],[275,187,215,175],[276,6,216,8,"_this2"],[276,12,216,8],[276,15,216,8,"_callSuper"],[276,25,216,8],[276,32,216,8,"AccessTokenRequest"],[276,50,216,8],[276,53,216,14,"options"],[276,60,216,21],[276,62,216,23,"GrantType"],[276,86,216,32],[276,87,216,33,"AuthorizationCode"],[276,104,216,50],[277,6,217,8,"_this2"],[277,12,217,8],[277,13,217,13,"code"],[277,17,217,17],[277,20,217,20,"options"],[277,27,217,27],[277,28,217,28,"code"],[277,32,217,32],[278,6,218,8,"_this2"],[278,12,218,8],[278,13,218,13,"redirectUri"],[278,24,218,24],[278,27,218,27,"options"],[278,34,218,34],[278,35,218,35,"redirectUri"],[278,46,218,46],[279,6,218,47],[279,13,218,47,"_this2"],[279,19,218,47],[280,4,219,4],[281,4,219,5],[281,8,219,5,"_inherits2"],[281,18,219,5],[281,19,219,5,"default"],[281,26,219,5],[281,28,219,5,"AccessTokenRequest"],[281,46,219,5],[281,48,219,5,"_TokenRequest"],[281,61,219,5],[282,4,219,5],[282,15,219,5,"_createClass2"],[282,28,219,5],[282,29,219,5,"default"],[282,36,219,5],[282,38,219,5,"AccessTokenRequest"],[282,56,219,5],[283,6,219,5,"key"],[283,9,219,5],[284,6,219,5,"value"],[284,11,219,5],[284,13,220,4],[284,22,220,4,"getQueryBody"],[284,34,220,16,"getQueryBody"],[284,35,220,16],[284,37,220,19],[285,8,221,8],[285,12,221,14,"queryBody"],[285,21,221,23],[285,24,221,23,"_superPropGet"],[285,37,221,23],[285,38,221,23,"AccessTokenRequest"],[285,56,221,23],[285,86,221,46],[286,8,222,8],[286,12,222,12],[286,16,222,16],[286,17,222,17,"redirectUri"],[286,28,222,28],[286,30,222,30],[287,10,223,12,"queryBody"],[287,19,223,21],[287,20,223,22,"redirect_uri"],[287,32,223,34],[287,35,223,37],[287,39,223,41],[287,40,223,42,"redirectUri"],[287,51,223,53],[288,8,224,8],[289,8,225,8],[289,12,225,12],[289,16,225,16],[289,17,225,17,"code"],[289,21,225,21],[289,23,225,23],[290,10,226,12,"queryBody"],[290,19,226,21],[290,20,226,22,"code"],[290,24,226,26],[290,27,226,29],[290,31,226,33],[290,32,226,34,"code"],[290,36,226,38],[291,8,227,8],[292,8,228,8],[292,15,228,15,"queryBody"],[292,24,228,24],[293,6,229,4],[294,4,229,5],[295,6,229,5,"key"],[295,9,229,5],[296,6,229,5,"value"],[296,11,229,5],[296,13,230,4],[296,22,230,4,"getRequestConfig"],[296,38,230,20,"getRequestConfig"],[296,39,230,20],[296,41,230,23],[297,8,231,8],[297,15,231,15],[298,10,232,12,"clientId"],[298,18,232,20],[298,20,232,22],[298,24,232,26],[298,25,232,27,"clientId"],[298,33,232,35],[299,10,233,12,"clientSecret"],[299,22,233,24],[299,24,233,26],[299,28,233,30],[299,29,233,31,"clientSecret"],[299,41,233,43],[300,10,234,12,"grantType"],[300,19,234,21],[300,21,234,23],[300,25,234,27],[300,26,234,28,"grantType"],[300,35,234,37],[301,10,235,12,"code"],[301,14,235,16],[301,16,235,18],[301,20,235,22],[301,21,235,23,"code"],[301,25,235,27],[302,10,236,12,"redirectUri"],[302,21,236,23],[302,23,236,25],[302,27,236,29],[302,28,236,30,"redirectUri"],[302,39,236,41],[303,10,237,12,"extraParams"],[303,21,237,23],[303,23,237,25],[303,27,237,29],[303,28,237,30,"extraParams"],[303,39,237,41],[304,10,238,12,"scopes"],[304,16,238,18],[304,18,238,20],[304,22,238,24],[304,23,238,25,"scopes"],[305,8,239,8],[305,9,239,9],[306,6,240,4],[307,4,240,5],[308,2,240,5],[308,4,207,40,"TokenRequest"],[308,16,207,52],[309,2,242,0],[310,0,243,0],[311,0,244,0],[312,0,245,0],[313,0,246,0],[314,2,242,0],[314,6,247,13,"RefreshTokenRequest"],[314,25,247,32],[314,28,247,32,"exports"],[314,35,247,32],[314,36,247,32,"RefreshTokenRequest"],[314,55,247,32],[314,81,247,32,"_TokenRequest2"],[314,95,247,32],[315,4,249,4],[315,13,249,4,"RefreshTokenRequest"],[315,33,249,16,"options"],[315,40,249,23],[315,42,249,25],[316,6,249,25],[316,10,249,25,"_this3"],[316,16,249,25],[317,6,249,25],[317,10,249,25,"_classCallCheck2"],[317,26,249,25],[317,27,249,25,"default"],[317,34,249,25],[317,42,249,25,"RefreshTokenRequest"],[317,61,249,25],[318,6,250,8],[318,10,250,8,"invariant"],[318,28,250,17],[318,30,250,18,"options"],[318,37,250,25],[318,38,250,26,"refreshToken"],[318,50,250,38],[318,52,250,40],[318,112,250,100],[318,113,250,101],[319,6,251,8,"_this3"],[319,12,251,8],[319,15,251,8,"_callSuper"],[319,25,251,8],[319,32,251,8,"RefreshTokenRequest"],[319,51,251,8],[319,54,251,14,"options"],[319,61,251,21],[319,63,251,23,"GrantType"],[319,87,251,32],[319,88,251,33,"RefreshToken"],[319,100,251,45],[320,6,252,8,"_this3"],[320,12,252,8],[320,13,252,13,"refreshToken"],[320,25,252,25],[320,28,252,28,"options"],[320,35,252,35],[320,36,252,36,"refreshToken"],[320,48,252,48],[321,6,252,49],[321,13,252,49,"_this3"],[321,19,252,49],[322,4,253,4],[323,4,253,5],[323,8,253,5,"_inherits2"],[323,18,253,5],[323,19,253,5,"default"],[323,26,253,5],[323,28,253,5,"RefreshTokenRequest"],[323,47,253,5],[323,49,253,5,"_TokenRequest2"],[323,63,253,5],[324,4,253,5],[324,15,253,5,"_createClass2"],[324,28,253,5],[324,29,253,5,"default"],[324,36,253,5],[324,38,253,5,"RefreshTokenRequest"],[324,57,253,5],[325,6,253,5,"key"],[325,9,253,5],[326,6,253,5,"value"],[326,11,253,5],[326,13,254,4],[326,22,254,4,"getQueryBody"],[326,34,254,16,"getQueryBody"],[326,35,254,16],[326,37,254,19],[327,8,255,8],[327,12,255,14,"queryBody"],[327,21,255,23],[327,24,255,23,"_superPropGet"],[327,37,255,23],[327,38,255,23,"RefreshTokenRequest"],[327,57,255,23],[327,87,255,46],[328,8,256,8],[328,12,256,12],[328,16,256,16],[328,17,256,17,"refreshToken"],[328,29,256,29],[328,31,256,31],[329,10,257,12,"queryBody"],[329,19,257,21],[329,20,257,22,"refresh_token"],[329,33,257,35],[329,36,257,38],[329,40,257,42],[329,41,257,43,"refreshToken"],[329,53,257,55],[330,8,258,8],[331,8,259,8],[331,15,259,15,"queryBody"],[331,24,259,24],[332,6,260,4],[333,4,260,5],[334,6,260,5,"key"],[334,9,260,5],[335,6,260,5,"value"],[335,11,260,5],[335,13,261,4],[335,22,261,4,"getRequestConfig"],[335,38,261,20,"getRequestConfig"],[335,39,261,20],[335,41,261,23],[336,8,262,8],[336,15,262,15],[337,10,263,12,"clientId"],[337,18,263,20],[337,20,263,22],[337,24,263,26],[337,25,263,27,"clientId"],[337,33,263,35],[338,10,264,12,"clientSecret"],[338,22,264,24],[338,24,264,26],[338,28,264,30],[338,29,264,31,"clientSecret"],[338,41,264,43],[339,10,265,12,"grantType"],[339,19,265,21],[339,21,265,23],[339,25,265,27],[339,26,265,28,"grantType"],[339,35,265,37],[340,10,266,12,"refreshToken"],[340,22,266,24],[340,24,266,26],[340,28,266,30],[340,29,266,31,"refreshToken"],[340,41,266,43],[341,10,267,12,"extraParams"],[341,21,267,23],[341,23,267,25],[341,27,267,29],[341,28,267,30,"extraParams"],[341,39,267,41],[342,10,268,12,"scopes"],[342,16,268,18],[342,18,268,20],[342,22,268,24],[342,23,268,25,"scopes"],[343,8,269,8],[343,9,269,9],[344,6,270,4],[345,4,270,5],[346,2,270,5],[346,4,247,41,"TokenRequest"],[346,16,247,53],[347,2,272,0],[348,0,273,0],[349,0,274,0],[350,0,275,0],[351,0,276,0],[352,2,272,0],[352,6,277,13,"RevokeTokenRequest"],[352,24,277,31],[352,27,277,31,"exports"],[352,34,277,31],[352,35,277,31,"RevokeTokenRequest"],[352,53,277,31],[352,79,277,31,"_Request2"],[352,88,277,31],[353,4,282,4],[353,13,282,4,"RevokeTokenRequest"],[353,32,282,16,"request"],[353,39,282,23],[353,41,282,25],[354,6,282,25],[354,10,282,25,"_this4"],[354,16,282,25],[355,6,282,25],[355,10,282,25,"_classCallCheck2"],[355,26,282,25],[355,27,282,25,"default"],[355,34,282,25],[355,42,282,25,"RevokeTokenRequest"],[355,60,282,25],[356,6,283,8,"_this4"],[356,12,283,8],[356,15,283,8,"_callSuper"],[356,25,283,8],[356,32,283,8,"RevokeTokenRequest"],[356,50,283,8],[356,53,283,14,"request"],[356,60,283,21],[357,6,284,8],[357,10,284,8,"invariant"],[357,28,284,17],[357,30,284,18,"request"],[357,37,284,25],[357,38,284,26,"token"],[357,43,284,31],[357,45,284,33],[357,107,284,95],[357,108,284,96],[358,6,285,8,"_this4"],[358,12,285,8],[358,13,285,13,"clientId"],[358,21,285,21],[358,24,285,24,"request"],[358,31,285,31],[358,32,285,32,"clientId"],[358,40,285,40],[359,6,286,8,"_this4"],[359,12,286,8],[359,13,286,13,"clientSecret"],[359,25,286,25],[359,28,286,28,"request"],[359,35,286,35],[359,36,286,36,"clientSecret"],[359,48,286,48],[360,6,287,8,"_this4"],[360,12,287,8],[360,13,287,13,"token"],[360,18,287,18],[360,21,287,21,"request"],[360,28,287,28],[360,29,287,29,"token"],[360,34,287,34],[361,6,288,8,"_this4"],[361,12,288,8],[361,13,288,13,"tokenTypeHint"],[361,26,288,26],[361,29,288,29,"request"],[361,36,288,36],[361,37,288,37,"tokenTypeHint"],[361,50,288,50],[362,6,288,51],[362,13,288,51,"_this4"],[362,19,288,51],[363,4,289,4],[364,4,289,5],[364,8,289,5,"_inherits2"],[364,18,289,5],[364,19,289,5,"default"],[364,26,289,5],[364,28,289,5,"RevokeTokenRequest"],[364,46,289,5],[364,48,289,5,"_Request2"],[364,57,289,5],[365,4,289,5],[365,15,289,5,"_createClass2"],[365,28,289,5],[365,29,289,5,"default"],[365,36,289,5],[365,38,289,5,"RevokeTokenRequest"],[365,56,289,5],[366,6,289,5,"key"],[366,9,289,5],[367,6,289,5,"value"],[367,11,289,5],[367,13,290,4],[367,22,290,4,"getHeaders"],[367,32,290,14,"getHeaders"],[367,33,290,14],[367,35,290,17],[368,8,291,8],[368,12,291,14,"headers"],[368,19,291,21],[368,22,291,24],[369,10,291,26],[369,24,291,40],[369,26,291,42],[370,8,291,78],[370,9,291,79],[371,8,292,8],[371,12,292,12],[371,19,292,19],[371,23,292,23],[371,24,292,24,"clientSecret"],[371,36,292,36],[371,41,292,41],[371,52,292,52],[371,56,292,56],[371,60,292,60],[371,61,292,61,"clientId"],[371,69,292,69],[371,71,292,71],[372,10,293,12],[373,10,294,12],[374,10,295,12],[374,14,295,18,"encodedClientId"],[374,29,295,33],[374,32,295,36,"encodeURIComponent"],[374,50,295,54],[374,51,295,55],[374,55,295,59],[374,56,295,60,"clientId"],[374,64,295,68],[374,65,295,69],[375,10,296,12],[375,14,296,18,"encodedClientSecret"],[375,33,296,37],[375,36,296,40,"encodeURIComponent"],[375,54,296,58],[375,55,296,59],[375,59,296,63],[375,60,296,64,"clientSecret"],[375,72,296,76],[375,73,296,77],[376,10,297,12],[376,14,297,18,"credentials"],[376,25,297,29],[376,28,297,32],[376,31,297,35,"encodedClientId"],[376,46,297,50],[376,50,297,54,"encodedClientSecret"],[376,69,297,73],[376,71,297,75],[377,10,298,12],[377,14,298,18,"basicAuth"],[377,23,298,27],[377,26,298,30,"Base64"],[377,32,298,36],[377,33,298,37,"encodeNoWrap"],[377,45,298,49],[377,46,298,50,"credentials"],[377,57,298,61],[377,58,298,62],[378,10,299,12,"headers"],[378,17,299,19],[378,18,299,20,"Authorization"],[378,31,299,33],[378,34,299,36],[378,43,299,45,"basicAuth"],[378,52,299,54],[378,54,299,56],[379,8,300,8],[380,8,301,8],[380,15,301,15,"headers"],[380,22,301,22],[381,6,302,4],[382,6,303,4],[383,0,304,0],[384,0,305,0],[385,0,306,0],[386,0,307,0],[387,4,303,4],[388,6,303,4,"key"],[388,9,303,4],[389,6,303,4,"value"],[389,11,303,4],[390,8,303,4],[390,12,303,4,"_performAsync3"],[390,26,303,4],[390,33,303,4,"_asyncToGenerator2"],[390,51,303,4],[390,52,303,4,"default"],[390,59,303,4],[390,61,308,4],[390,72,308,23,"discovery"],[390,81,308,32],[390,83,308,34],[391,10,309,8],[391,14,309,8,"invariant"],[391,32,309,17],[391,34,309,18,"discovery"],[391,43,309,27],[391,44,309,28,"revocationEndpoint"],[391,62,309,46],[391,64,309,48],[391,133,309,117],[391,134,309,118],[392,10,310,8],[392,16,310,14],[392,20,310,14,"requestAsync"],[392,39,310,26],[392,41,310,27,"discovery"],[392,50,310,36],[392,51,310,37,"revocationEndpoint"],[392,69,310,55],[392,71,310,57],[393,12,311,12,"method"],[393,18,311,18],[393,20,311,20],[393,26,311,26],[394,12,312,12,"headers"],[394,19,312,19],[394,21,312,21],[394,25,312,25],[394,26,312,26,"getHeaders"],[394,36,312,36],[394,37,312,37],[394,38,312,38],[395,12,313,12,"body"],[395,16,313,16],[395,18,313,18],[395,22,313,22],[395,23,313,23,"getQueryBody"],[395,35,313,35],[395,36,313,36],[396,10,314,8],[396,11,314,9],[396,12,314,10],[397,10,315,8],[397,17,315,15],[397,21,315,19],[398,8,316,4],[398,9,316,5],[399,8,316,5],[399,17,308,10,"performAsync"],[399,29,308,22,"performAsync"],[399,30,308,22,"_x5"],[399,33,308,22],[400,10,308,22],[400,17,308,22,"_performAsync3"],[400,31,308,22],[400,32,308,22,"apply"],[400,37,308,22],[400,44,308,22,"arguments"],[400,53,308,22],[401,8,308,22],[402,8,308,22],[402,15,308,10,"performAsync"],[402,27,308,22],[403,6,308,22],[404,4,308,22],[405,6,308,22,"key"],[405,9,308,22],[406,6,308,22,"value"],[406,11,308,22],[406,13,317,4],[406,22,317,4,"getRequestConfig"],[406,38,317,20,"getRequestConfig"],[406,39,317,20],[406,41,317,23],[407,8,318,8],[407,15,318,15],[408,10,319,12,"clientId"],[408,18,319,20],[408,20,319,22],[408,24,319,26],[408,25,319,27,"clientId"],[408,33,319,35],[409,10,320,12,"clientSecret"],[409,22,320,24],[409,24,320,26],[409,28,320,30],[409,29,320,31,"clientSecret"],[409,41,320,43],[410,10,321,12,"token"],[410,15,321,17],[410,17,321,19],[410,21,321,23],[410,22,321,24,"token"],[410,27,321,29],[411,10,322,12,"tokenTypeHint"],[411,23,322,25],[411,25,322,27],[411,29,322,31],[411,30,322,32,"tokenTypeHint"],[412,8,323,8],[412,9,323,9],[413,6,324,4],[414,4,324,5],[415,6,324,5,"key"],[415,9,324,5],[416,6,324,5,"value"],[416,11,324,5],[416,13,325,4],[416,22,325,4,"getQueryBody"],[416,34,325,16,"getQueryBody"],[416,35,325,16],[416,37,325,19],[417,8,326,8],[417,12,326,14,"queryBody"],[417,21,326,23],[417,24,326,26],[418,10,326,28,"token"],[418,15,326,33],[418,17,326,35],[418,21,326,39],[418,22,326,40,"token"],[419,8,326,46],[419,9,326,47],[420,8,327,8],[420,12,327,12],[420,16,327,16],[420,17,327,17,"tokenTypeHint"],[420,30,327,30],[420,32,327,32],[421,10,328,12,"queryBody"],[421,19,328,21],[421,20,328,22,"token_type_hint"],[421,35,328,37],[421,38,328,40],[421,42,328,44],[421,43,328,45,"tokenTypeHint"],[421,56,328,58],[422,8,329,8],[423,8,330,8],[424,8,331,8],[424,12,331,12],[424,16,331,16],[424,17,331,17,"clientId"],[424,25,331,25],[424,27,331,27],[425,10,332,12,"queryBody"],[425,19,332,21],[425,20,332,22,"client_id"],[425,29,332,31],[425,32,332,34],[425,36,332,38],[425,37,332,39,"clientId"],[425,45,332,47],[426,8,333,8],[427,8,334,8],[427,12,334,12],[427,16,334,16],[427,17,334,17,"clientSecret"],[427,29,334,29],[427,31,334,31],[428,10,335,12,"queryBody"],[428,19,335,21],[428,20,335,22,"client_secret"],[428,33,335,35],[428,36,335,38],[428,40,335,42],[428,41,335,43,"clientSecret"],[428,53,335,55],[429,8,336,8],[430,8,337,8],[430,15,337,15,"queryBody"],[430,24,337,24],[431,6,338,4],[432,4,338,5],[433,2,338,5],[433,4,277,40,"Request"],[433,11,277,47],[433,14,340,0],[434,2,341,0],[435,0,342,0],[436,0,343,0],[437,0,344,0],[438,0,345,0],[439,0,346,0],[440,0,347,0],[441,2,348,7],[441,11,348,16,"exchangeCodeAsync"],[441,28,348,33,"exchangeCodeAsync"],[441,29,348,34,"config"],[441,35,348,40],[441,37,348,42,"discovery"],[441,46,348,51],[441,48,348,53],[442,4,349,4],[442,8,349,10,"request"],[442,15,349,17],[442,18,349,20],[442,22,349,24,"AccessTokenRequest"],[442,40,349,42],[442,41,349,43,"config"],[442,47,349,49],[442,48,349,50],[443,4,350,4],[443,11,350,11,"request"],[443,18,350,18],[443,19,350,19,"performAsync"],[443,31,350,31],[443,32,350,32,"discovery"],[443,41,350,41],[443,42,350,42],[444,2,351,0],[445,2,352,0],[446,2,353,0],[447,0,354,0],[448,0,355,0],[449,0,356,0],[450,0,357,0],[451,0,358,0],[452,0,359,0],[453,0,360,0],[454,0,361,0],[455,0,362,0],[456,0,363,0],[457,0,364,0],[458,2,365,7],[458,11,365,16,"refreshAsync"],[458,23,365,28,"refreshAsync"],[458,24,365,29,"config"],[458,30,365,35],[458,32,365,37,"discovery"],[458,41,365,46],[458,43,365,48],[459,4,366,4],[459,8,366,10,"request"],[459,15,366,17],[459,18,366,20],[459,22,366,24,"RefreshTokenRequest"],[459,41,366,43],[459,42,366,44,"config"],[459,48,366,50],[459,49,366,51],[460,4,367,4],[460,11,367,11,"request"],[460,18,367,18],[460,19,367,19,"performAsync"],[460,31,367,31],[460,32,367,32,"discovery"],[460,41,367,41],[460,42,367,42],[461,2,368,0],[462,2,369,0],[463,2,370,0],[464,0,371,0],[465,0,372,0],[466,0,373,0],[467,0,374,0],[468,0,375,0],[469,0,376,0],[470,2,377,7],[470,11,377,16,"revokeAsync"],[470,22,377,27,"revokeAsync"],[470,23,377,28,"config"],[470,29,377,34],[470,31,377,36,"discovery"],[470,40,377,45],[470,42,377,47],[471,4,378,4],[471,8,378,10,"request"],[471,15,378,17],[471,18,378,20],[471,22,378,24,"RevokeTokenRequest"],[471,40,378,42],[471,41,378,43,"config"],[471,47,378,49],[471,48,378,50],[472,4,379,4],[472,11,379,11,"request"],[472,18,379,18],[472,19,379,19,"performAsync"],[472,31,379,31],[472,32,379,32,"discovery"],[472,41,379,41],[472,42,379,42],[473,2,380,0],[474,2,381,0],[475,0,382,0],[476,0,383,0],[477,0,384,0],[478,0,385,0],[479,0,386,0],[480,0,387,0],[481,0,388,0],[482,2,389,7],[482,11,389,16,"fetchUserInfoAsync"],[482,29,389,34,"fetchUserInfoAsync"],[482,30,389,35,"config"],[482,36,389,41],[482,38,389,43,"discovery"],[482,47,389,52],[482,49,389,54],[483,4,390,4],[483,8,390,8],[483,9,390,9,"discovery"],[483,18,390,18],[483,19,390,19,"userInfoEndpoint"],[483,35,390,35],[483,37,390,37],[484,6,391,8],[484,12,391,14],[484,16,391,18,"Error"],[484,21,391,23],[484,22,391,24],[484,98,391,100],[484,99,391,101],[485,4,392,4],[486,4,393,4],[486,11,393,11],[486,15,393,11,"requestAsync"],[486,34,393,23],[486,36,393,24,"discovery"],[486,45,393,33],[486,46,393,34,"userInfoEndpoint"],[486,62,393,50],[486,64,393,52],[487,6,394,8,"headers"],[487,13,394,15],[487,15,394,17],[488,8,395,12],[488,22,395,26],[488,24,395,28],[488,59,395,63],[489,8,396,12,"Authorization"],[489,21,396,25],[489,23,396,27],[489,33,396,37,"config"],[489,39,396,43],[489,40,396,44,"accessToken"],[489,51,396,55],[490,6,397,8],[490,7,397,9],[491,6,398,8,"dataType"],[491,14,398,16],[491,16,398,18],[491,22,398,24],[492,6,399,8,"method"],[492,12,399,14],[492,14,399,16],[493,4,400,4],[493,5,400,5],[493,6,400,6],[494,2,401,0],[495,0,401,1],[495,3]],"functionMap":{"names":["<global>","getCurrentTimeInSeconds","TokenResponse","TokenResponse.isTokenFresh","TokenResponse.fromQueryParams","TokenResponse#constructor","TokenResponse#applyResponseConfig","TokenResponse#getRequestConfig","TokenResponse#refreshAsync","TokenResponse#shouldRefresh","Request","Request#constructor","Request#performAsync","Request#getRequestConfig","Request#getQueryBody","TokenRequest","constructor","getHeaders","performAsync","getQueryBody","AccessTokenRequest","AccessTokenRequest#constructor","AccessTokenRequest#getQueryBody","AccessTokenRequest#getRequestConfig","RefreshTokenRequest","RefreshTokenRequest#constructor","RefreshTokenRequest#getQueryBody","RefreshTokenRequest#getRequestConfig","RevokeTokenRequest","RevokeTokenRequest#constructor","RevokeTokenRequest#getHeaders","RevokeTokenRequest#performAsync","RevokeTokenRequest#getRequestConfig","RevokeTokenRequest#getQueryBody","exchangeCodeAsync","refreshAsync","revokeAsync","fetchUserInfoAsync"],"mappings":"AAA;OCS;CDE;OEM;ICO;KDc;IEM;KFW;IGS;KHS;IIC;KJS;IKC;KLW;IMC;KNW;IOC;KPG;CFC;OUC;ICE;KDE;IEC;KFE;IGC;KHE;IIC;KJE;CVC;OeI;ICM;KDO;IEC;KFY;IGC;KHqB;IIC;KJmB;CfC;OoBM;ICG;KDS;IEC;KFS;IGC;KHU;CpBC;OwBM;ICE;KDI;IEC;KFM;IGC;KHS;CxBC;O4BM;ICK;KDO;IEC;KFY;IGM;KHQ;IIC;KJO;IKC;KLa;C5BC;OkCS;ClCG;OmCc;CnCG;OoCS;CpCG;OqCS;CrCY"}},"type":"js/module"}]}