{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.default = void 0;\n  var keyStr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  var _default = exports.default = {\n    encode: function (input) {\n      var output = [];\n      var chr1,\n        chr2,\n        chr3 = \"\";\n      var enc1,\n        enc2,\n        enc3,\n        enc4 = \"\";\n      var i = 0;\n      do {\n        chr1 = input.charCodeAt(i++);\n        chr2 = input.charCodeAt(i++);\n        chr3 = input.charCodeAt(i++);\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n        output.push(keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4));\n        chr1 = chr2 = chr3 = \"\";\n        enc1 = enc2 = enc3 = enc4 = \"\";\n      } while (i < input.length);\n      return output.join('');\n    },\n    encodeFromByteArray: function (input) {\n      var output = [];\n      var chr1,\n        chr2,\n        chr3 = \"\";\n      var enc1,\n        enc2,\n        enc3,\n        enc4 = \"\";\n      var i = 0;\n      do {\n        chr1 = input[i++];\n        chr2 = input[i++];\n        chr3 = input[i++];\n        enc1 = chr1 >> 2;\n        enc2 = (chr1 & 3) << 4 | chr2 >> 4;\n        enc3 = (chr2 & 15) << 2 | chr3 >> 6;\n        enc4 = chr3 & 63;\n        if (isNaN(chr2)) {\n          enc3 = enc4 = 64;\n        } else if (isNaN(chr3)) {\n          enc4 = 64;\n        }\n        output.push(keyStr.charAt(enc1) + keyStr.charAt(enc2) + keyStr.charAt(enc3) + keyStr.charAt(enc4));\n        chr1 = chr2 = chr3 = \"\";\n        enc1 = enc2 = enc3 = enc4 = \"\";\n      } while (i < input.length);\n      return output.join('');\n    },\n    decode: function (input) {\n      var output = \"\";\n      var chr1,\n        chr2,\n        chr3 = \"\";\n      var enc1,\n        enc2,\n        enc3,\n        enc4 = \"\";\n      var i = 0;\n\n      // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n      var base64test = /[^A-Za-z0-9\\+\\/\\=]/g;\n      if (base64test.exec(input)) {\n        throw new Error(\"There were invalid base64 characters in the input text.\\n\" + \"Valid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\\n\" + \"Expect errors in decoding.\");\n      }\n      input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n      do {\n        enc1 = keyStr.indexOf(input.charAt(i++));\n        enc2 = keyStr.indexOf(input.charAt(i++));\n        enc3 = keyStr.indexOf(input.charAt(i++));\n        enc4 = keyStr.indexOf(input.charAt(i++));\n        chr1 = enc1 << 2 | enc2 >> 4;\n        chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n        chr3 = (enc3 & 3) << 6 | enc4;\n        output = output + String.fromCharCode(chr1);\n        if (enc3 != 64) {\n          output = output + String.fromCharCode(chr2);\n        }\n        if (enc4 != 64) {\n          output = output + String.fromCharCode(chr3);\n        }\n        chr1 = chr2 = chr3 = \"\";\n        enc1 = enc2 = enc3 = enc4 = \"\";\n      } while (i < input.length);\n      return output;\n    }\n  };\n});","lineCount":104,"map":[[6,2,1,0],[6,6,1,4,"keyStr"],[6,12,1,10],[6,15,1,13],[6,82,1,80],[7,2,1,81],[7,6,1,81,"_default"],[7,14,1,81],[7,17,1,81,"exports"],[7,24,1,81],[7,25,1,81,"default"],[7,32,1,81],[7,35,2,15],[8,4,3,4,"encode"],[8,10,3,10],[8,12,3,12],[8,21,3,12,"encode"],[8,22,3,22,"input"],[8,27,3,27],[8,29,3,29],[9,6,4,8],[9,10,4,12,"output"],[9,16,4,18],[9,19,4,21],[9,21,4,23],[10,6,5,8],[10,10,5,12,"chr1"],[10,14,5,16],[11,8,5,18,"chr2"],[11,12,5,22],[12,8,5,24,"chr3"],[12,12,5,28],[12,15,5,31],[12,17,5,33],[13,6,6,8],[13,10,6,12,"enc1"],[13,14,6,16],[14,8,6,18,"enc2"],[14,12,6,22],[15,8,6,24,"enc3"],[15,12,6,28],[16,8,6,30,"enc4"],[16,12,6,34],[16,15,6,37],[16,17,6,39],[17,6,7,8],[17,10,7,12,"i"],[17,11,7,13],[17,14,7,16],[17,15,7,17],[18,6,9,8],[18,9,9,11],[19,8,10,12,"chr1"],[19,12,10,16],[19,15,10,19,"input"],[19,20,10,24],[19,21,10,25,"charCodeAt"],[19,31,10,35],[19,32,10,36,"i"],[19,33,10,37],[19,35,10,39],[19,36,10,40],[20,8,11,12,"chr2"],[20,12,11,16],[20,15,11,19,"input"],[20,20,11,24],[20,21,11,25,"charCodeAt"],[20,31,11,35],[20,32,11,36,"i"],[20,33,11,37],[20,35,11,39],[20,36,11,40],[21,8,12,12,"chr3"],[21,12,12,16],[21,15,12,19,"input"],[21,20,12,24],[21,21,12,25,"charCodeAt"],[21,31,12,35],[21,32,12,36,"i"],[21,33,12,37],[21,35,12,39],[21,36,12,40],[22,8,14,12,"enc1"],[22,12,14,16],[22,15,14,19,"chr1"],[22,19,14,23],[22,23,14,27],[22,24,14,28],[23,8,15,12,"enc2"],[23,12,15,16],[23,15,15,20],[23,16,15,21,"chr1"],[23,20,15,25],[23,23,15,28],[23,24,15,29],[23,29,15,34],[23,30,15,35],[23,33,15,40,"chr2"],[23,37,15,44],[23,41,15,48],[23,42,15,50],[24,8,16,12,"enc3"],[24,12,16,16],[24,15,16,20],[24,16,16,21,"chr2"],[24,20,16,25],[24,23,16,28],[24,25,16,30],[24,30,16,35],[24,31,16,36],[24,34,16,41,"chr3"],[24,38,16,45],[24,42,16,49],[24,43,16,51],[25,8,17,12,"enc4"],[25,12,17,16],[25,15,17,19,"chr3"],[25,19,17,23],[25,22,17,26],[25,24,17,28],[26,8,19,12],[26,12,19,16,"isNaN"],[26,17,19,21],[26,18,19,22,"chr2"],[26,22,19,26],[26,23,19,27],[26,25,19,29],[27,10,20,16,"enc3"],[27,14,20,20],[27,17,20,23,"enc4"],[27,21,20,27],[27,24,20,30],[27,26,20,32],[28,8,21,12],[28,9,21,13],[28,15,21,19],[28,19,21,23,"isNaN"],[28,24,21,28],[28,25,21,29,"chr3"],[28,29,21,33],[28,30,21,34],[28,32,21,36],[29,10,22,16,"enc4"],[29,14,22,20],[29,17,22,23],[29,19,22,25],[30,8,23,12],[31,8,25,12,"output"],[31,14,25,18],[31,15,25,19,"push"],[31,19,25,23],[31,20,26,16,"keyStr"],[31,26,26,22],[31,27,26,23,"charAt"],[31,33,26,29],[31,34,26,30,"enc1"],[31,38,26,34],[31,39,26,35],[31,42,27,16,"keyStr"],[31,48,27,22],[31,49,27,23,"charAt"],[31,55,27,29],[31,56,27,30,"enc2"],[31,60,27,34],[31,61,27,35],[31,64,28,16,"keyStr"],[31,70,28,22],[31,71,28,23,"charAt"],[31,77,28,29],[31,78,28,30,"enc3"],[31,82,28,34],[31,83,28,35],[31,86,29,16,"keyStr"],[31,92,29,22],[31,93,29,23,"charAt"],[31,99,29,29],[31,100,29,30,"enc4"],[31,104,29,34],[31,105,29,35],[31,106,29,36],[32,8,30,12,"chr1"],[32,12,30,16],[32,15,30,19,"chr2"],[32,19,30,23],[32,22,30,26,"chr3"],[32,26,30,30],[32,29,30,33],[32,31,30,35],[33,8,31,12,"enc1"],[33,12,31,16],[33,15,31,19,"enc2"],[33,19,31,23],[33,22,31,26,"enc3"],[33,26,31,30],[33,29,31,33,"enc4"],[33,33,31,37],[33,36,31,40],[33,38,31,42],[34,6,32,8],[34,7,32,9],[34,15,32,17,"i"],[34,16,32,18],[34,19,32,21,"input"],[34,24,32,26],[34,25,32,27,"length"],[34,31,32,33],[35,6,34,8],[35,13,34,15,"output"],[35,19,34,21],[35,20,34,22,"join"],[35,24,34,26],[35,25,34,27],[35,27,34,29],[35,28,34,30],[36,4,35,4],[36,5,35,5],[37,4,37,4,"encodeFromByteArray"],[37,23,37,23],[37,25,37,25],[37,34,37,25,"encodeFromByteArray"],[37,35,37,35,"input"],[37,40,37,40],[37,42,37,42],[38,6,38,8],[38,10,38,12,"output"],[38,16,38,18],[38,19,38,21],[38,21,38,23],[39,6,39,8],[39,10,39,12,"chr1"],[39,14,39,16],[40,8,39,18,"chr2"],[40,12,39,22],[41,8,39,24,"chr3"],[41,12,39,28],[41,15,39,31],[41,17,39,33],[42,6,40,8],[42,10,40,12,"enc1"],[42,14,40,16],[43,8,40,18,"enc2"],[43,12,40,22],[44,8,40,24,"enc3"],[44,12,40,28],[45,8,40,30,"enc4"],[45,12,40,34],[45,15,40,37],[45,17,40,39],[46,6,41,8],[46,10,41,12,"i"],[46,11,41,13],[46,14,41,16],[46,15,41,17],[47,6,43,8],[47,9,43,11],[48,8,44,12,"chr1"],[48,12,44,16],[48,15,44,19,"input"],[48,20,44,24],[48,21,44,25,"i"],[48,22,44,26],[48,24,44,28],[48,25,44,29],[49,8,45,12,"chr2"],[49,12,45,16],[49,15,45,19,"input"],[49,20,45,24],[49,21,45,25,"i"],[49,22,45,26],[49,24,45,28],[49,25,45,29],[50,8,46,12,"chr3"],[50,12,46,16],[50,15,46,19,"input"],[50,20,46,24],[50,21,46,25,"i"],[50,22,46,26],[50,24,46,28],[50,25,46,29],[51,8,48,12,"enc1"],[51,12,48,16],[51,15,48,19,"chr1"],[51,19,48,23],[51,23,48,27],[51,24,48,28],[52,8,49,12,"enc2"],[52,12,49,16],[52,15,49,20],[52,16,49,21,"chr1"],[52,20,49,25],[52,23,49,28],[52,24,49,29],[52,29,49,34],[52,30,49,35],[52,33,49,40,"chr2"],[52,37,49,44],[52,41,49,48],[52,42,49,50],[53,8,50,12,"enc3"],[53,12,50,16],[53,15,50,20],[53,16,50,21,"chr2"],[53,20,50,25],[53,23,50,28],[53,25,50,30],[53,30,50,35],[53,31,50,36],[53,34,50,41,"chr3"],[53,38,50,45],[53,42,50,49],[53,43,50,51],[54,8,51,12,"enc4"],[54,12,51,16],[54,15,51,19,"chr3"],[54,19,51,23],[54,22,51,26],[54,24,51,28],[55,8,53,12],[55,12,53,16,"isNaN"],[55,17,53,21],[55,18,53,22,"chr2"],[55,22,53,26],[55,23,53,27],[55,25,53,29],[56,10,54,16,"enc3"],[56,14,54,20],[56,17,54,23,"enc4"],[56,21,54,27],[56,24,54,30],[56,26,54,32],[57,8,55,12],[57,9,55,13],[57,15,55,19],[57,19,55,23,"isNaN"],[57,24,55,28],[57,25,55,29,"chr3"],[57,29,55,33],[57,30,55,34],[57,32,55,36],[58,10,56,16,"enc4"],[58,14,56,20],[58,17,56,23],[58,19,56,25],[59,8,57,12],[60,8,59,12,"output"],[60,14,59,18],[60,15,59,19,"push"],[60,19,59,23],[60,20,60,16,"keyStr"],[60,26,60,22],[60,27,60,23,"charAt"],[60,33,60,29],[60,34,60,30,"enc1"],[60,38,60,34],[60,39,60,35],[60,42,61,16,"keyStr"],[60,48,61,22],[60,49,61,23,"charAt"],[60,55,61,29],[60,56,61,30,"enc2"],[60,60,61,34],[60,61,61,35],[60,64,62,16,"keyStr"],[60,70,62,22],[60,71,62,23,"charAt"],[60,77,62,29],[60,78,62,30,"enc3"],[60,82,62,34],[60,83,62,35],[60,86,63,16,"keyStr"],[60,92,63,22],[60,93,63,23,"charAt"],[60,99,63,29],[60,100,63,30,"enc4"],[60,104,63,34],[60,105,63,35],[60,106,63,36],[61,8,64,12,"chr1"],[61,12,64,16],[61,15,64,19,"chr2"],[61,19,64,23],[61,22,64,26,"chr3"],[61,26,64,30],[61,29,64,33],[61,31,64,35],[62,8,65,12,"enc1"],[62,12,65,16],[62,15,65,19,"enc2"],[62,19,65,23],[62,22,65,26,"enc3"],[62,26,65,30],[62,29,65,33,"enc4"],[62,33,65,37],[62,36,65,40],[62,38,65,42],[63,6,66,8],[63,7,66,9],[63,15,66,17,"i"],[63,16,66,18],[63,19,66,21,"input"],[63,24,66,26],[63,25,66,27,"length"],[63,31,66,33],[64,6,68,8],[64,13,68,15,"output"],[64,19,68,21],[64,20,68,22,"join"],[64,24,68,26],[64,25,68,27],[64,27,68,29],[64,28,68,30],[65,4,69,4],[65,5,69,5],[66,4,71,4,"decode"],[66,10,71,10],[66,12,71,12],[66,21,71,12,"decode"],[66,22,71,22,"input"],[66,27,71,27],[66,29,71,29],[67,6,72,8],[67,10,72,12,"output"],[67,16,72,18],[67,19,72,21],[67,21,72,23],[68,6,73,8],[68,10,73,12,"chr1"],[68,14,73,16],[69,8,73,18,"chr2"],[69,12,73,22],[70,8,73,24,"chr3"],[70,12,73,28],[70,15,73,31],[70,17,73,33],[71,6,74,8],[71,10,74,12,"enc1"],[71,14,74,16],[72,8,74,18,"enc2"],[72,12,74,22],[73,8,74,24,"enc3"],[73,12,74,28],[74,8,74,30,"enc4"],[74,12,74,34],[74,15,74,37],[74,17,74,39],[75,6,75,8],[75,10,75,12,"i"],[75,11,75,13],[75,14,75,16],[75,15,75,17],[77,6,77,8],[78,6,78,8],[78,10,78,12,"base64test"],[78,20,78,22],[78,23,78,25],[78,44,78,46],[79,6,79,8],[79,10,79,12,"base64test"],[79,20,79,22],[79,21,79,23,"exec"],[79,25,79,27],[79,26,79,28,"input"],[79,31,79,33],[79,32,79,34],[79,34,79,36],[80,8,80,12],[80,14,80,18],[80,18,80,22,"Error"],[80,23,80,27],[80,24,80,28],[80,83,80,87],[80,86,81,14],[80,149,81,77],[80,152,82,14],[80,180,82,42],[80,181,82,43],[81,6,83,8],[82,6,84,8,"input"],[82,11,84,13],[82,14,84,16,"input"],[82,19,84,21],[82,20,84,22,"replace"],[82,27,84,29],[82,28,84,30],[82,49,84,51],[82,51,84,53],[82,53,84,55],[82,54,84,56],[83,6,86,8],[83,9,86,11],[84,8,87,12,"enc1"],[84,12,87,16],[84,15,87,19,"keyStr"],[84,21,87,25],[84,22,87,26,"indexOf"],[84,29,87,33],[84,30,87,34,"input"],[84,35,87,39],[84,36,87,40,"charAt"],[84,42,87,46],[84,43,87,47,"i"],[84,44,87,48],[84,46,87,50],[84,47,87,51],[84,48,87,52],[85,8,88,12,"enc2"],[85,12,88,16],[85,15,88,19,"keyStr"],[85,21,88,25],[85,22,88,26,"indexOf"],[85,29,88,33],[85,30,88,34,"input"],[85,35,88,39],[85,36,88,40,"charAt"],[85,42,88,46],[85,43,88,47,"i"],[85,44,88,48],[85,46,88,50],[85,47,88,51],[85,48,88,52],[86,8,89,12,"enc3"],[86,12,89,16],[86,15,89,19,"keyStr"],[86,21,89,25],[86,22,89,26,"indexOf"],[86,29,89,33],[86,30,89,34,"input"],[86,35,89,39],[86,36,89,40,"charAt"],[86,42,89,46],[86,43,89,47,"i"],[86,44,89,48],[86,46,89,50],[86,47,89,51],[86,48,89,52],[87,8,90,12,"enc4"],[87,12,90,16],[87,15,90,19,"keyStr"],[87,21,90,25],[87,22,90,26,"indexOf"],[87,29,90,33],[87,30,90,34,"input"],[87,35,90,39],[87,36,90,40,"charAt"],[87,42,90,46],[87,43,90,47,"i"],[87,44,90,48],[87,46,90,50],[87,47,90,51],[87,48,90,52],[88,8,92,12,"chr1"],[88,12,92,16],[88,15,92,20,"enc1"],[88,19,92,24],[88,23,92,28],[88,24,92,29],[88,27,92,34,"enc2"],[88,31,92,38],[88,35,92,42],[88,36,92,44],[89,8,93,12,"chr2"],[89,12,93,16],[89,15,93,20],[89,16,93,21,"enc2"],[89,20,93,25],[89,23,93,28],[89,25,93,30],[89,30,93,35],[89,31,93,36],[89,34,93,41,"enc3"],[89,38,93,45],[89,42,93,49],[89,43,93,51],[90,8,94,12,"chr3"],[90,12,94,16],[90,15,94,20],[90,16,94,21,"enc3"],[90,20,94,25],[90,23,94,28],[90,24,94,29],[90,29,94,34],[90,30,94,35],[90,33,94,39,"enc4"],[90,37,94,43],[91,8,96,12,"output"],[91,14,96,18],[91,17,96,21,"output"],[91,23,96,27],[91,26,96,30,"String"],[91,32,96,36],[91,33,96,37,"fromCharCode"],[91,45,96,49],[91,46,96,50,"chr1"],[91,50,96,54],[91,51,96,55],[92,8,98,12],[92,12,98,16,"enc3"],[92,16,98,20],[92,20,98,24],[92,22,98,26],[92,24,98,28],[93,10,99,16,"output"],[93,16,99,22],[93,19,99,25,"output"],[93,25,99,31],[93,28,99,34,"String"],[93,34,99,40],[93,35,99,41,"fromCharCode"],[93,47,99,53],[93,48,99,54,"chr2"],[93,52,99,58],[93,53,99,59],[94,8,100,12],[95,8,101,12],[95,12,101,16,"enc4"],[95,16,101,20],[95,20,101,24],[95,22,101,26],[95,24,101,28],[96,10,102,16,"output"],[96,16,102,22],[96,19,102,25,"output"],[96,25,102,31],[96,28,102,34,"String"],[96,34,102,40],[96,35,102,41,"fromCharCode"],[96,47,102,53],[96,48,102,54,"chr3"],[96,52,102,58],[96,53,102,59],[97,8,103,12],[98,8,105,12,"chr1"],[98,12,105,16],[98,15,105,19,"chr2"],[98,19,105,23],[98,22,105,26,"chr3"],[98,26,105,30],[98,29,105,33],[98,31,105,35],[99,8,106,12,"enc1"],[99,12,106,16],[99,15,106,19,"enc2"],[99,19,106,23],[99,22,106,26,"enc3"],[99,26,106,30],[99,29,106,33,"enc4"],[99,33,106,37],[99,36,106,40],[99,38,106,42],[100,6,108,8],[100,7,108,9],[100,15,108,17,"i"],[100,16,108,18],[100,19,108,21,"input"],[100,24,108,26],[100,25,108,27,"length"],[100,31,108,33],[101,6,110,8],[101,13,110,15,"output"],[101,19,110,21],[102,4,111,4],[103,2,112,0],[103,3,112,1],[104,0,112,1],[104,3]],"functionMap":{"names":["<global>","default.encode","default.encodeFromByteArray","default.decode"],"mappings":"AAA;YCE;KDgC;yBEE;KFgC;YGE;KHwC"}},"type":"js/module"}]}