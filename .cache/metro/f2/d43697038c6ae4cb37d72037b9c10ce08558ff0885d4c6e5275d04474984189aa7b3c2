{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":37,"index":3989}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/objectWithoutProperties","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":116,"column":37,"index":3989}}],"key":"l9ek7s8G7hY7pJY4P1vxwsk0NPM="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.defaultShouldDehydrateMutation = defaultShouldDehydrateMutation;\n  exports.defaultShouldDehydrateQuery = defaultShouldDehydrateQuery;\n  exports.dehydrate = dehydrate;\n  exports.hydrate = hydrate;\n  var _objectWithoutProperties2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/objectWithoutProperties\"));\n  var _excluded = [\"state\"],\n    _excluded2 = [\"fetchStatus\"];\n  // src/hydration.ts\n  function defaultTransformerFn(data) {\n    return data;\n  }\n  function dehydrateMutation(mutation) {\n    return {\n      mutationKey: mutation.options.mutationKey,\n      state: mutation.state,\n      ...(mutation.options.scope && {\n        scope: mutation.options.scope\n      }),\n      ...(mutation.meta && {\n        meta: mutation.meta\n      })\n    };\n  }\n  function dehydrateQuery(query, serializeData) {\n    return {\n      state: {\n        ...query.state,\n        ...(query.state.data !== void 0 && {\n          data: serializeData(query.state.data)\n        })\n      },\n      queryKey: query.queryKey,\n      queryHash: query.queryHash,\n      ...(query.state.status === \"pending\" && {\n        promise: query.promise?.then(serializeData).catch(error => {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(`A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`);\n          }\n          return Promise.reject(new Error(\"redacted\"));\n        })\n      }),\n      ...(query.meta && {\n        meta: query.meta\n      })\n    };\n  }\n  function defaultShouldDehydrateMutation(mutation) {\n    return mutation.state.isPaused;\n  }\n  function defaultShouldDehydrateQuery(query) {\n    return query.state.status === \"success\";\n  }\n  function dehydrate(client) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n    var mutations = client.getMutationCache().getAll().flatMap(mutation => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []);\n    var filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n    var serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n    var queries = client.getQueryCache().getAll().flatMap(query => filterQuery(query) ? [dehydrateQuery(query, serializeData)] : []);\n    return {\n      mutations,\n      queries\n    };\n  }\n  function hydrate(client, dehydratedState, options) {\n    if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n      return;\n    }\n    var mutationCache = client.getMutationCache();\n    var queryCache = client.getQueryCache();\n    var deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n    var mutations = dehydratedState.mutations || [];\n    var queries = dehydratedState.queries || [];\n    mutations.forEach(_ref => {\n      var state = _ref.state,\n        mutationOptions = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      mutationCache.build(client, {\n        ...client.getDefaultOptions().hydrate?.mutations,\n        ...options?.defaultOptions?.mutations,\n        ...mutationOptions\n      }, state);\n    });\n    queries.forEach(_ref2 => {\n      var queryKey = _ref2.queryKey,\n        state = _ref2.state,\n        queryHash = _ref2.queryHash,\n        meta = _ref2.meta,\n        promise = _ref2.promise;\n      var query = queryCache.get(queryHash);\n      var data = state.data === void 0 ? state.data : deserializeData(state.data);\n      if (query) {\n        if (query.state.dataUpdatedAt < state.dataUpdatedAt) {\n          var _ignored = state.fetchStatus,\n            serializedState = (0, _objectWithoutProperties2.default)(state, _excluded2);\n          query.setState({\n            ...serializedState,\n            data\n          });\n        }\n      } else {\n        query = queryCache.build(client, {\n          ...client.getDefaultOptions().hydrate?.queries,\n          ...options?.defaultOptions?.queries,\n          queryKey,\n          queryHash,\n          meta\n        },\n        // Reset fetch status to idle to avoid\n        // query being stuck in fetching state upon hydration\n        {\n          ...state,\n          data,\n          fetchStatus: \"idle\"\n        });\n      }\n      if (promise) {\n        var initialPromise = Promise.resolve(promise).then(deserializeData);\n        void query.fetch(void 0, {\n          initialPromise\n        });\n      }\n    });\n  }\n});","lineCount":129,"map":[[13,2,1,0],[14,2,2,0],[14,11,2,9,"defaultTransformerFn"],[14,31,2,29,"defaultTransformerFn"],[14,32,2,30,"data"],[14,36,2,34],[14,38,2,36],[15,4,3,2],[15,11,3,9,"data"],[15,15,3,13],[16,2,4,0],[17,2,5,0],[17,11,5,9,"dehydrateMutation"],[17,28,5,26,"dehydrateMutation"],[17,29,5,27,"mutation"],[17,37,5,35],[17,39,5,37],[18,4,6,2],[18,11,6,9],[19,6,7,4,"mutationKey"],[19,17,7,15],[19,19,7,17,"mutation"],[19,27,7,25],[19,28,7,26,"options"],[19,35,7,33],[19,36,7,34,"mutationKey"],[19,47,7,45],[20,6,8,4,"state"],[20,11,8,9],[20,13,8,11,"mutation"],[20,21,8,19],[20,22,8,20,"state"],[20,27,8,25],[21,6,9,4],[21,10,9,7,"mutation"],[21,18,9,15],[21,19,9,16,"options"],[21,26,9,23],[21,27,9,24,"scope"],[21,32,9,29],[21,36,9,33],[22,8,9,35,"scope"],[22,13,9,40],[22,15,9,42,"mutation"],[22,23,9,50],[22,24,9,51,"options"],[22,31,9,58],[22,32,9,59,"scope"],[23,6,9,65],[23,7,9,66],[24,6,10,4],[24,10,10,7,"mutation"],[24,18,10,15],[24,19,10,16,"meta"],[24,23,10,20],[24,27,10,24],[25,8,10,26,"meta"],[25,12,10,30],[25,14,10,32,"mutation"],[25,22,10,40],[25,23,10,41,"meta"],[26,6,10,46],[26,7,10,47],[27,4,11,2],[27,5,11,3],[28,2,12,0],[29,2,13,0],[29,11,13,9,"dehydrateQuery"],[29,25,13,23,"dehydrateQuery"],[29,26,13,24,"query"],[29,31,13,29],[29,33,13,31,"serializeData"],[29,46,13,44],[29,48,13,46],[30,4,14,2],[30,11,14,9],[31,6,15,4,"state"],[31,11,15,9],[31,13,15,11],[32,8,16,6],[32,11,16,9,"query"],[32,16,16,14],[32,17,16,15,"state"],[32,22,16,20],[33,8,17,6],[33,12,17,9,"query"],[33,17,17,14],[33,18,17,15,"state"],[33,23,17,20],[33,24,17,21,"data"],[33,28,17,25],[33,33,17,30],[33,38,17,35],[33,39,17,36],[33,43,17,40],[34,10,18,8,"data"],[34,14,18,12],[34,16,18,14,"serializeData"],[34,29,18,27],[34,30,18,28,"query"],[34,35,18,33],[34,36,18,34,"state"],[34,41,18,39],[34,42,18,40,"data"],[34,46,18,44],[35,8,19,6],[35,9,19,7],[36,6,20,4],[36,7,20,5],[37,6,21,4,"queryKey"],[37,14,21,12],[37,16,21,14,"query"],[37,21,21,19],[37,22,21,20,"queryKey"],[37,30,21,28],[38,6,22,4,"queryHash"],[38,15,22,13],[38,17,22,15,"query"],[38,22,22,20],[38,23,22,21,"queryHash"],[38,32,22,30],[39,6,23,4],[39,10,23,7,"query"],[39,15,23,12],[39,16,23,13,"state"],[39,21,23,18],[39,22,23,19,"status"],[39,28,23,25],[39,33,23,30],[39,42,23,39],[39,46,23,43],[40,8,24,6,"promise"],[40,15,24,13],[40,17,24,15,"query"],[40,22,24,20],[40,23,24,21,"promise"],[40,30,24,28],[40,32,24,30,"then"],[40,36,24,34],[40,37,24,35,"serializeData"],[40,50,24,48],[40,51,24,49],[40,52,24,50,"catch"],[40,57,24,55],[40,58,24,57,"error"],[40,63,24,62],[40,67,24,67],[41,10,25,8],[41,14,25,12,"process"],[41,21,25,19],[41,22,25,20,"env"],[41,25,25,23],[41,26,25,24,"NODE_ENV"],[41,34,25,32],[41,39,25,37],[41,51,25,49],[41,53,25,51],[42,12,26,10,"console"],[42,19,26,17],[42,20,26,18,"error"],[42,25,26,23],[42,26,27,12],[42,89,27,75,"query"],[42,94,27,80],[42,95,27,81,"queryHash"],[42,104,27,90],[42,110,27,96,"error"],[42,115,27,101],[42,166,28,10],[42,167,28,11],[43,10,29,8],[44,10,30,8],[44,17,30,15,"Promise"],[44,24,30,22],[44,25,30,23,"reject"],[44,31,30,29],[44,32,30,30],[44,36,30,34,"Error"],[44,41,30,39],[44,42,30,40],[44,52,30,50],[44,53,30,51],[44,54,30,52],[45,8,31,6],[45,9,31,7],[46,6,32,4],[46,7,32,5],[47,6,33,4],[47,10,33,7,"query"],[47,15,33,12],[47,16,33,13,"meta"],[47,20,33,17],[47,24,33,21],[48,8,33,23,"meta"],[48,12,33,27],[48,14,33,29,"query"],[48,19,33,34],[48,20,33,35,"meta"],[49,6,33,40],[49,7,33,41],[50,4,34,2],[50,5,34,3],[51,2,35,0],[52,2,36,0],[52,11,36,9,"defaultShouldDehydrateMutation"],[52,41,36,39,"defaultShouldDehydrateMutation"],[52,42,36,40,"mutation"],[52,50,36,48],[52,52,36,50],[53,4,37,2],[53,11,37,9,"mutation"],[53,19,37,17],[53,20,37,18,"state"],[53,25,37,23],[53,26,37,24,"isPaused"],[53,34,37,32],[54,2,38,0],[55,2,39,0],[55,11,39,9,"defaultShouldDehydrateQuery"],[55,38,39,36,"defaultShouldDehydrateQuery"],[55,39,39,37,"query"],[55,44,39,42],[55,46,39,44],[56,4,40,2],[56,11,40,9,"query"],[56,16,40,14],[56,17,40,15,"state"],[56,22,40,20],[56,23,40,21,"status"],[56,29,40,27],[56,34,40,32],[56,43,40,41],[57,2,41,0],[58,2,42,0],[58,11,42,9,"dehydrate"],[58,20,42,18,"dehydrate"],[58,21,42,19,"client"],[58,27,42,25],[58,29,42,41],[59,4,42,41],[59,8,42,27,"options"],[59,15,42,34],[59,18,42,34,"arguments"],[59,27,42,34],[59,28,42,34,"length"],[59,34,42,34],[59,42,42,34,"arguments"],[59,51,42,34],[59,59,42,34,"undefined"],[59,68,42,34],[59,71,42,34,"arguments"],[59,80,42,34],[59,86,42,37],[59,87,42,38],[59,88,42,39],[60,4,43,2],[60,8,43,8,"filterMutation"],[60,22,43,22],[60,25,43,25,"options"],[60,32,43,32],[60,33,43,33,"shouldDehydrateMutation"],[60,56,43,56],[60,60,43,60,"client"],[60,66,43,66],[60,67,43,67,"getDefaultOptions"],[60,84,43,84],[60,85,43,85],[60,86,43,86],[60,87,43,87,"dehydrate"],[60,96,43,96],[60,98,43,98,"shouldDehydrateMutation"],[60,121,43,121],[60,125,43,125,"defaultShouldDehydrateMutation"],[60,155,43,155],[61,4,44,2],[61,8,44,8,"mutations"],[61,17,44,17],[61,20,44,20,"client"],[61,26,44,26],[61,27,44,27,"getMutationCache"],[61,43,44,43],[61,44,44,44],[61,45,44,45],[61,46,44,46,"getAll"],[61,52,44,52],[61,53,44,53],[61,54,44,54],[61,55,44,55,"flatMap"],[61,62,44,62],[61,63,45,5,"mutation"],[61,71,45,13],[61,75,45,18,"filterMutation"],[61,89,45,32],[61,90,45,33,"mutation"],[61,98,45,41],[61,99,45,42],[61,102,45,45],[61,103,45,46,"dehydrateMutation"],[61,120,45,63],[61,121,45,64,"mutation"],[61,129,45,72],[61,130,45,73],[61,131,45,74],[61,134,45,77],[61,136,46,2],[61,137,46,3],[62,4,47,2],[62,8,47,8,"filterQuery"],[62,19,47,19],[62,22,47,22,"options"],[62,29,47,29],[62,30,47,30,"shouldDehydrateQuery"],[62,50,47,50],[62,54,47,54,"client"],[62,60,47,60],[62,61,47,61,"getDefaultOptions"],[62,78,47,78],[62,79,47,79],[62,80,47,80],[62,81,47,81,"dehydrate"],[62,90,47,90],[62,92,47,92,"shouldDehydrateQuery"],[62,112,47,112],[62,116,47,116,"defaultShouldDehydrateQuery"],[62,143,47,143],[63,4,48,2],[63,8,48,8,"serializeData"],[63,21,48,21],[63,24,48,24,"options"],[63,31,48,31],[63,32,48,32,"serializeData"],[63,45,48,45],[63,49,48,49,"client"],[63,55,48,55],[63,56,48,56,"getDefaultOptions"],[63,73,48,73],[63,74,48,74],[63,75,48,75],[63,76,48,76,"dehydrate"],[63,85,48,85],[63,87,48,87,"serializeData"],[63,100,48,100],[63,104,48,104,"defaultTransformerFn"],[63,124,48,124],[64,4,49,2],[64,8,49,8,"queries"],[64,15,49,15],[64,18,49,18,"client"],[64,24,49,24],[64,25,49,25,"getQueryCache"],[64,38,49,38],[64,39,49,39],[64,40,49,40],[64,41,49,41,"getAll"],[64,47,49,47],[64,48,49,48],[64,49,49,49],[64,50,49,50,"flatMap"],[64,57,49,57],[64,58,50,5,"query"],[64,63,50,10],[64,67,50,15,"filterQuery"],[64,78,50,26],[64,79,50,27,"query"],[64,84,50,32],[64,85,50,33],[64,88,50,36],[64,89,50,37,"dehydrateQuery"],[64,103,50,51],[64,104,50,52,"query"],[64,109,50,57],[64,111,50,59,"serializeData"],[64,124,50,72],[64,125,50,73],[64,126,50,74],[64,129,50,77],[64,131,51,2],[64,132,51,3],[65,4,52,2],[65,11,52,9],[66,6,52,11,"mutations"],[66,15,52,20],[67,6,52,22,"queries"],[68,4,52,30],[68,5,52,31],[69,2,53,0],[70,2,54,0],[70,11,54,9,"hydrate"],[70,18,54,16,"hydrate"],[70,19,54,17,"client"],[70,25,54,23],[70,27,54,25,"dehydratedState"],[70,42,54,40],[70,44,54,42,"options"],[70,51,54,49],[70,53,54,51],[71,4,55,2],[71,8,55,6],[71,15,55,13,"dehydratedState"],[71,30,55,28],[71,35,55,33],[71,43,55,41],[71,47,55,45,"dehydratedState"],[71,62,55,60],[71,67,55,65],[71,71,55,69],[71,73,55,71],[72,6,56,4],[73,4,57,2],[74,4,58,2],[74,8,58,8,"mutationCache"],[74,21,58,21],[74,24,58,24,"client"],[74,30,58,30],[74,31,58,31,"getMutationCache"],[74,47,58,47],[74,48,58,48],[74,49,58,49],[75,4,59,2],[75,8,59,8,"queryCache"],[75,18,59,18],[75,21,59,21,"client"],[75,27,59,27],[75,28,59,28,"getQueryCache"],[75,41,59,41],[75,42,59,42],[75,43,59,43],[76,4,60,2],[76,8,60,8,"deserializeData"],[76,23,60,23],[76,26,60,26,"options"],[76,33,60,33],[76,35,60,35,"defaultOptions"],[76,49,60,49],[76,51,60,51,"deserializeData"],[76,66,60,66],[76,70,60,70,"client"],[76,76,60,76],[76,77,60,77,"getDefaultOptions"],[76,94,60,94],[76,95,60,95],[76,96,60,96],[76,97,60,97,"hydrate"],[76,104,60,104],[76,106,60,106,"deserializeData"],[76,121,60,121],[76,125,60,125,"defaultTransformerFn"],[76,145,60,145],[77,4,61,2],[77,8,61,8,"mutations"],[77,17,61,17],[77,20,61,20,"dehydratedState"],[77,35,61,35],[77,36,61,36,"mutations"],[77,45,61,45],[77,49,61,49],[77,51,61,51],[78,4,62,2],[78,8,62,8,"queries"],[78,15,62,15],[78,18,62,18,"dehydratedState"],[78,33,62,33],[78,34,62,34,"queries"],[78,41,62,41],[78,45,62,45],[78,47,62,47],[79,4,63,2,"mutations"],[79,13,63,11],[79,14,63,12,"forEach"],[79,21,63,19],[79,22,63,20,"_ref"],[79,26,63,20],[79,30,63,55],[80,6,63,55],[80,10,63,23,"state"],[80,15,63,28],[80,18,63,28,"_ref"],[80,22,63,28],[80,23,63,23,"state"],[80,28,63,28],[81,8,63,33,"mutationOptions"],[81,23,63,48],[81,30,63,48,"_objectWithoutProperties2"],[81,55,63,48],[81,56,63,48,"default"],[81,63,63,48],[81,65,63,48,"_ref"],[81,69,63,48],[81,71,63,48,"_excluded"],[81,80,63,48],[82,6,64,4,"mutationCache"],[82,19,64,17],[82,20,64,18,"build"],[82,25,64,23],[82,26,65,6,"client"],[82,32,65,12],[82,34,66,6],[83,8,67,8],[83,11,67,11,"client"],[83,17,67,17],[83,18,67,18,"getDefaultOptions"],[83,35,67,35],[83,36,67,36],[83,37,67,37],[83,38,67,38,"hydrate"],[83,45,67,45],[83,47,67,47,"mutations"],[83,56,67,56],[84,8,68,8],[84,11,68,11,"options"],[84,18,68,18],[84,20,68,20,"defaultOptions"],[84,34,68,34],[84,36,68,36,"mutations"],[84,45,68,45],[85,8,69,8],[85,11,69,11,"mutationOptions"],[86,6,70,6],[86,7,70,7],[86,9,71,6,"state"],[86,14,72,4],[86,15,72,5],[87,4,73,2],[87,5,73,3],[87,6,73,4],[88,4,74,2,"queries"],[88,11,74,9],[88,12,74,10,"forEach"],[88,19,74,17],[88,20,74,18,"_ref2"],[88,25,74,18],[88,29,74,69],[89,6,74,69],[89,10,74,21,"queryKey"],[89,18,74,29],[89,21,74,29,"_ref2"],[89,26,74,29],[89,27,74,21,"queryKey"],[89,35,74,29],[90,8,74,31,"state"],[90,13,74,36],[90,16,74,36,"_ref2"],[90,21,74,36],[90,22,74,31,"state"],[90,27,74,36],[91,8,74,38,"queryHash"],[91,17,74,47],[91,20,74,47,"_ref2"],[91,25,74,47],[91,26,74,38,"queryHash"],[91,35,74,47],[92,8,74,49,"meta"],[92,12,74,53],[92,15,74,53,"_ref2"],[92,20,74,53],[92,21,74,49,"meta"],[92,25,74,53],[93,8,74,55,"promise"],[93,15,74,62],[93,18,74,62,"_ref2"],[93,23,74,62],[93,24,74,55,"promise"],[93,31,74,62],[94,6,75,4],[94,10,75,8,"query"],[94,15,75,13],[94,18,75,16,"queryCache"],[94,28,75,26],[94,29,75,27,"get"],[94,32,75,30],[94,33,75,31,"queryHash"],[94,42,75,40],[94,43,75,41],[95,6,76,4],[95,10,76,10,"data"],[95,14,76,14],[95,17,76,17,"state"],[95,22,76,22],[95,23,76,23,"data"],[95,27,76,27],[95,32,76,32],[95,37,76,37],[95,38,76,38],[95,41,76,41,"state"],[95,46,76,46],[95,47,76,47,"data"],[95,51,76,51],[95,54,76,54,"deserializeData"],[95,69,76,69],[95,70,76,70,"state"],[95,75,76,75],[95,76,76,76,"data"],[95,80,76,80],[95,81,76,81],[96,6,77,4],[96,10,77,8,"query"],[96,15,77,13],[96,17,77,15],[97,8,78,6],[97,12,78,10,"query"],[97,17,78,15],[97,18,78,16,"state"],[97,23,78,21],[97,24,78,22,"dataUpdatedAt"],[97,37,78,35],[97,40,78,38,"state"],[97,45,78,43],[97,46,78,44,"dataUpdatedAt"],[97,59,78,57],[97,61,78,59],[98,10,79,8],[98,14,79,29,"_ignored"],[98,22,79,37],[98,25,79,62,"state"],[98,30,79,67],[98,31,79,16,"fetchStatus"],[98,42,79,27],[99,12,79,42,"serializedState"],[99,27,79,57],[99,34,79,57,"_objectWithoutProperties2"],[99,59,79,57],[99,60,79,57,"default"],[99,67,79,57],[99,69,79,62,"state"],[99,74,79,67],[99,76,79,67,"_excluded2"],[99,86,79,67],[100,10,80,8,"query"],[100,15,80,13],[100,16,80,14,"setState"],[100,24,80,22],[100,25,80,23],[101,12,81,10],[101,15,81,13,"serializedState"],[101,30,81,28],[102,12,82,10,"data"],[103,10,83,8],[103,11,83,9],[103,12,83,10],[104,8,84,6],[105,6,85,4],[105,7,85,5],[105,13,85,11],[106,8,86,6,"query"],[106,13,86,11],[106,16,86,14,"queryCache"],[106,26,86,24],[106,27,86,25,"build"],[106,32,86,30],[106,33,87,8,"client"],[106,39,87,14],[106,41,88,8],[107,10,89,10],[107,13,89,13,"client"],[107,19,89,19],[107,20,89,20,"getDefaultOptions"],[107,37,89,37],[107,38,89,38],[107,39,89,39],[107,40,89,40,"hydrate"],[107,47,89,47],[107,49,89,49,"queries"],[107,56,89,56],[108,10,90,10],[108,13,90,13,"options"],[108,20,90,20],[108,22,90,22,"defaultOptions"],[108,36,90,36],[108,38,90,38,"queries"],[108,45,90,45],[109,10,91,10,"queryKey"],[109,18,91,18],[110,10,92,10,"queryHash"],[110,19,92,19],[111,10,93,10,"meta"],[112,8,94,8],[112,9,94,9],[113,8,95,8],[114,8,96,8],[115,8,97,8],[116,10,98,10],[116,13,98,13,"state"],[116,18,98,18],[117,10,99,10,"data"],[117,14,99,14],[118,10,100,10,"fetchStatus"],[118,21,100,21],[118,23,100,23],[119,8,101,8],[119,9,102,6],[119,10,102,7],[120,6,103,4],[121,6,104,4],[121,10,104,8,"promise"],[121,17,104,15],[121,19,104,17],[122,8,105,6],[122,12,105,12,"initialPromise"],[122,26,105,26],[122,29,105,29,"Promise"],[122,36,105,36],[122,37,105,37,"resolve"],[122,44,105,44],[122,45,105,45,"promise"],[122,52,105,52],[122,53,105,53],[122,54,105,54,"then"],[122,58,105,58],[122,59,105,59,"deserializeData"],[122,74,105,74],[122,75,105,75],[123,8,106,6],[123,13,106,11,"query"],[123,18,106,16],[123,19,106,17,"fetch"],[123,24,106,22],[123,25,106,23],[123,30,106,28],[123,31,106,29],[123,33,106,31],[124,10,106,33,"initialPromise"],[125,8,106,48],[125,9,106,49],[125,10,106,50],[126,6,107,4],[127,4,108,2],[127,5,108,3],[127,6,108,4],[128,2,109,0],[129,0,109,1],[129,3]],"functionMap":{"names":["<global>","defaultTransformerFn","dehydrateMutation","dehydrateQuery","query.promise.then._catch$argument_0","defaultShouldDehydrateMutation","defaultShouldDehydrateQuery","dehydrate","client.getMutationCache.getAll.flatMap$argument_0","client.getQueryCache.getAll.flatMap$argument_0","hydrate","mutations.forEach$argument_0","queries.forEach$argument_0"],"mappings":"AAA;ACC;CDE;AEC;CFO;AGC;wDCW;ODO;CHI;AKC;CLE;AMC;CNE;AOC;ICG,2ED;IEK,2EF;CPG;AUC;oBCS;GDU;kBEC;GFkC;CVC"}},"type":"js/module"}]}