{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":40,"column":33,"index":1595}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":40,"column":33,"index":1595}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.requestAsync = requestAsync;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  function requestAsync(_x, _x2) {\n    return _requestAsync.apply(this, arguments);\n  }\n  function _requestAsync() {\n    _requestAsync = (0, _asyncToGenerator2.default)(function* (requestUrl, fetchRequest) {\n      var url = new URL(requestUrl);\n      var request = {\n        method: fetchRequest.method,\n        mode: 'cors',\n        headers: {}\n      };\n      var isJsonDataType = fetchRequest.dataType?.toLowerCase() === 'json';\n      if (fetchRequest.headers) {\n        for (var i in fetchRequest.headers) {\n          if (i in fetchRequest.headers) {\n            request.headers[i] = fetchRequest.headers[i];\n          }\n        }\n      }\n      if (fetchRequest.body) {\n        if (fetchRequest.method?.toUpperCase() === 'POST') {\n          request.body = new URLSearchParams(fetchRequest.body).toString();\n        } else {\n          for (var key of Object.keys(fetchRequest.body)) {\n            url.searchParams.append(key, fetchRequest.body[key]);\n          }\n        }\n      }\n      if (isJsonDataType && !('Accept' in request.headers)) {\n        // NOTE: Github authentication will return XML if this includes the standard `*/*`\n        request.headers['Accept'] = 'application/json, text/javascript; q=0.01';\n      }\n      // Fix a problem with React Native `URL` causing a trailing slash to be added.\n      var correctedUrl = url.toString().replace(/\\/$/, '');\n      var response = yield fetch(correctedUrl, request);\n      var contentType = response.headers.get('content-type');\n      if (isJsonDataType || contentType?.includes('application/json')) {\n        return response.json();\n      }\n      // @ts-ignore: Type 'string' is not assignable to type 'T'.\n      return response.text();\n    });\n    return _requestAsync.apply(this, arguments);\n  }\n});","lineCount":52,"map":[[8,11,1,22,"requestAsync"],[8,23,1,34,"requestAsync"],[8,24,1,34,"_x"],[8,26,1,34],[8,28,1,34,"_x2"],[8,31,1,34],[9,4,1,34],[9,11,1,34,"_requestAsync"],[9,24,1,34],[9,25,1,34,"apply"],[9,30,1,34],[9,37,1,34,"arguments"],[9,46,1,34],[10,2,1,34],[11,2,1,34],[11,11,1,34,"_requestAsync"],[11,25,1,34],[12,4,1,34,"_requestAsync"],[12,17,1,34],[12,24,1,34,"_asyncToGenerator2"],[12,42,1,34],[12,43,1,34,"default"],[12,50,1,34],[12,52,1,7],[12,63,1,35,"requestUrl"],[12,73,1,45],[12,75,1,47,"fetchRequest"],[12,87,1,59],[12,89,1,61],[13,6,2,4],[13,10,2,10,"url"],[13,13,2,13],[13,16,2,16],[13,20,2,20,"URL"],[13,23,2,23],[13,24,2,24,"requestUrl"],[13,34,2,34],[13,35,2,35],[14,6,3,4],[14,10,3,10,"request"],[14,17,3,17],[14,20,3,20],[15,8,4,8,"method"],[15,14,4,14],[15,16,4,16,"fetchRequest"],[15,28,4,28],[15,29,4,29,"method"],[15,35,4,35],[16,8,5,8,"mode"],[16,12,5,12],[16,14,5,14],[16,20,5,20],[17,8,6,8,"headers"],[17,15,6,15],[17,17,6,17],[17,18,6,18],[18,6,7,4],[18,7,7,5],[19,6,8,4],[19,10,8,10,"isJsonDataType"],[19,24,8,24],[19,27,8,27,"fetchRequest"],[19,39,8,39],[19,40,8,40,"dataType"],[19,48,8,48],[19,50,8,50,"toLowerCase"],[19,61,8,61],[19,62,8,62],[19,63,8,63],[19,68,8,68],[19,74,8,74],[20,6,9,4],[20,10,9,8,"fetchRequest"],[20,22,9,20],[20,23,9,21,"headers"],[20,30,9,28],[20,32,9,30],[21,8,10,8],[21,13,10,13],[21,17,10,19,"i"],[21,18,10,20],[21,22,10,24,"fetchRequest"],[21,34,10,36],[21,35,10,37,"headers"],[21,42,10,44],[21,44,10,46],[22,10,11,12],[22,14,11,16,"i"],[22,15,11,17],[22,19,11,21,"fetchRequest"],[22,31,11,33],[22,32,11,34,"headers"],[22,39,11,41],[22,41,11,43],[23,12,12,16,"request"],[23,19,12,23],[23,20,12,24,"headers"],[23,27,12,31],[23,28,12,32,"i"],[23,29,12,33],[23,30,12,34],[23,33,12,37,"fetchRequest"],[23,45,12,49],[23,46,12,50,"headers"],[23,53,12,57],[23,54,12,58,"i"],[23,55,12,59],[23,56,12,60],[24,10,13,12],[25,8,14,8],[26,6,15,4],[27,6,16,4],[27,10,16,8,"fetchRequest"],[27,22,16,20],[27,23,16,21,"body"],[27,27,16,25],[27,29,16,27],[28,8,17,8],[28,12,17,12,"fetchRequest"],[28,24,17,24],[28,25,17,25,"method"],[28,31,17,31],[28,33,17,33,"toUpperCase"],[28,44,17,44],[28,45,17,45],[28,46,17,46],[28,51,17,51],[28,57,17,57],[28,59,17,59],[29,10,18,12,"request"],[29,17,18,19],[29,18,18,20,"body"],[29,22,18,24],[29,25,18,27],[29,29,18,31,"URLSearchParams"],[29,44,18,46],[29,45,18,47,"fetchRequest"],[29,57,18,59],[29,58,18,60,"body"],[29,62,18,64],[29,63,18,65],[29,64,18,66,"toString"],[29,72,18,74],[29,73,18,75],[29,74,18,76],[30,8,19,8],[30,9,19,9],[30,15,20,13],[31,10,21,12],[31,15,21,17],[31,19,21,23,"key"],[31,22,21,26],[31,26,21,30,"Object"],[31,32,21,36],[31,33,21,37,"keys"],[31,37,21,41],[31,38,21,42,"fetchRequest"],[31,50,21,54],[31,51,21,55,"body"],[31,55,21,59],[31,56,21,60],[31,58,21,62],[32,12,22,16,"url"],[32,15,22,19],[32,16,22,20,"searchParams"],[32,28,22,32],[32,29,22,33,"append"],[32,35,22,39],[32,36,22,40,"key"],[32,39,22,43],[32,41,22,45,"fetchRequest"],[32,53,22,57],[32,54,22,58,"body"],[32,58,22,62],[32,59,22,63,"key"],[32,62,22,66],[32,63,22,67],[32,64,22,68],[33,10,23,12],[34,8,24,8],[35,6,25,4],[36,6,26,4],[36,10,26,8,"isJsonDataType"],[36,24,26,22],[36,28,26,26],[36,30,26,28],[36,38,26,36],[36,42,26,40,"request"],[36,49,26,47],[36,50,26,48,"headers"],[36,57,26,55],[36,58,26,56],[36,60,26,58],[37,8,27,8],[38,8,28,8,"request"],[38,15,28,15],[38,16,28,16,"headers"],[38,23,28,23],[38,24,28,24],[38,32,28,32],[38,33,28,33],[38,36,28,36],[38,79,28,79],[39,6,29,4],[40,6,30,4],[41,6,31,4],[41,10,31,10,"correctedUrl"],[41,22,31,22],[41,25,31,25,"url"],[41,28,31,28],[41,29,31,29,"toString"],[41,37,31,37],[41,38,31,38],[41,39,31,39],[41,40,31,40,"replace"],[41,47,31,47],[41,48,31,48],[41,53,31,53],[41,55,31,55],[41,57,31,57],[41,58,31,58],[42,6,32,4],[42,10,32,10,"response"],[42,18,32,18],[42,27,32,27,"fetch"],[42,32,32,32],[42,33,32,33,"correctedUrl"],[42,45,32,45],[42,47,32,47,"request"],[42,54,32,54],[42,55,32,55],[43,6,33,4],[43,10,33,10,"contentType"],[43,21,33,21],[43,24,33,24,"response"],[43,32,33,32],[43,33,33,33,"headers"],[43,40,33,40],[43,41,33,41,"get"],[43,44,33,44],[43,45,33,45],[43,59,33,59],[43,60,33,60],[44,6,34,4],[44,10,34,8,"isJsonDataType"],[44,24,34,22],[44,28,34,26,"contentType"],[44,39,34,37],[44,41,34,39,"includes"],[44,49,34,47],[44,50,34,48],[44,68,34,66],[44,69,34,67],[44,71,34,69],[45,8,35,8],[45,15,35,15,"response"],[45,23,35,23],[45,24,35,24,"json"],[45,28,35,28],[45,29,35,29],[45,30,35,30],[46,6,36,4],[47,6,37,4],[48,6,38,4],[48,13,38,11,"response"],[48,21,38,19],[48,22,38,20,"text"],[48,26,38,24],[48,27,38,25],[48,28,38,26],[49,4,39,0],[49,5,39,1],[50,4,39,1],[50,11,39,1,"_requestAsync"],[50,24,39,1],[50,25,39,1,"apply"],[50,30,39,1],[50,37,39,1,"arguments"],[50,46,39,1],[51,2,39,1],[52,0,39,1],[52,3]],"functionMap":{"names":["<global>","requestAsync"],"mappings":"AAA,OC;CDsC"}},"type":"js/module"}]}