{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":47,"column":32,"index":1878}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":47,"column":32,"index":1878}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"expo-crypto","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":38,"index":38}}],"key":"9f7qgFa7ZusU9AEb24Iy5pn62p0="}},{"name":"invariant","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":39},"end":{"line":2,"column":34,"index":73}}],"key":"Fzi/BpZws2YooIGJ9b6u0HJtuks="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.buildCodeAsync = buildCodeAsync;\n  exports.deriveChallengeAsync = deriveChallengeAsync;\n  exports.generateHexStringAsync = generateHexStringAsync;\n  exports.generateRandom = generateRandom;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var Crypto = _interopRequireWildcard(require(_dependencyMap[2], \"expo-crypto\"));\n  var _invariant = _interopRequireDefault(require(_dependencyMap[3], \"invariant\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var CHARSET = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  function convertBufferToString(buffer) {\n    var state = [];\n    for (var i = 0; i < buffer.byteLength; i += 1) {\n      var index = buffer[i] % CHARSET.length;\n      state.push(CHARSET[index]);\n    }\n    return state.join('');\n  }\n  function convertToUrlSafeString(b64) {\n    return b64.replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  }\n  function generateRandom(size) {\n    var buffer = Crypto.getRandomValues(new Uint8Array(size));\n    return convertBufferToString(buffer);\n  }\n  /**\n   * Proof key for Code Exchange by OAuth Public Clients (RFC 7636), Section 4.1\n   * [Section 4.1](https://tools.ietf.org/html/rfc7636#section-4.1)\n   */\n  function deriveChallengeAsync(_x) {\n    return _deriveChallengeAsync.apply(this, arguments);\n  }\n  function _deriveChallengeAsync() {\n    _deriveChallengeAsync = (0, _asyncToGenerator2.default)(function* (code) {\n      // 43 is the minimum, and 128 is the maximum.\n      (0, _invariant.default)(code.length > 42 && code.length < 129, 'Invalid code length for PKCE.');\n      var buffer = yield Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256, code, {\n        encoding: Crypto.CryptoEncoding.BASE64\n      });\n      return convertToUrlSafeString(buffer);\n    });\n    return _deriveChallengeAsync.apply(this, arguments);\n  }\n  function buildCodeAsync() {\n    return _buildCodeAsync.apply(this, arguments);\n  }\n  /**\n   * Digest a random string with hex encoding, useful for creating `nonce`s.\n   */\n  function _buildCodeAsync() {\n    _buildCodeAsync = (0, _asyncToGenerator2.default)(function* () {\n      var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 128;\n      // This method needs to be resolved like all other native methods.\n      var codeVerifier = generateRandom(size);\n      var codeChallenge = yield deriveChallengeAsync(codeVerifier);\n      return {\n        codeVerifier,\n        codeChallenge\n      };\n    });\n    return _buildCodeAsync.apply(this, arguments);\n  }\n  function generateHexStringAsync(_x2) {\n    return _generateHexStringAsync.apply(this, arguments);\n  }\n  function _generateHexStringAsync() {\n    _generateHexStringAsync = (0, _asyncToGenerator2.default)(function* (size) {\n      var value = generateRandom(size);\n      var buffer = yield Crypto.digestStringAsync(Crypto.CryptoDigestAlgorithm.SHA256, value, {\n        encoding: Crypto.CryptoEncoding.HEX\n      });\n      return convertToUrlSafeString(buffer);\n    });\n    return _generateHexStringAsync.apply(this, arguments);\n  }\n});","lineCount":81,"map":[[11,2,1,0],[11,6,1,0,"Crypto"],[11,12,1,0],[11,15,1,0,"_interopRequireWildcard"],[11,38,1,0],[11,39,1,0,"require"],[11,46,1,0],[11,47,1,0,"_dependencyMap"],[11,61,1,0],[12,2,2,0],[12,6,2,0,"_invariant"],[12,16,2,0],[12,19,2,0,"_interopRequireDefault"],[12,41,2,0],[12,42,2,0,"require"],[12,49,2,0],[12,50,2,0,"_dependencyMap"],[12,64,2,0],[13,2,2,34],[13,11,2,34,"_getRequireWildcardCache"],[13,36,2,34,"e"],[13,37,2,34],[13,66,2,34,"WeakMap"],[13,73,2,34],[13,92,2,34,"r"],[13,93,2,34],[13,100,2,34,"WeakMap"],[13,107,2,34],[13,111,2,34,"t"],[13,112,2,34],[13,119,2,34,"WeakMap"],[13,126,2,34],[13,138,2,34,"_getRequireWildcardCache"],[13,162,2,34],[13,174,2,34,"_getRequireWildcardCache"],[13,175,2,34,"e"],[13,176,2,34],[13,187,2,34,"e"],[13,188,2,34],[13,191,2,34,"t"],[13,192,2,34],[13,195,2,34,"r"],[13,196,2,34],[13,201,2,34,"e"],[13,202,2,34],[14,2,2,34],[14,11,2,34,"_interopRequireWildcard"],[14,35,2,34,"e"],[14,36,2,34],[14,38,2,34,"r"],[14,39,2,34],[14,48,2,34,"r"],[14,49,2,34],[14,53,2,34,"e"],[14,54,2,34],[14,58,2,34,"e"],[14,59,2,34],[14,60,2,34,"__esModule"],[14,70,2,34],[14,79,2,34,"e"],[14,80,2,34],[14,95,2,34,"e"],[14,96,2,34],[14,119,2,34,"e"],[14,120,2,34],[14,145,2,34,"e"],[14,146,2,34],[14,157,2,34,"default"],[14,164,2,34],[14,166,2,34,"e"],[14,167,2,34],[14,175,2,34,"t"],[14,176,2,34],[14,179,2,34,"_getRequireWildcardCache"],[14,203,2,34],[14,204,2,34,"r"],[14,205,2,34],[14,212,2,34,"t"],[14,213,2,34],[14,217,2,34,"t"],[14,218,2,34],[14,219,2,34,"has"],[14,222,2,34],[14,223,2,34,"e"],[14,224,2,34],[14,234,2,34,"t"],[14,235,2,34],[14,236,2,34,"get"],[14,239,2,34],[14,240,2,34,"e"],[14,241,2,34],[14,248,2,34,"n"],[14,249,2,34],[14,254,2,34,"__proto__"],[14,263,2,34],[14,273,2,34,"a"],[14,274,2,34],[14,277,2,34,"Object"],[14,283,2,34],[14,284,2,34,"defineProperty"],[14,298,2,34],[14,302,2,34,"Object"],[14,308,2,34],[14,309,2,34,"getOwnPropertyDescriptor"],[14,333,2,34],[14,344,2,34,"u"],[14,345,2,34],[14,349,2,34,"e"],[14,350,2,34],[14,370,2,34,"u"],[14,371,2,34],[14,378,2,34,"hasOwnProperty"],[14,392,2,34],[14,393,2,34,"call"],[14,397,2,34],[14,398,2,34,"e"],[14,399,2,34],[14,401,2,34,"u"],[14,402,2,34],[14,411,2,34,"i"],[14,412,2,34],[14,415,2,34,"a"],[14,416,2,34],[14,419,2,34,"Object"],[14,425,2,34],[14,426,2,34,"getOwnPropertyDescriptor"],[14,450,2,34],[14,451,2,34,"e"],[14,452,2,34],[14,454,2,34,"u"],[14,455,2,34],[14,465,2,34,"i"],[14,466,2,34],[14,471,2,34,"i"],[14,472,2,34],[14,473,2,34,"get"],[14,476,2,34],[14,480,2,34,"i"],[14,481,2,34],[14,482,2,34,"set"],[14,485,2,34],[14,489,2,34,"Object"],[14,495,2,34],[14,496,2,34,"defineProperty"],[14,510,2,34],[14,511,2,34,"n"],[14,512,2,34],[14,514,2,34,"u"],[14,515,2,34],[14,517,2,34,"i"],[14,518,2,34],[14,522,2,34,"n"],[14,523,2,34],[14,524,2,34,"u"],[14,525,2,34],[14,529,2,34,"e"],[14,530,2,34],[14,531,2,34,"u"],[14,532,2,34],[14,544,2,34,"n"],[14,545,2,34],[14,546,2,34,"default"],[14,553,2,34],[14,556,2,34,"e"],[14,557,2,34],[14,559,2,34,"t"],[14,560,2,34],[14,564,2,34,"t"],[14,565,2,34],[14,566,2,34,"set"],[14,569,2,34],[14,570,2,34,"e"],[14,571,2,34],[14,573,2,34,"n"],[14,574,2,34],[14,577,2,34,"n"],[14,578,2,34],[15,2,3,0],[15,6,3,6,"CHARSET"],[15,13,3,13],[15,16,3,16],[15,80,3,80],[16,2,4,0],[16,11,4,9,"convertBufferToString"],[16,32,4,30,"convertBufferToString"],[16,33,4,31,"buffer"],[16,39,4,37],[16,41,4,39],[17,4,5,4],[17,8,5,10,"state"],[17,13,5,15],[17,16,5,18],[17,18,5,20],[18,4,6,4],[18,9,6,9],[18,13,6,13,"i"],[18,14,6,14],[18,17,6,17],[18,18,6,18],[18,20,6,20,"i"],[18,21,6,21],[18,24,6,24,"buffer"],[18,30,6,30],[18,31,6,31,"byteLength"],[18,41,6,41],[18,43,6,43,"i"],[18,44,6,44],[18,48,6,48],[18,49,6,49],[18,51,6,51],[19,6,7,8],[19,10,7,14,"index"],[19,15,7,19],[19,18,7,22,"buffer"],[19,24,7,28],[19,25,7,29,"i"],[19,26,7,30],[19,27,7,31],[19,30,7,34,"CHARSET"],[19,37,7,41],[19,38,7,42,"length"],[19,44,7,48],[20,6,8,8,"state"],[20,11,8,13],[20,12,8,14,"push"],[20,16,8,18],[20,17,8,19,"CHARSET"],[20,24,8,26],[20,25,8,27,"index"],[20,30,8,32],[20,31,8,33],[20,32,8,34],[21,4,9,4],[22,4,10,4],[22,11,10,11,"state"],[22,16,10,16],[22,17,10,17,"join"],[22,21,10,21],[22,22,10,22],[22,24,10,24],[22,25,10,25],[23,2,11,0],[24,2,12,0],[24,11,12,9,"convertToUrlSafeString"],[24,33,12,31,"convertToUrlSafeString"],[24,34,12,32,"b64"],[24,37,12,35],[24,39,12,37],[25,4,13,4],[25,11,13,11,"b64"],[25,14,13,14],[25,15,13,15,"replace"],[25,22,13,22],[25,23,13,23],[25,28,13,28],[25,30,13,30],[25,33,13,33],[25,34,13,34],[25,35,13,35,"replace"],[25,42,13,42],[25,43,13,43],[25,48,13,48],[25,50,13,50],[25,53,13,53],[25,54,13,54],[25,55,13,55,"replace"],[25,62,13,62],[25,63,13,63],[25,67,13,67],[25,69,13,69],[25,71,13,71],[25,72,13,72],[26,2,14,0],[27,2,15,7],[27,11,15,16,"generateRandom"],[27,25,15,30,"generateRandom"],[27,26,15,31,"size"],[27,30,15,35],[27,32,15,37],[28,4,16,4],[28,8,16,10,"buffer"],[28,14,16,16],[28,17,16,19,"Crypto"],[28,23,16,25],[28,24,16,26,"getRandomValues"],[28,39,16,41],[28,40,16,42],[28,44,16,46,"Uint8Array"],[28,54,16,56],[28,55,16,57,"size"],[28,59,16,61],[28,60,16,62],[28,61,16,63],[29,4,17,4],[29,11,17,11,"convertBufferToString"],[29,32,17,32],[29,33,17,33,"buffer"],[29,39,17,39],[29,40,17,40],[30,2,18,0],[31,2,19,0],[32,0,20,0],[33,0,21,0],[34,0,22,0],[35,2,19,0],[35,11,23,22,"deriveChallengeAsync"],[35,31,23,42,"deriveChallengeAsync"],[35,32,23,42,"_x"],[35,34,23,42],[36,4,23,42],[36,11,23,42,"_deriveChallengeAsync"],[36,32,23,42],[36,33,23,42,"apply"],[36,38,23,42],[36,45,23,42,"arguments"],[36,54,23,42],[37,2,23,42],[38,2,23,42],[38,11,23,42,"_deriveChallengeAsync"],[38,33,23,42],[39,4,23,42,"_deriveChallengeAsync"],[39,25,23,42],[39,32,23,42,"_asyncToGenerator2"],[39,50,23,42],[39,51,23,42,"default"],[39,58,23,42],[39,60,23,7],[39,71,23,43,"code"],[39,75,23,47],[39,77,23,49],[40,6,24,4],[41,6,25,4],[41,10,25,4,"invariant"],[41,28,25,13],[41,30,25,14,"code"],[41,34,25,18],[41,35,25,19,"length"],[41,41,25,25],[41,44,25,28],[41,46,25,30],[41,50,25,34,"code"],[41,54,25,38],[41,55,25,39,"length"],[41,61,25,45],[41,64,25,48],[41,67,25,51],[41,69,25,53],[41,100,25,84],[41,101,25,85],[42,6,26,4],[42,10,26,10,"buffer"],[42,16,26,16],[42,25,26,25,"Crypto"],[42,31,26,31],[42,32,26,32,"digestStringAsync"],[42,49,26,49],[42,50,26,50,"Crypto"],[42,56,26,56],[42,57,26,57,"CryptoDigestAlgorithm"],[42,78,26,78],[42,79,26,79,"SHA256"],[42,85,26,85],[42,87,26,87,"code"],[42,91,26,91],[42,93,26,93],[43,8,27,8,"encoding"],[43,16,27,16],[43,18,27,18,"Crypto"],[43,24,27,24],[43,25,27,25,"CryptoEncoding"],[43,39,27,39],[43,40,27,40,"BASE64"],[44,6,28,4],[44,7,28,5],[44,8,28,6],[45,6,29,4],[45,13,29,11,"convertToUrlSafeString"],[45,35,29,33],[45,36,29,34,"buffer"],[45,42,29,40],[45,43,29,41],[46,4,30,0],[46,5,30,1],[47,4,30,1],[47,11,30,1,"_deriveChallengeAsync"],[47,32,30,1],[47,33,30,1,"apply"],[47,38,30,1],[47,45,30,1,"arguments"],[47,54,30,1],[48,2,30,1],[49,2,30,1],[49,11,31,22,"buildCodeAsync"],[49,25,31,36,"buildCodeAsync"],[49,26,31,36],[50,4,31,36],[50,11,31,36,"_buildCodeAsync"],[50,26,31,36],[50,27,31,36,"apply"],[50,32,31,36],[50,39,31,36,"arguments"],[50,48,31,36],[51,2,31,36],[52,2,37,0],[53,0,38,0],[54,0,39,0],[55,2,37,0],[55,11,37,0,"_buildCodeAsync"],[55,27,37,0],[56,4,37,0,"_buildCodeAsync"],[56,19,37,0],[56,26,37,0,"_asyncToGenerator2"],[56,44,37,0],[56,45,37,0,"default"],[56,52,37,0],[56,54,31,7],[56,67,31,49],[57,6,31,49],[57,10,31,37,"size"],[57,14,31,41],[57,17,31,41,"arguments"],[57,26,31,41],[57,27,31,41,"length"],[57,33,31,41],[57,41,31,41,"arguments"],[57,50,31,41],[57,58,31,41,"undefined"],[57,67,31,41],[57,70,31,41,"arguments"],[57,79,31,41],[57,85,31,44],[57,88,31,47],[58,6,32,4],[59,6,33,4],[59,10,33,10,"codeVerifier"],[59,22,33,22],[59,25,33,25,"generateRandom"],[59,39,33,39],[59,40,33,40,"size"],[59,44,33,44],[59,45,33,45],[60,6,34,4],[60,10,34,10,"codeChallenge"],[60,23,34,23],[60,32,34,32,"deriveChallengeAsync"],[60,52,34,52],[60,53,34,53,"codeVerifier"],[60,65,34,65],[60,66,34,66],[61,6,35,4],[61,13,35,11],[62,8,35,13,"codeVerifier"],[62,20,35,25],[63,8,35,27,"codeChallenge"],[64,6,35,41],[64,7,35,42],[65,4,36,0],[65,5,36,1],[66,4,36,1],[66,11,36,1,"_buildCodeAsync"],[66,26,36,1],[66,27,36,1,"apply"],[66,32,36,1],[66,39,36,1,"arguments"],[66,48,36,1],[67,2,36,1],[68,2,36,1],[68,11,40,22,"generateHexStringAsync"],[68,33,40,44,"generateHexStringAsync"],[68,34,40,44,"_x2"],[68,37,40,44],[69,4,40,44],[69,11,40,44,"_generateHexStringAsync"],[69,34,40,44],[69,35,40,44,"apply"],[69,40,40,44],[69,47,40,44,"arguments"],[69,56,40,44],[70,2,40,44],[71,2,40,44],[71,11,40,44,"_generateHexStringAsync"],[71,35,40,44],[72,4,40,44,"_generateHexStringAsync"],[72,27,40,44],[72,34,40,44,"_asyncToGenerator2"],[72,52,40,44],[72,53,40,44,"default"],[72,60,40,44],[72,62,40,7],[72,73,40,45,"size"],[72,77,40,49],[72,79,40,51],[73,6,41,4],[73,10,41,10,"value"],[73,15,41,15],[73,18,41,18,"generateRandom"],[73,32,41,32],[73,33,41,33,"size"],[73,37,41,37],[73,38,41,38],[74,6,42,4],[74,10,42,10,"buffer"],[74,16,42,16],[74,25,42,25,"Crypto"],[74,31,42,31],[74,32,42,32,"digestStringAsync"],[74,49,42,49],[74,50,42,50,"Crypto"],[74,56,42,56],[74,57,42,57,"CryptoDigestAlgorithm"],[74,78,42,78],[74,79,42,79,"SHA256"],[74,85,42,85],[74,87,42,87,"value"],[74,92,42,92],[74,94,42,94],[75,8,43,8,"encoding"],[75,16,43,16],[75,18,43,18,"Crypto"],[75,24,43,24],[75,25,43,25,"CryptoEncoding"],[75,39,43,39],[75,40,43,40,"HEX"],[76,6,44,4],[76,7,44,5],[76,8,44,6],[77,6,45,4],[77,13,45,11,"convertToUrlSafeString"],[77,35,45,33],[77,36,45,34,"buffer"],[77,42,45,40],[77,43,45,41],[78,4,46,0],[78,5,46,1],[79,4,46,1],[79,11,46,1,"_generateHexStringAsync"],[79,34,46,1],[79,35,46,1,"apply"],[79,40,46,1],[79,47,46,1,"arguments"],[79,56,46,1],[80,2,46,1],[81,0,46,1],[81,3]],"functionMap":{"names":["<global>","convertBufferToString","convertToUrlSafeString","generateRandom","deriveChallengeAsync","buildCodeAsync","generateHexStringAsync"],"mappings":"AAA;ACG;CDO;AEC;CFE;OGC;CHG;OIK;CJO;OKC;CLK;OMI;CNM"}},"type":"js/module"}]}