{"dependencies":[{"name":"../protocols/index.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":45,"index":60}}],"key":"Jygjl7/vtsOXh51Xd5raivoB0gc="}},{"name":"../structures/index.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":61},"end":{"line":4,"column":50,"index":111}}],"key":"/D5xfMgxoR8q9SoeT0vUxPUzaGg="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.isDuplicteDevice = isDuplicteDevice;\n  exports.isRolecDevice = isRolecDevice;\n  exports.protocol = protocol;\n  exports.protocolDeviceHandler = protocolDeviceHandler;\n  var _index = require(_dependencyMap[0], \"../protocols/index.js\");\n  var _index2 = require(_dependencyMap[1], \"../structures/index.js\");\n  function protocolDeviceHandler(_ref) {\n    var bleManager = _ref.bleManager,\n      device = _ref.device,\n      protocolConfigurations = _ref.protocolConfigurations;\n    switch (true) {\n      case protocol(device, _index2.Protocol.d):\n        {\n          var methods = new _index.D(device, protocolConfigurations.d);\n          return {\n            protocol: _index2.Protocol.d,\n            deconstructor: methods.deconstructor.bind(methods),\n            write: methods.write.bind(methods),\n            authenticate: methods.authenticate.bind(methods),\n            read: methods.read.bind(methods),\n            getAllKeys: methods.getAllKeys.bind(methods)\n          };\n        }\n      case protocol(device, _index2.Protocol.e):\n        {\n          var _methods = new _index.E(device, protocolConfigurations.e, bleManager);\n          return {\n            protocol: _index2.Protocol.e,\n            deconstructor: _methods.deconstructor.bind(_methods),\n            notificationCallback: _methods.notificationCallback.bind(_methods),\n            updateFirmware: _methods.updateFirmware.bind(_methods),\n            write: _methods.write.bind(_methods),\n            authenticate: _methods.authenticate.bind(_methods),\n            getAllKeys: _methods.getAllKeys.bind(_methods)\n          };\n        }\n      default:\n        throw new Error('Unsupported device type: ' + device.name);\n    }\n  }\n  function isDuplicteDevice(devices, nextDevice) {\n    return devices.findIndex(device => nextDevice.id === device.id) > -1;\n  }\n  function isRolecDevice(name) {\n    return Object.values(_index2.Protocol).some(key => name.startsWith(key));\n  }\n  function protocol(device, key) {\n    var name = device.localName || device.name;\n    return name?.startsWith(key);\n  }\n});","lineCount":57,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"isDuplicteDevice"],[7,26,1,13],[7,29,1,13,"isDuplicteDevice"],[7,45,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"isRolecDevice"],[8,23,1,13],[8,26,1,13,"isRolecDevice"],[8,39,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"protocol"],[9,18,1,13],[9,21,1,13,"protocol"],[9,29,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"protocolDeviceHandler"],[10,31,1,13],[10,34,1,13,"protocolDeviceHandler"],[10,55,1,13],[11,2,3,0],[11,6,3,0,"_index"],[11,12,3,0],[11,15,3,0,"require"],[11,22,3,0],[11,23,3,0,"_dependencyMap"],[11,37,3,0],[12,2,4,0],[12,6,4,0,"_index2"],[12,13,4,0],[12,16,4,0,"require"],[12,23,4,0],[12,24,4,0,"_dependencyMap"],[12,38,4,0],[13,2,5,7],[13,11,5,16,"protocolDeviceHandler"],[13,32,5,37,"protocolDeviceHandler"],[13,33,5,37,"_ref"],[13,37,5,37],[13,39,9,3],[14,4,9,3],[14,8,6,2,"bleManager"],[14,18,6,12],[14,21,6,12,"_ref"],[14,25,6,12],[14,26,6,2,"bleManager"],[14,36,6,12],[15,6,7,2,"device"],[15,12,7,8],[15,15,7,8,"_ref"],[15,19,7,8],[15,20,7,2,"device"],[15,26,7,8],[16,6,8,2,"protocolConfigurations"],[16,28,8,24],[16,31,8,24,"_ref"],[16,35,8,24],[16,36,8,2,"protocolConfigurations"],[16,58,8,24],[17,4,10,2],[17,12,10,10],[17,16,10,14],[18,6,11,4],[18,11,11,9,"protocol"],[18,19,11,17],[18,20,11,18,"device"],[18,26,11,24],[18,28,11,26,"Protocol"],[18,44,11,34],[18,45,11,35,"d"],[18,46,11,36],[18,47,11,37],[19,8,12,6],[20,10,13,8],[20,14,13,14,"methods"],[20,21,13,21],[20,24,13,24],[20,28,13,28,"D"],[20,36,13,29],[20,37,13,30,"device"],[20,43,13,36],[20,45,13,38,"protocolConfigurations"],[20,67,13,60],[20,68,13,61,"d"],[20,69,13,62],[20,70,13,63],[21,10,14,8],[21,17,14,15],[22,12,15,10,"protocol"],[22,20,15,18],[22,22,15,20,"Protocol"],[22,38,15,28],[22,39,15,29,"d"],[22,40,15,30],[23,12,16,10,"deconstructor"],[23,25,16,23],[23,27,16,25,"methods"],[23,34,16,32],[23,35,16,33,"deconstructor"],[23,48,16,46],[23,49,16,47,"bind"],[23,53,16,51],[23,54,16,52,"methods"],[23,61,16,59],[23,62,16,60],[24,12,17,10,"write"],[24,17,17,15],[24,19,17,17,"methods"],[24,26,17,24],[24,27,17,25,"write"],[24,32,17,30],[24,33,17,31,"bind"],[24,37,17,35],[24,38,17,36,"methods"],[24,45,17,43],[24,46,17,44],[25,12,18,10,"authenticate"],[25,24,18,22],[25,26,18,24,"methods"],[25,33,18,31],[25,34,18,32,"authenticate"],[25,46,18,44],[25,47,18,45,"bind"],[25,51,18,49],[25,52,18,50,"methods"],[25,59,18,57],[25,60,18,58],[26,12,19,10,"read"],[26,16,19,14],[26,18,19,16,"methods"],[26,25,19,23],[26,26,19,24,"read"],[26,30,19,28],[26,31,19,29,"bind"],[26,35,19,33],[26,36,19,34,"methods"],[26,43,19,41],[26,44,19,42],[27,12,20,10,"getAllKeys"],[27,22,20,20],[27,24,20,22,"methods"],[27,31,20,29],[27,32,20,30,"getAllKeys"],[27,42,20,40],[27,43,20,41,"bind"],[27,47,20,45],[27,48,20,46,"methods"],[27,55,20,53],[28,10,21,8],[28,11,21,9],[29,8,22,6],[30,6,23,4],[30,11,23,9,"protocol"],[30,19,23,17],[30,20,23,18,"device"],[30,26,23,24],[30,28,23,26,"Protocol"],[30,44,23,34],[30,45,23,35,"e"],[30,46,23,36],[30,47,23,37],[31,8,24,6],[32,10,25,8],[32,14,25,14,"methods"],[32,22,25,21],[32,25,25,24],[32,29,25,28,"E"],[32,37,25,29],[32,38,25,30,"device"],[32,44,25,36],[32,46,25,38,"protocolConfigurations"],[32,68,25,60],[32,69,25,61,"e"],[32,70,25,62],[32,72,25,64,"bleManager"],[32,82,25,74],[32,83,25,75],[33,10,26,8],[33,17,26,15],[34,12,27,10,"protocol"],[34,20,27,18],[34,22,27,20,"Protocol"],[34,38,27,28],[34,39,27,29,"e"],[34,40,27,30],[35,12,28,10,"deconstructor"],[35,25,28,23],[35,27,28,25,"methods"],[35,35,28,32],[35,36,28,33,"deconstructor"],[35,49,28,46],[35,50,28,47,"bind"],[35,54,28,51],[35,55,28,52,"methods"],[35,63,28,59],[35,64,28,60],[36,12,29,10,"notificationCallback"],[36,32,29,30],[36,34,29,32,"methods"],[36,42,29,39],[36,43,29,40,"notificationCallback"],[36,63,29,60],[36,64,29,61,"bind"],[36,68,29,65],[36,69,29,66,"methods"],[36,77,29,73],[36,78,29,74],[37,12,30,10,"updateFirmware"],[37,26,30,24],[37,28,30,26,"methods"],[37,36,30,33],[37,37,30,34,"updateFirmware"],[37,51,30,48],[37,52,30,49,"bind"],[37,56,30,53],[37,57,30,54,"methods"],[37,65,30,61],[37,66,30,62],[38,12,31,10,"write"],[38,17,31,15],[38,19,31,17,"methods"],[38,27,31,24],[38,28,31,25,"write"],[38,33,31,30],[38,34,31,31,"bind"],[38,38,31,35],[38,39,31,36,"methods"],[38,47,31,43],[38,48,31,44],[39,12,32,10,"authenticate"],[39,24,32,22],[39,26,32,24,"methods"],[39,34,32,31],[39,35,32,32,"authenticate"],[39,47,32,44],[39,48,32,45,"bind"],[39,52,32,49],[39,53,32,50,"methods"],[39,61,32,57],[39,62,32,58],[40,12,33,10,"getAllKeys"],[40,22,33,20],[40,24,33,22,"methods"],[40,32,33,29],[40,33,33,30,"getAllKeys"],[40,43,33,40],[40,44,33,41,"bind"],[40,48,33,45],[40,49,33,46,"methods"],[40,57,33,53],[41,10,34,8],[41,11,34,9],[42,8,35,6],[43,6,36,4],[44,8,37,6],[44,14,37,12],[44,18,37,16,"Error"],[44,23,37,21],[44,24,37,22],[44,51,37,49],[44,54,37,52,"device"],[44,60,37,58],[44,61,37,59,"name"],[44,65,37,63],[44,66,37,64],[45,4,38,2],[46,2,39,0],[47,2,40,7],[47,11,40,16,"isDuplicteDevice"],[47,27,40,32,"isDuplicteDevice"],[47,28,40,33,"devices"],[47,35,40,40],[47,37,40,42,"nextDevice"],[47,47,40,52],[47,49,40,54],[48,4,41,2],[48,11,41,9,"devices"],[48,18,41,16],[48,19,41,17,"findIndex"],[48,28,41,26],[48,29,41,27,"device"],[48,35,41,33],[48,39,41,37,"nextDevice"],[48,49,41,47],[48,50,41,48,"id"],[48,52,41,50],[48,57,41,55,"device"],[48,63,41,61],[48,64,41,62,"id"],[48,66,41,64],[48,67,41,65],[48,70,41,68],[48,71,41,69],[48,72,41,70],[49,2,42,0],[50,2,43,7],[50,11,43,16,"isRolecDevice"],[50,24,43,29,"isRolecDevice"],[50,25,43,30,"name"],[50,29,43,34],[50,31,43,36],[51,4,44,2],[51,11,44,9,"Object"],[51,17,44,15],[51,18,44,16,"values"],[51,24,44,22],[51,25,44,23,"Protocol"],[51,41,44,31],[51,42,44,32],[51,43,44,33,"some"],[51,47,44,37],[51,48,44,38,"key"],[51,51,44,41],[51,55,44,45,"name"],[51,59,44,49],[51,60,44,50,"startsWith"],[51,70,44,60],[51,71,44,61,"key"],[51,74,44,64],[51,75,44,65],[51,76,44,66],[52,2,45,0],[53,2,46,7],[53,11,46,16,"protocol"],[53,19,46,24,"protocol"],[53,20,46,25,"device"],[53,26,46,31],[53,28,46,33,"key"],[53,31,46,36],[53,33,46,38],[54,4,47,2],[54,8,47,8,"name"],[54,12,47,12],[54,15,47,15,"device"],[54,21,47,21],[54,22,47,22,"localName"],[54,31,47,31],[54,35,47,35,"device"],[54,41,47,41],[54,42,47,42,"name"],[54,46,47,46],[55,4,48,2],[55,11,48,9,"name"],[55,15,48,13],[55,17,48,15,"startsWith"],[55,27,48,25],[55,28,48,26,"key"],[55,31,48,29],[55,32,48,30],[56,2,49,0],[57,0,49,1],[57,3]],"functionMap":{"names":["<global>","protocolDeviceHandler","isDuplicteDevice","devices.findIndex$argument_0","isRolecDevice","Object.values.some$argument_0","protocol"],"mappings":"AAA;OCI;CDkC;OEC;2BCC,qCD;CFC;OIC;sCCC,2BD;CJC;OMC;CNG"}},"type":"js/module"}]}