{"dependencies":[{"name":"../configurations/index.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":59,"index":74}}],"key":"8lK6VpomFoUtfFZIuvTetyRtjKg="}},{"name":"./converter.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":75},"end":{"line":4,"column":99,"index":174}}],"key":"bsOosBYkOZcJLwx/V6hxKEZJZ/8="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.appendTailZeros = appendTailZeros;\n  exports.decodeDataContent = decodeDataContent;\n  exports.decodeNotification = decodeNotification;\n  exports.eUtils = void 0;\n  exports.getAllKeysInProperties = getAllKeysInProperties;\n  exports.getAllMessageCodes = getAllMessageCodes;\n  exports.getDataLengthInLittleEndian = getDataLengthInLittleEndian;\n  exports.getPropertyByKey = getPropertyByKey;\n  exports.getPropertyKeyByMessageCode = getPropertyKeyByMessageCode;\n  exports.removeFileExtension = removeFileExtension;\n  exports.removeTrailingNulls = removeTrailingNulls;\n  var _index = require(_dependencyMap[0], \"../configurations/index.js\");\n  var _converter = require(_dependencyMap[1], \"./converter.js\");\n  function getAllKeysInProperties() {\n    var properties = _index.e.properties;\n    return Object.keys(properties).filter(key => properties[key].messageType === 'request');\n  }\n  function getPropertyByKey(key) {\n    var properties = _index.e.properties;\n    if (!(key in properties)) throw new Error(`Key ${key} not found in protocol properties`);\n    var property = properties[key];\n    return property;\n  }\n  function getPropertyKeyByMessageCode(messageCode) {\n    var properties = _index.e.properties;\n    for (var key in properties) {\n      if (properties[key].messageCode === messageCode) {\n        return key;\n      }\n    }\n    return '';\n  }\n  function getAllMessageCodes() {\n    var properties = _index.e.properties;\n    var messageCodes = [];\n    for (var key in properties) {\n      if (Object.prototype.hasOwnProperty.call(properties, key)) {\n        var property = properties[key];\n        if (property.messageCode) {\n          messageCodes.push(property.messageCode);\n        }\n      }\n    }\n    return messageCodes;\n  }\n\n  /**\n   * Append tailing zeros to the input hexString to match the required data length\n   * @param hexString: a hexString\n   * @param dataLength: the length of the data in bytes\n   * @returns a hexString with tailing zeros\n   */\n  function appendTailZeros(hexString, dataLength) {\n    if (hexString.length % 2 !== 0) {\n      throw new Error('Invalid hex string. hexString length should be an even number');\n    }\n    var requiredLength = dataLength * 2;\n    var currentLength = hexString.length;\n    if (currentLength < requiredLength) {\n      var diff = requiredLength - currentLength;\n      hexString += '0'.repeat(diff);\n    }\n    return hexString;\n  }\n\n  /**\n   * Obtains the data length in little endian format\n   * @param hexString the input data in hexString format, e.g. 31323334\n   * @param dataLength the length of the data in bytes of the input data, specified the required length of the data from the protocol, e.g. 4\n   * @returns a two-bytes hexString (4 hexadecimal characters) representing the data length in little endian format, e.g. 0400\n   */\n  function getDataLengthInLittleEndian(hexString, dataLength) {\n    if (!hexString) return '0000';\n    return (0, _converter.numToLittleEndianHex)(appendTailZeros(hexString, dataLength).length / 2);\n  }\n\n  /**\n   * Removes the file extension from the input file name\n   * @param fileName input file name with extension\n   * @returns fileName without the extension\n   */\n  function removeFileExtension(fileName) {\n    var lastDotIndex = fileName.lastIndexOf('.');\n    if (lastDotIndex === -1 || lastDotIndex === 0) {\n      return fileName; // No dot found, return the original string\n    }\n    return fileName.substring(0, lastDotIndex);\n  }\n\n  /**\n   * Decodes the data content in hexString format based on the property object containing the data schema\n   * @param property the property object containing the data schema\n   * @param dataContent the data content in hexString format\n   * @returns a ResponseResultSchemaType object containing the decoded data content\n   */\n  function decodeDataContent(property, dataContent) {\n    var dataResult = {};\n    var dataOffset = 0;\n    if (property.data) {\n      for (var dataKey in property.data) {\n        var dataItem = property.data[dataKey];\n        if (!dataItem) {\n          throw new Error('Data item not found');\n        }\n        var length = dataItem.length === 0 ? dataContent.length - dataOffset : dataItem.length * 2;\n        var value = dataContent.substring(dataOffset, dataOffset + length);\n        switch (dataItem.type) {\n          case 'string':\n            dataResult[dataKey] = removeTrailingNulls((0, _converter.hexStringToAscii)(value));\n            break;\n          case 'integer':\n            dataResult[dataKey] = removeTrailingNulls((0, _converter.hexToNumberInlittleEndian)(value).toString());\n            break;\n          default:\n            console.log(`Unknown data type: ${dataItem.type}`);\n        }\n        dataOffset += length;\n      }\n    }\n    return dataResult;\n  }\n  function removeTrailingNulls(str) {\n    // eslint-disable-next-line no-control-regex\n    return str.replace(/\\x00+$/, '');\n  }\n\n  /**\n   * Decodes the received notification data in hexString format and return a Payload object\n   * @param hexString the received notification data in hexString format\n   * @returns a Payload object containing the decoded notification data\n   */\n  function decodeNotification(hexString) {\n    if (!hexString) return null;\n    var properties = _index.e.properties;\n    var offset = 0;\n\n    // Extract Frame identifier (2 bytes)\n    var frameIdentifier = hexString.substring(offset, offset + 4);\n    offset += 4;\n\n    // can add early exist by verifying frameIdentifier here, expected to be 6969\n\n    // Extract Data verification (2 bytes)\n    var dataVerification = hexString.substring(offset, offset + 4);\n    offset += 4;\n\n    // Extract Message code (2 bytes)\n    var messageCode = hexString.substring(offset, offset + 4);\n    offset += 4;\n\n    // Extract Data Length (2 bytes)\n    var dataLength = hexString.substring(offset, offset + 4);\n    offset += 4;\n\n    // Extract Data Content (length specified by Data Length)\n    var dataContent = hexString.substring(offset, offset + parseInt(dataLength, 16) * 2);\n\n    // Find the corresponding key in properties\n    var key = '';\n    for (var propKey in properties) {\n      if (properties[propKey].messageCode === messageCode) {\n        key = propKey;\n        break;\n      }\n    }\n    if (!key) {\n      throw new Error(`Unknown message code: ${messageCode}`);\n    }\n    var property = properties[key];\n    var dataResult = decodeDataContent(property, dataContent);\n    return {\n      key,\n      frameIdentifier,\n      dataVerification,\n      messageCode,\n      dataLength,\n      dataContent,\n      dataResult\n    };\n  }\n  var eUtils = exports.eUtils = {\n    getAllKeysInProperties,\n    getPropertyByKey,\n    getPropertyKeyByMessageCode,\n    getAllMessageCodes,\n    appendTailZeros,\n    getDataLengthInLittleEndian,\n    removeFileExtension,\n    decodeDataContent,\n    removeTrailingNulls,\n    decodeNotification\n  };\n});","lineCount":199,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13,"Object"],[4,8,1,13],[4,9,1,13,"defineProperty"],[4,23,1,13],[4,24,1,13,"exports"],[4,31,1,13],[5,4,1,13,"value"],[5,9,1,13],[6,2,1,13],[7,2,1,13,"exports"],[7,9,1,13],[7,10,1,13,"appendTailZeros"],[7,25,1,13],[7,28,1,13,"appendTailZeros"],[7,43,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"decodeDataContent"],[8,27,1,13],[8,30,1,13,"decodeDataContent"],[8,47,1,13],[9,2,1,13,"exports"],[9,9,1,13],[9,10,1,13,"decodeNotification"],[9,28,1,13],[9,31,1,13,"decodeNotification"],[9,49,1,13],[10,2,1,13,"exports"],[10,9,1,13],[10,10,1,13,"eUtils"],[10,16,1,13],[11,2,1,13,"exports"],[11,9,1,13],[11,10,1,13,"getAllKeysInProperties"],[11,32,1,13],[11,35,1,13,"getAllKeysInProperties"],[11,57,1,13],[12,2,1,13,"exports"],[12,9,1,13],[12,10,1,13,"getAllMessageCodes"],[12,28,1,13],[12,31,1,13,"getAllMessageCodes"],[12,49,1,13],[13,2,1,13,"exports"],[13,9,1,13],[13,10,1,13,"getDataLengthInLittleEndian"],[13,37,1,13],[13,40,1,13,"getDataLengthInLittleEndian"],[13,67,1,13],[14,2,1,13,"exports"],[14,9,1,13],[14,10,1,13,"getPropertyByKey"],[14,26,1,13],[14,29,1,13,"getPropertyByKey"],[14,45,1,13],[15,2,1,13,"exports"],[15,9,1,13],[15,10,1,13,"getPropertyKeyByMessageCode"],[15,37,1,13],[15,40,1,13,"getPropertyKeyByMessageCode"],[15,67,1,13],[16,2,1,13,"exports"],[16,9,1,13],[16,10,1,13,"removeFileExtension"],[16,29,1,13],[16,32,1,13,"removeFileExtension"],[16,51,1,13],[17,2,1,13,"exports"],[17,9,1,13],[17,10,1,13,"removeTrailingNulls"],[17,29,1,13],[17,32,1,13,"removeTrailingNulls"],[17,51,1,13],[18,2,3,0],[18,6,3,0,"_index"],[18,12,3,0],[18,15,3,0,"require"],[18,22,3,0],[18,23,3,0,"_dependencyMap"],[18,37,3,0],[19,2,4,0],[19,6,4,0,"_converter"],[19,16,4,0],[19,19,4,0,"require"],[19,26,4,0],[19,27,4,0,"_dependencyMap"],[19,41,4,0],[20,2,5,7],[20,11,5,16,"getAllKeysInProperties"],[20,33,5,38,"getAllKeysInProperties"],[20,34,5,38],[20,36,5,41],[21,4,6,2],[21,8,6,8,"properties"],[21,18,6,18],[21,21,6,21,"protocol"],[21,29,6,29],[21,30,6,30,"properties"],[21,40,6,40],[22,4,7,2],[22,11,7,9,"Object"],[22,17,7,15],[22,18,7,16,"keys"],[22,22,7,20],[22,23,7,21,"properties"],[22,33,7,31],[22,34,7,32],[22,35,7,33,"filter"],[22,41,7,39],[22,42,7,40,"key"],[22,45,7,43],[22,49,7,47,"properties"],[22,59,7,57],[22,60,7,58,"key"],[22,63,7,61],[22,64,7,62],[22,65,7,63,"messageType"],[22,76,7,74],[22,81,7,79],[22,90,7,88],[22,91,7,89],[23,2,8,0],[24,2,9,7],[24,11,9,16,"getPropertyByKey"],[24,27,9,32,"getPropertyByKey"],[24,28,9,33,"key"],[24,31,9,36],[24,33,9,38],[25,4,10,2],[25,8,10,8,"properties"],[25,18,10,18],[25,21,10,21,"protocol"],[25,29,10,29],[25,30,10,30,"properties"],[25,40,10,40],[26,4,11,2],[26,8,11,6],[26,10,11,8,"key"],[26,13,11,11],[26,17,11,15,"properties"],[26,27,11,25],[26,28,11,26],[26,30,11,28],[26,36,11,34],[26,40,11,38,"Error"],[26,45,11,43],[26,46,11,44],[26,53,11,51,"key"],[26,56,11,54],[26,91,11,89],[26,92,11,90],[27,4,12,2],[27,8,12,8,"property"],[27,16,12,16],[27,19,12,19,"properties"],[27,29,12,29],[27,30,12,30,"key"],[27,33,12,33],[27,34,12,34],[28,4,13,2],[28,11,13,9,"property"],[28,19,13,17],[29,2,14,0],[30,2,15,7],[30,11,15,16,"getPropertyKeyByMessageCode"],[30,38,15,43,"getPropertyKeyByMessageCode"],[30,39,15,44,"messageCode"],[30,50,15,55],[30,52,15,57],[31,4,16,2],[31,8,16,8,"properties"],[31,18,16,18],[31,21,16,21,"protocol"],[31,29,16,29],[31,30,16,30,"properties"],[31,40,16,40],[32,4,17,2],[32,9,17,7],[32,13,17,13,"key"],[32,16,17,16],[32,20,17,20,"properties"],[32,30,17,30],[32,32,17,32],[33,6,18,4],[33,10,18,8,"properties"],[33,20,18,18],[33,21,18,19,"key"],[33,24,18,22],[33,25,18,23],[33,26,18,24,"messageCode"],[33,37,18,35],[33,42,18,40,"messageCode"],[33,53,18,51],[33,55,18,53],[34,8,19,6],[34,15,19,13,"key"],[34,18,19,16],[35,6,20,4],[36,4,21,2],[37,4,22,2],[37,11,22,9],[37,13,22,11],[38,2,23,0],[39,2,24,7],[39,11,24,16,"getAllMessageCodes"],[39,29,24,34,"getAllMessageCodes"],[39,30,24,34],[39,32,24,37],[40,4,25,2],[40,8,25,8,"properties"],[40,18,25,18],[40,21,25,21,"protocol"],[40,29,25,29],[40,30,25,30,"properties"],[40,40,25,40],[41,4,26,2],[41,8,26,8,"messageCodes"],[41,20,26,20],[41,23,26,23],[41,25,26,25],[42,4,27,2],[42,9,27,7],[42,13,27,13,"key"],[42,16,27,16],[42,20,27,20,"properties"],[42,30,27,30],[42,32,27,32],[43,6,28,4],[43,10,28,8,"Object"],[43,16,28,14],[43,17,28,15,"prototype"],[43,26,28,24],[43,27,28,25,"hasOwnProperty"],[43,41,28,39],[43,42,28,40,"call"],[43,46,28,44],[43,47,28,45,"properties"],[43,57,28,55],[43,59,28,57,"key"],[43,62,28,60],[43,63,28,61],[43,65,28,63],[44,8,29,6],[44,12,29,12,"property"],[44,20,29,20],[44,23,29,23,"properties"],[44,33,29,33],[44,34,29,34,"key"],[44,37,29,37],[44,38,29,38],[45,8,30,6],[45,12,30,10,"property"],[45,20,30,18],[45,21,30,19,"messageCode"],[45,32,30,30],[45,34,30,32],[46,10,31,8,"messageCodes"],[46,22,31,20],[46,23,31,21,"push"],[46,27,31,25],[46,28,31,26,"property"],[46,36,31,34],[46,37,31,35,"messageCode"],[46,48,31,46],[46,49,31,47],[47,8,32,6],[48,6,33,4],[49,4,34,2],[50,4,35,2],[50,11,35,9,"messageCodes"],[50,23,35,21],[51,2,36,0],[53,2,38,0],[54,0,39,0],[55,0,40,0],[56,0,41,0],[57,0,42,0],[58,0,43,0],[59,2,44,7],[59,11,44,16,"appendTailZeros"],[59,26,44,31,"appendTailZeros"],[59,27,44,32,"hexString"],[59,36,44,41],[59,38,44,43,"dataLength"],[59,48,44,53],[59,50,44,55],[60,4,45,2],[60,8,45,6,"hexString"],[60,17,45,15],[60,18,45,16,"length"],[60,24,45,22],[60,27,45,25],[60,28,45,26],[60,33,45,31],[60,34,45,32],[60,36,45,34],[61,6,46,4],[61,12,46,10],[61,16,46,14,"Error"],[61,21,46,19],[61,22,46,20],[61,85,46,83],[61,86,46,84],[62,4,47,2],[63,4,48,2],[63,8,48,8,"requiredLength"],[63,22,48,22],[63,25,48,25,"dataLength"],[63,35,48,35],[63,38,48,38],[63,39,48,39],[64,4,49,2],[64,8,49,8,"currentLength"],[64,21,49,21],[64,24,49,24,"hexString"],[64,33,49,33],[64,34,49,34,"length"],[64,40,49,40],[65,4,50,2],[65,8,50,6,"currentLength"],[65,21,50,19],[65,24,50,22,"requiredLength"],[65,38,50,36],[65,40,50,38],[66,6,51,4],[66,10,51,10,"diff"],[66,14,51,14],[66,17,51,17,"requiredLength"],[66,31,51,31],[66,34,51,34,"currentLength"],[66,47,51,47],[67,6,52,4,"hexString"],[67,15,52,13],[67,19,52,17],[67,22,52,20],[67,23,52,21,"repeat"],[67,29,52,27],[67,30,52,28,"diff"],[67,34,52,32],[67,35,52,33],[68,4,53,2],[69,4,54,2],[69,11,54,9,"hexString"],[69,20,54,18],[70,2,55,0],[72,2,57,0],[73,0,58,0],[74,0,59,0],[75,0,60,0],[76,0,61,0],[77,0,62,0],[78,2,63,7],[78,11,63,16,"getDataLengthInLittleEndian"],[78,38,63,43,"getDataLengthInLittleEndian"],[78,39,63,44,"hexString"],[78,48,63,53],[78,50,63,55,"dataLength"],[78,60,63,65],[78,62,63,67],[79,4,64,2],[79,8,64,6],[79,9,64,7,"hexString"],[79,18,64,16],[79,20,64,18],[79,27,64,25],[79,33,64,31],[80,4,65,2],[80,11,65,9],[80,15,65,9,"numToLittleEndianHex"],[80,46,65,29],[80,48,65,30,"appendTailZeros"],[80,63,65,45],[80,64,65,46,"hexString"],[80,73,65,55],[80,75,65,57,"dataLength"],[80,85,65,67],[80,86,65,68],[80,87,65,69,"length"],[80,93,65,75],[80,96,65,78],[80,97,65,79],[80,98,65,80],[81,2,66,0],[83,2,68,0],[84,0,69,0],[85,0,70,0],[86,0,71,0],[87,0,72,0],[88,2,73,7],[88,11,73,16,"removeFileExtension"],[88,30,73,35,"removeFileExtension"],[88,31,73,36,"fileName"],[88,39,73,44],[88,41,73,46],[89,4,74,2],[89,8,74,8,"lastDotIndex"],[89,20,74,20],[89,23,74,23,"fileName"],[89,31,74,31],[89,32,74,32,"lastIndexOf"],[89,43,74,43],[89,44,74,44],[89,47,74,47],[89,48,74,48],[90,4,75,2],[90,8,75,6,"lastDotIndex"],[90,20,75,18],[90,25,75,23],[90,26,75,24],[90,27,75,25],[90,31,75,29,"lastDotIndex"],[90,43,75,41],[90,48,75,46],[90,49,75,47],[90,51,75,49],[91,6,76,4],[91,13,76,11,"fileName"],[91,21,76,19],[91,22,76,20],[91,23,76,21],[92,4,77,2],[93,4,78,2],[93,11,78,9,"fileName"],[93,19,78,17],[93,20,78,18,"substring"],[93,29,78,27],[93,30,78,28],[93,31,78,29],[93,33,78,31,"lastDotIndex"],[93,45,78,43],[93,46,78,44],[94,2,79,0],[96,2,81,0],[97,0,82,0],[98,0,83,0],[99,0,84,0],[100,0,85,0],[101,0,86,0],[102,2,87,7],[102,11,87,16,"decodeDataContent"],[102,28,87,33,"decodeDataContent"],[102,29,87,34,"property"],[102,37,87,42],[102,39,87,44,"dataContent"],[102,50,87,55],[102,52,87,57],[103,4,88,2],[103,8,88,8,"dataResult"],[103,18,88,18],[103,21,88,21],[103,22,88,22],[103,23,88,23],[104,4,89,2],[104,8,89,6,"dataOffset"],[104,18,89,16],[104,21,89,19],[104,22,89,20],[105,4,90,2],[105,8,90,6,"property"],[105,16,90,14],[105,17,90,15,"data"],[105,21,90,19],[105,23,90,21],[106,6,91,4],[106,11,91,9],[106,15,91,15,"dataKey"],[106,22,91,22],[106,26,91,26,"property"],[106,34,91,34],[106,35,91,35,"data"],[106,39,91,39],[106,41,91,41],[107,8,92,6],[107,12,92,12,"dataItem"],[107,20,92,20],[107,23,92,23,"property"],[107,31,92,31],[107,32,92,32,"data"],[107,36,92,36],[107,37,92,37,"dataKey"],[107,44,92,44],[107,45,92,45],[108,8,93,6],[108,12,93,10],[108,13,93,11,"dataItem"],[108,21,93,19],[108,23,93,21],[109,10,94,8],[109,16,94,14],[109,20,94,18,"Error"],[109,25,94,23],[109,26,94,24],[109,47,94,45],[109,48,94,46],[110,8,95,6],[111,8,96,6],[111,12,96,12,"length"],[111,18,96,18],[111,21,96,21,"dataItem"],[111,29,96,29],[111,30,96,30,"length"],[111,36,96,36],[111,41,96,41],[111,42,96,42],[111,45,96,45,"dataContent"],[111,56,96,56],[111,57,96,57,"length"],[111,63,96,63],[111,66,96,66,"dataOffset"],[111,76,96,76],[111,79,96,79,"dataItem"],[111,87,96,87],[111,88,96,88,"length"],[111,94,96,94],[111,97,96,97],[111,98,96,98],[112,8,97,6],[112,12,97,12,"value"],[112,17,97,17],[112,20,97,20,"dataContent"],[112,31,97,31],[112,32,97,32,"substring"],[112,41,97,41],[112,42,97,42,"dataOffset"],[112,52,97,52],[112,54,97,54,"dataOffset"],[112,64,97,64],[112,67,97,67,"length"],[112,73,97,73],[112,74,97,74],[113,8,98,6],[113,16,98,14,"dataItem"],[113,24,98,22],[113,25,98,23,"type"],[113,29,98,27],[114,10,99,8],[114,15,99,13],[114,23,99,21],[115,12,100,10,"dataResult"],[115,22,100,20],[115,23,100,21,"dataKey"],[115,30,100,28],[115,31,100,29],[115,34,100,32,"removeTrailingNulls"],[115,53,100,51],[115,54,100,52],[115,58,100,52,"hexStringToAscii"],[115,85,100,68],[115,87,100,69,"value"],[115,92,100,74],[115,93,100,75],[115,94,100,76],[116,12,101,10],[117,10,102,8],[117,15,102,13],[117,24,102,22],[118,12,103,10,"dataResult"],[118,22,103,20],[118,23,103,21,"dataKey"],[118,30,103,28],[118,31,103,29],[118,34,103,32,"removeTrailingNulls"],[118,53,103,51],[118,54,103,52],[118,58,103,52,"hexToNumberInlittleEndian"],[118,94,103,77],[118,96,103,78,"value"],[118,101,103,83],[118,102,103,84],[118,103,103,85,"toString"],[118,111,103,93],[118,112,103,94],[118,113,103,95],[118,114,103,96],[119,12,104,10],[120,10,105,8],[121,12,106,10,"console"],[121,19,106,17],[121,20,106,18,"log"],[121,23,106,21],[121,24,106,22],[121,46,106,44,"dataItem"],[121,54,106,52],[121,55,106,53,"type"],[121,59,106,57],[121,61,106,59],[121,62,106,60],[122,8,107,6],[123,8,108,6,"dataOffset"],[123,18,108,16],[123,22,108,20,"length"],[123,28,108,26],[124,6,109,4],[125,4,110,2],[126,4,111,2],[126,11,111,9,"dataResult"],[126,21,111,19],[127,2,112,0],[128,2,113,7],[128,11,113,16,"removeTrailingNulls"],[128,30,113,35,"removeTrailingNulls"],[128,31,113,36,"str"],[128,34,113,39],[128,36,113,41],[129,4,114,2],[130,4,115,2],[130,11,115,9,"str"],[130,14,115,12],[130,15,115,13,"replace"],[130,22,115,20],[130,23,115,21],[130,31,115,29],[130,33,115,31],[130,35,115,33],[130,36,115,34],[131,2,116,0],[133,2,118,0],[134,0,119,0],[135,0,120,0],[136,0,121,0],[137,0,122,0],[138,2,123,7],[138,11,123,16,"decodeNotification"],[138,29,123,34,"decodeNotification"],[138,30,123,35,"hexString"],[138,39,123,44],[138,41,123,46],[139,4,124,2],[139,8,124,6],[139,9,124,7,"hexString"],[139,18,124,16],[139,20,124,18],[139,27,124,25],[139,31,124,29],[140,4,125,2],[140,8,125,8,"properties"],[140,18,125,18],[140,21,125,21,"protocol"],[140,29,125,29],[140,30,125,30,"properties"],[140,40,125,40],[141,4,126,2],[141,8,126,6,"offset"],[141,14,126,12],[141,17,126,15],[141,18,126,16],[143,4,128,2],[144,4,129,2],[144,8,129,8,"frameIdentifier"],[144,23,129,23],[144,26,129,26,"hexString"],[144,35,129,35],[144,36,129,36,"substring"],[144,45,129,45],[144,46,129,46,"offset"],[144,52,129,52],[144,54,129,54,"offset"],[144,60,129,60],[144,63,129,63],[144,64,129,64],[144,65,129,65],[145,4,130,2,"offset"],[145,10,130,8],[145,14,130,12],[145,15,130,13],[147,4,132,2],[149,4,134,2],[150,4,135,2],[150,8,135,8,"dataVerification"],[150,24,135,24],[150,27,135,27,"hexString"],[150,36,135,36],[150,37,135,37,"substring"],[150,46,135,46],[150,47,135,47,"offset"],[150,53,135,53],[150,55,135,55,"offset"],[150,61,135,61],[150,64,135,64],[150,65,135,65],[150,66,135,66],[151,4,136,2,"offset"],[151,10,136,8],[151,14,136,12],[151,15,136,13],[153,4,138,2],[154,4,139,2],[154,8,139,8,"messageCode"],[154,19,139,19],[154,22,139,22,"hexString"],[154,31,139,31],[154,32,139,32,"substring"],[154,41,139,41],[154,42,139,42,"offset"],[154,48,139,48],[154,50,139,50,"offset"],[154,56,139,56],[154,59,139,59],[154,60,139,60],[154,61,139,61],[155,4,140,2,"offset"],[155,10,140,8],[155,14,140,12],[155,15,140,13],[157,4,142,2],[158,4,143,2],[158,8,143,8,"dataLength"],[158,18,143,18],[158,21,143,21,"hexString"],[158,30,143,30],[158,31,143,31,"substring"],[158,40,143,40],[158,41,143,41,"offset"],[158,47,143,47],[158,49,143,49,"offset"],[158,55,143,55],[158,58,143,58],[158,59,143,59],[158,60,143,60],[159,4,144,2,"offset"],[159,10,144,8],[159,14,144,12],[159,15,144,13],[161,4,146,2],[162,4,147,2],[162,8,147,8,"dataContent"],[162,19,147,19],[162,22,147,22,"hexString"],[162,31,147,31],[162,32,147,32,"substring"],[162,41,147,41],[162,42,147,42,"offset"],[162,48,147,48],[162,50,147,50,"offset"],[162,56,147,56],[162,59,147,59,"parseInt"],[162,67,147,67],[162,68,147,68,"dataLength"],[162,78,147,78],[162,80,147,80],[162,82,147,82],[162,83,147,83],[162,86,147,86],[162,87,147,87],[162,88,147,88],[164,4,149,2],[165,4,150,2],[165,8,150,6,"key"],[165,11,150,9],[165,14,150,12],[165,16,150,14],[166,4,151,2],[166,9,151,7],[166,13,151,13,"propKey"],[166,20,151,20],[166,24,151,24,"properties"],[166,34,151,34],[166,36,151,36],[167,6,152,4],[167,10,152,8,"properties"],[167,20,152,18],[167,21,152,19,"propKey"],[167,28,152,26],[167,29,152,27],[167,30,152,28,"messageCode"],[167,41,152,39],[167,46,152,44,"messageCode"],[167,57,152,55],[167,59,152,57],[168,8,153,6,"key"],[168,11,153,9],[168,14,153,12,"propKey"],[168,21,153,19],[169,8,154,6],[170,6,155,4],[171,4,156,2],[172,4,157,2],[172,8,157,6],[172,9,157,7,"key"],[172,12,157,10],[172,14,157,12],[173,6,158,4],[173,12,158,10],[173,16,158,14,"Error"],[173,21,158,19],[173,22,158,20],[173,47,158,45,"messageCode"],[173,58,158,56],[173,60,158,58],[173,61,158,59],[174,4,159,2],[175,4,160,2],[175,8,160,8,"property"],[175,16,160,16],[175,19,160,19,"properties"],[175,29,160,29],[175,30,160,30,"key"],[175,33,160,33],[175,34,160,34],[176,4,161,2],[176,8,161,8,"dataResult"],[176,18,161,18],[176,21,161,21,"decodeDataContent"],[176,38,161,38],[176,39,161,39,"property"],[176,47,161,47],[176,49,161,49,"dataContent"],[176,60,161,60],[176,61,161,61],[177,4,162,2],[177,11,162,9],[178,6,163,4,"key"],[178,9,163,7],[179,6,164,4,"frameIdentifier"],[179,21,164,19],[180,6,165,4,"dataVerification"],[180,22,165,20],[181,6,166,4,"messageCode"],[181,17,166,15],[182,6,167,4,"dataLength"],[182,16,167,14],[183,6,168,4,"dataContent"],[183,17,168,15],[184,6,169,4,"dataResult"],[185,4,170,2],[185,5,170,3],[186,2,171,0],[187,2,172,7],[187,6,172,13,"eUtils"],[187,12,172,19],[187,15,172,19,"exports"],[187,22,172,19],[187,23,172,19,"eUtils"],[187,29,172,19],[187,32,172,22],[188,4,173,2,"getAllKeysInProperties"],[188,26,173,24],[189,4,174,2,"getPropertyByKey"],[189,20,174,18],[190,4,175,2,"getPropertyKeyByMessageCode"],[190,31,175,29],[191,4,176,2,"getAllMessageCodes"],[191,22,176,20],[192,4,177,2,"appendTailZeros"],[192,19,177,17],[193,4,178,2,"getDataLengthInLittleEndian"],[193,31,178,29],[194,4,179,2,"removeFileExtension"],[194,23,179,21],[195,4,180,2,"decodeDataContent"],[195,21,180,19],[196,4,181,2,"removeTrailingNulls"],[196,23,181,21],[197,4,182,2,"decodeNotification"],[198,2,183,0],[198,3,183,1],[199,0,183,2],[199,3]],"functionMap":{"names":["<global>","getAllKeysInProperties","Object.keys.filter$argument_0","getPropertyByKey","getPropertyKeyByMessageCode","getAllMessageCodes","appendTailZeros","getDataLengthInLittleEndian","removeFileExtension","decodeDataContent","removeTrailingNulls","decodeNotification"],"mappings":"AAA;OCI;wCCE,gDD;CDC;OGC;CHK;OIC;CJQ;OKC;CLY;OMQ;CNW;OOQ;CPG;OQO;CRM;OSQ;CTyB;OUC;CVG;OWO;CXgD"}},"type":"js/module"}]}