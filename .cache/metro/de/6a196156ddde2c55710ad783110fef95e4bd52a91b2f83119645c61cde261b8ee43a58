{"dependencies":[{"name":"@trpc/server/observable","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":53,"index":53}}],"key":"I122979nMYhHcuaUZWanjRGzbec="}},{"name":"@trpc/server/unstable-core-do-not-import","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":54},"end":{"line":2,"column":75,"index":129}}],"key":"v6RfOz0FhqfBuoZo5CXmYCfVJms="}},{"name":"../TRPCClientError.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":130},"end":{"line":3,"column":57,"index":187}}],"key":"+VRJuZ2ikq/rZ4G1ICvMdURsA7A="}},{"name":"./internals/httpUtils.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":188},"end":{"line":4,"column":117,"index":305}}],"key":"ZJK0wcbPkw9cOEgpaYuOlXy9AFA="}},{"name":"./internals/contentTypes.mjs","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":306},"end":{"line":5,"column":71,"index":377}}],"key":"zALQvwBMZ3FbcH3MzkwtE1BTxpw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.httpLink = httpLink;\n  var _observable = require(_dependencyMap[0], \"@trpc/server/observable\");\n  var _unstableCoreDoNotImport = require(_dependencyMap[1], \"@trpc/server/unstable-core-do-not-import\");\n  var _TRPCClientError = require(_dependencyMap[2], \"../TRPCClientError.mjs\");\n  var _httpUtils = require(_dependencyMap[3], \"./internals/httpUtils.mjs\");\n  var _contentTypes = require(_dependencyMap[4], \"./internals/contentTypes.mjs\");\n  var universalRequester = opts => {\n    var input = (0, _httpUtils.getInput)(opts);\n    if ((0, _contentTypes.isFormData)(input)) {\n      if (opts.type !== 'mutation' && opts.methodOverride !== 'POST') {\n        throw new Error('FormData is only supported for mutations');\n      }\n      return (0, _httpUtils.httpRequest)({\n        ...opts,\n        // The browser will set this automatically and include the boundary= in it\n        contentTypeHeader: undefined,\n        getUrl: _httpUtils.getUrl,\n        getBody: () => input\n      });\n    }\n    if ((0, _contentTypes.isOctetType)(input)) {\n      if (opts.type !== 'mutation' && opts.methodOverride !== 'POST') {\n        throw new Error('Octet type input is only supported for mutations');\n      }\n      return (0, _httpUtils.httpRequest)({\n        ...opts,\n        contentTypeHeader: 'application/octet-stream',\n        getUrl: _httpUtils.getUrl,\n        getBody: () => input\n      });\n    }\n    return (0, _httpUtils.jsonHttpRequester)(opts);\n  };\n  /**\n   * @see https://trpc.io/docs/client/links/httpLink\n   */\n  function httpLink(opts) {\n    var resolvedOpts = (0, _httpUtils.resolveHTTPLinkOptions)(opts);\n    return () => {\n      return _ref => {\n        var op = _ref.op;\n        return (0, _observable.observable)(observer => {\n          var path = op.path,\n            input = op.input,\n            type = op.type;\n          /* istanbul ignore if -- @preserve */\n          if (type === 'subscription') {\n            throw new Error('Subscriptions are unsupported by `httpLink` - use `httpSubscriptionLink` or `wsLink`');\n          }\n          var request = universalRequester({\n            ...resolvedOpts,\n            type,\n            path,\n            input,\n            signal: op.signal,\n            headers() {\n              if (!opts.headers) {\n                return {};\n              }\n              if (typeof opts.headers === 'function') {\n                return opts.headers({\n                  op\n                });\n              }\n              return opts.headers;\n            }\n          });\n          var meta = undefined;\n          request.then(res => {\n            meta = res.meta;\n            var transformed = (0, _unstableCoreDoNotImport.transformResult)(res.json, resolvedOpts.transformer.output);\n            if (!transformed.ok) {\n              observer.error(_TRPCClientError.TRPCClientError.from(transformed.error, {\n                meta\n              }));\n              return;\n            }\n            observer.next({\n              context: res.meta,\n              result: transformed.result\n            });\n            observer.complete();\n          }).catch(cause => {\n            observer.error(_TRPCClientError.TRPCClientError.from(cause, {\n              meta\n            }));\n          });\n          return () => {\n            // noop\n          };\n        });\n      };\n    };\n  }\n});","lineCount":99,"map":[[6,2,1,0],[6,6,1,0,"_observable"],[6,17,1,0],[6,20,1,0,"require"],[6,27,1,0],[6,28,1,0,"_dependencyMap"],[6,42,1,0],[7,2,2,0],[7,6,2,0,"_unstableCoreDoNotImport"],[7,30,2,0],[7,33,2,0,"require"],[7,40,2,0],[7,41,2,0,"_dependencyMap"],[7,55,2,0],[8,2,3,0],[8,6,3,0,"_TRPCClientError"],[8,22,3,0],[8,25,3,0,"require"],[8,32,3,0],[8,33,3,0,"_dependencyMap"],[8,47,3,0],[9,2,4,0],[9,6,4,0,"_httpUtils"],[9,16,4,0],[9,19,4,0,"require"],[9,26,4,0],[9,27,4,0,"_dependencyMap"],[9,41,4,0],[10,2,5,0],[10,6,5,0,"_contentTypes"],[10,19,5,0],[10,22,5,0,"require"],[10,29,5,0],[10,30,5,0,"_dependencyMap"],[10,44,5,0],[11,2,7,0],[11,6,7,6,"universalRequester"],[11,24,7,24],[11,27,7,28,"opts"],[11,31,7,32],[11,35,7,35],[12,4,8,4],[12,8,8,10,"input"],[12,13,8,15],[12,16,8,18],[12,20,8,18,"getInput"],[12,39,8,26],[12,41,8,27,"opts"],[12,45,8,31],[12,46,8,32],[13,4,9,4],[13,8,9,8],[13,12,9,8,"isFormData"],[13,36,9,18],[13,38,9,19,"input"],[13,43,9,24],[13,44,9,25],[13,46,9,27],[14,6,10,8],[14,10,10,12,"opts"],[14,14,10,16],[14,15,10,17,"type"],[14,19,10,21],[14,24,10,26],[14,34,10,36],[14,38,10,40,"opts"],[14,42,10,44],[14,43,10,45,"methodOverride"],[14,57,10,59],[14,62,10,64],[14,68,10,70],[14,70,10,72],[15,8,11,12],[15,14,11,18],[15,18,11,22,"Error"],[15,23,11,27],[15,24,11,28],[15,66,11,70],[15,67,11,71],[16,6,12,8],[17,6,13,8],[17,13,13,15],[17,17,13,15,"httpRequest"],[17,39,13,26],[17,41,13,27],[18,8,14,12],[18,11,14,15,"opts"],[18,15,14,19],[19,8,15,12],[20,8,16,12,"contentTypeHeader"],[20,25,16,29],[20,27,16,31,"undefined"],[20,36,16,40],[21,8,17,12,"getUrl"],[21,14,17,18],[21,16,17,12,"getUrl"],[21,33,17,18],[22,8,18,12,"getBody"],[22,15,18,19],[22,17,18,21,"getBody"],[22,18,18,21],[22,23,18,25,"input"],[23,6,19,8],[23,7,19,9],[23,8,19,10],[24,4,20,4],[25,4,21,4],[25,8,21,8],[25,12,21,8,"isOctetType"],[25,37,21,19],[25,39,21,20,"input"],[25,44,21,25],[25,45,21,26],[25,47,21,28],[26,6,22,8],[26,10,22,12,"opts"],[26,14,22,16],[26,15,22,17,"type"],[26,19,22,21],[26,24,22,26],[26,34,22,36],[26,38,22,40,"opts"],[26,42,22,44],[26,43,22,45,"methodOverride"],[26,57,22,59],[26,62,22,64],[26,68,22,70],[26,70,22,72],[27,8,23,12],[27,14,23,18],[27,18,23,22,"Error"],[27,23,23,27],[27,24,23,28],[27,74,23,78],[27,75,23,79],[28,6,24,8],[29,6,25,8],[29,13,25,15],[29,17,25,15,"httpRequest"],[29,39,25,26],[29,41,25,27],[30,8,26,12],[30,11,26,15,"opts"],[30,15,26,19],[31,8,27,12,"contentTypeHeader"],[31,25,27,29],[31,27,27,31],[31,53,27,57],[32,8,28,12,"getUrl"],[32,14,28,18],[32,16,28,12,"getUrl"],[32,33,28,18],[33,8,29,12,"getBody"],[33,15,29,19],[33,17,29,21,"getBody"],[33,18,29,21],[33,23,29,25,"input"],[34,6,30,8],[34,7,30,9],[34,8,30,10],[35,4,31,4],[36,4,32,4],[36,11,32,11],[36,15,32,11,"jsonHttpRequester"],[36,43,32,28],[36,45,32,29,"opts"],[36,49,32,33],[36,50,32,34],[37,2,33,0],[37,3,33,1],[38,2,34,0],[39,0,35,0],[40,0,36,0],[41,2,36,4],[41,11,36,13,"httpLink"],[41,19,36,21,"httpLink"],[41,20,36,22,"opts"],[41,24,36,26],[41,26,36,28],[42,4,37,4],[42,8,37,10,"resolvedOpts"],[42,20,37,22],[42,23,37,25],[42,27,37,25,"resolveHTTPLinkOptions"],[42,60,37,47],[42,62,37,48,"opts"],[42,66,37,52],[42,67,37,53],[43,4,38,4],[43,11,38,11],[43,17,38,15],[44,6,39,8],[44,13,39,15,"_ref"],[44,17,39,15],[44,21,39,25],[45,8,39,25],[45,12,39,18,"op"],[45,14,39,20],[45,17,39,20,"_ref"],[45,21,39,20],[45,22,39,18,"op"],[45,24,39,20],[46,8,40,12],[46,15,40,19],[46,19,40,19,"observable"],[46,41,40,29],[46,43,40,31,"observer"],[46,51,40,39],[46,55,40,42],[47,10,41,16],[47,14,41,24,"path"],[47,18,41,28],[47,21,41,46,"op"],[47,23,41,48],[47,24,41,24,"path"],[47,28,41,28],[48,12,41,30,"input"],[48,17,41,35],[48,20,41,46,"op"],[48,22,41,48],[48,23,41,30,"input"],[48,28,41,35],[49,12,41,37,"type"],[49,16,41,41],[49,19,41,46,"op"],[49,21,41,48],[49,22,41,37,"type"],[49,26,41,41],[50,10,42,16],[51,10,42,54],[51,14,42,58,"type"],[51,18,42,62],[51,23,42,67],[51,37,42,81],[51,39,42,83],[52,12,43,20],[52,18,43,26],[52,22,43,30,"Error"],[52,27,43,35],[52,28,43,36],[52,114,43,122],[52,115,43,123],[53,10,44,16],[54,10,45,16],[54,14,45,22,"request"],[54,21,45,29],[54,24,45,32,"universalRequester"],[54,42,45,50],[54,43,45,51],[55,12,46,20],[55,15,46,23,"resolvedOpts"],[55,27,46,35],[56,12,47,20,"type"],[56,16,47,24],[57,12,48,20,"path"],[57,16,48,24],[58,12,49,20,"input"],[58,17,49,25],[59,12,50,20,"signal"],[59,18,50,26],[59,20,50,28,"op"],[59,22,50,30],[59,23,50,31,"signal"],[59,29,50,37],[60,12,51,20,"headers"],[60,19,51,27,"headers"],[60,20,51,27],[60,22,51,31],[61,14,52,24],[61,18,52,28],[61,19,52,29,"opts"],[61,23,52,33],[61,24,52,34,"headers"],[61,31,52,41],[61,33,52,43],[62,16,53,28],[62,23,53,35],[62,24,53,36],[62,25,53,37],[63,14,54,24],[64,14,55,24],[64,18,55,28],[64,25,55,35,"opts"],[64,29,55,39],[64,30,55,40,"headers"],[64,37,55,47],[64,42,55,52],[64,52,55,62],[64,54,55,64],[65,16,56,28],[65,23,56,35,"opts"],[65,27,56,39],[65,28,56,40,"headers"],[65,35,56,47],[65,36,56,48],[66,18,57,32,"op"],[67,16,58,28],[67,17,58,29],[67,18,58,30],[68,14,59,24],[69,14,60,24],[69,21,60,31,"opts"],[69,25,60,35],[69,26,60,36,"headers"],[69,33,60,43],[70,12,61,20],[71,10,62,16],[71,11,62,17],[71,12,62,18],[72,10,63,16],[72,14,63,20,"meta"],[72,18,63,24],[72,21,63,27,"undefined"],[72,30,63,36],[73,10,64,16,"request"],[73,17,64,23],[73,18,64,24,"then"],[73,22,64,28],[73,23,64,30,"res"],[73,26,64,33],[73,30,64,36],[74,12,65,20,"meta"],[74,16,65,24],[74,19,65,27,"res"],[74,22,65,30],[74,23,65,31,"meta"],[74,27,65,35],[75,12,66,20],[75,16,66,26,"transformed"],[75,27,66,37],[75,30,66,40],[75,34,66,40,"transformResult"],[75,74,66,55],[75,76,66,56,"res"],[75,79,66,59],[75,80,66,60,"json"],[75,84,66,64],[75,86,66,66,"resolvedOpts"],[75,98,66,78],[75,99,66,79,"transformer"],[75,110,66,90],[75,111,66,91,"output"],[75,117,66,97],[75,118,66,98],[76,12,67,20],[76,16,67,24],[76,17,67,25,"transformed"],[76,28,67,36],[76,29,67,37,"ok"],[76,31,67,39],[76,33,67,41],[77,14,68,24,"observer"],[77,22,68,32],[77,23,68,33,"error"],[77,28,68,38],[77,29,68,39,"TRPCClientError"],[77,61,68,54],[77,62,68,55,"from"],[77,66,68,59],[77,67,68,60,"transformed"],[77,78,68,71],[77,79,68,72,"error"],[77,84,68,77],[77,86,68,79],[78,16,69,28,"meta"],[79,14,70,24],[79,15,70,25],[79,16,70,26],[79,17,70,27],[80,14,71,24],[81,12,72,20],[82,12,73,20,"observer"],[82,20,73,28],[82,21,73,29,"next"],[82,25,73,33],[82,26,73,34],[83,14,74,24,"context"],[83,21,74,31],[83,23,74,33,"res"],[83,26,74,36],[83,27,74,37,"meta"],[83,31,74,41],[84,14,75,24,"result"],[84,20,75,30],[84,22,75,32,"transformed"],[84,33,75,43],[84,34,75,44,"result"],[85,12,76,20],[85,13,76,21],[85,14,76,22],[86,12,77,20,"observer"],[86,20,77,28],[86,21,77,29,"complete"],[86,29,77,37],[86,30,77,38],[86,31,77,39],[87,10,78,16],[87,11,78,17],[87,12,78,18],[87,13,78,19,"catch"],[87,18,78,24],[87,19,78,26,"cause"],[87,24,78,31],[87,28,78,34],[88,12,79,20,"observer"],[88,20,79,28],[88,21,79,29,"error"],[88,26,79,34],[88,27,79,35,"TRPCClientError"],[88,59,79,50],[88,60,79,51,"from"],[88,64,79,55],[88,65,79,56,"cause"],[88,70,79,61],[88,72,79,63],[89,14,80,24,"meta"],[90,12,81,20],[90,13,81,21],[90,14,81,22],[90,15,81,23],[91,10,82,16],[91,11,82,17],[91,12,82,18],[92,10,83,16],[92,17,83,23],[92,23,83,27],[93,12,84,16],[94,10,84,16],[94,11,85,17],[95,8,86,12],[95,9,86,13],[95,10,86,14],[96,6,87,8],[96,7,87,9],[97,4,88,4],[97,5,88,5],[98,2,89,0],[99,0,89,1],[99,3]],"functionMap":{"names":["<global>","universalRequester","httpRequest$argument_0.getBody","httpLink","<anonymous>","observable$argument_0","universalRequester$argument_0.headers","request.then$argument_0","request.then._catch$argument_0"],"mappings":"AAA;2BCM;qBCW,SD;qBCW,SD;CDI;IGG;WCE;8BCE;oBCW;qBDU;6BEG;iBFc,QG;iBHI;uBDC;iBCE;aDC;KDE;CHC"}},"type":"js/module"}]}