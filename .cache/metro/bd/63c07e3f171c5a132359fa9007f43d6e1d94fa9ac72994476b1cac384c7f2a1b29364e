{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getParseFn = getParseFn;\n  // zod / typeschema\n  function getParseFn(procedureParser) {\n    var parser = procedureParser;\n    if (typeof parser === 'function' && typeof parser.assert === 'function') {\n      // ParserArkTypeEsque - arktype schemas shouldn't be called as a function because they return a union type instead of throwing\n      return parser.assert.bind(parser);\n    }\n    if (typeof parser === 'function') {\n      // ParserValibotEsque (>= v0.31.0)\n      // ParserCustomValidatorEsque\n      return parser;\n    }\n    if (typeof parser.parseAsync === 'function') {\n      // ParserZodEsque\n      return parser.parseAsync.bind(parser);\n    }\n    if (typeof parser.parse === 'function') {\n      // ParserZodEsque\n      // ParserValibotEsque (< v0.13.0)\n      return parser.parse.bind(parser);\n    }\n    if (typeof parser.validateSync === 'function') {\n      // ParserYupEsque\n      return parser.validateSync.bind(parser);\n    }\n    if (typeof parser.create === 'function') {\n      // ParserSuperstructEsque\n      return parser.create.bind(parser);\n    }\n    if (typeof parser.assert === 'function') {\n      // ParserScaleEsque\n      return value => {\n        parser.assert(value);\n        return value;\n      };\n    }\n    throw new Error('Could not find a validator fn');\n  }\n});","lineCount":44,"map":[[6,2,1,0],[7,2,2,0],[7,11,2,9,"getParseFn"],[7,21,2,19,"getParseFn"],[7,22,2,20,"procedureParser"],[7,37,2,35],[7,39,2,37],[8,4,3,4],[8,8,3,10,"parser"],[8,14,3,16],[8,17,3,19,"procedureParser"],[8,32,3,34],[9,4,4,4],[9,8,4,8],[9,15,4,15,"parser"],[9,21,4,21],[9,26,4,26],[9,36,4,36],[9,40,4,40],[9,47,4,47,"parser"],[9,53,4,53],[9,54,4,54,"assert"],[9,60,4,60],[9,65,4,65],[9,75,4,75],[9,77,4,77],[10,6,5,8],[11,6,6,8],[11,13,6,15,"parser"],[11,19,6,21],[11,20,6,22,"assert"],[11,26,6,28],[11,27,6,29,"bind"],[11,31,6,33],[11,32,6,34,"parser"],[11,38,6,40],[11,39,6,41],[12,4,7,4],[13,4,8,4],[13,8,8,8],[13,15,8,15,"parser"],[13,21,8,21],[13,26,8,26],[13,36,8,36],[13,38,8,38],[14,6,9,8],[15,6,10,8],[16,6,11,8],[16,13,11,15,"parser"],[16,19,11,21],[17,4,12,4],[18,4,13,4],[18,8,13,8],[18,15,13,15,"parser"],[18,21,13,21],[18,22,13,22,"parseAsync"],[18,32,13,32],[18,37,13,37],[18,47,13,47],[18,49,13,49],[19,6,14,8],[20,6,15,8],[20,13,15,15,"parser"],[20,19,15,21],[20,20,15,22,"parseAsync"],[20,30,15,32],[20,31,15,33,"bind"],[20,35,15,37],[20,36,15,38,"parser"],[20,42,15,44],[20,43,15,45],[21,4,16,4],[22,4,17,4],[22,8,17,8],[22,15,17,15,"parser"],[22,21,17,21],[22,22,17,22,"parse"],[22,27,17,27],[22,32,17,32],[22,42,17,42],[22,44,17,44],[23,6,18,8],[24,6,19,8],[25,6,20,8],[25,13,20,15,"parser"],[25,19,20,21],[25,20,20,22,"parse"],[25,25,20,27],[25,26,20,28,"bind"],[25,30,20,32],[25,31,20,33,"parser"],[25,37,20,39],[25,38,20,40],[26,4,21,4],[27,4,22,4],[27,8,22,8],[27,15,22,15,"parser"],[27,21,22,21],[27,22,22,22,"validateSync"],[27,34,22,34],[27,39,22,39],[27,49,22,49],[27,51,22,51],[28,6,23,8],[29,6,24,8],[29,13,24,15,"parser"],[29,19,24,21],[29,20,24,22,"validateSync"],[29,32,24,34],[29,33,24,35,"bind"],[29,37,24,39],[29,38,24,40,"parser"],[29,44,24,46],[29,45,24,47],[30,4,25,4],[31,4,26,4],[31,8,26,8],[31,15,26,15,"parser"],[31,21,26,21],[31,22,26,22,"create"],[31,28,26,28],[31,33,26,33],[31,43,26,43],[31,45,26,45],[32,6,27,8],[33,6,28,8],[33,13,28,15,"parser"],[33,19,28,21],[33,20,28,22,"create"],[33,26,28,28],[33,27,28,29,"bind"],[33,31,28,33],[33,32,28,34,"parser"],[33,38,28,40],[33,39,28,41],[34,4,29,4],[35,4,30,4],[35,8,30,8],[35,15,30,15,"parser"],[35,21,30,21],[35,22,30,22,"assert"],[35,28,30,28],[35,33,30,33],[35,43,30,43],[35,45,30,45],[36,6,31,8],[37,6,32,8],[37,13,32,16,"value"],[37,18,32,21],[37,22,32,24],[38,8,33,12,"parser"],[38,14,33,18],[38,15,33,19,"assert"],[38,21,33,25],[38,22,33,26,"value"],[38,27,33,31],[38,28,33,32],[39,8,34,12],[39,15,34,19,"value"],[39,20,34,24],[40,6,35,8],[40,7,35,9],[41,4,36,4],[42,4,37,4],[42,10,37,10],[42,14,37,14,"Error"],[42,19,37,19],[42,20,37,20],[42,51,37,51],[42,52,37,52],[43,2,38,0],[44,0,38,1],[44,3]],"functionMap":{"names":["<global>","getParseFn","<anonymous>"],"mappings":"AAA;ACC;eC8B;SDG;CDG"}},"type":"js/module"}]}