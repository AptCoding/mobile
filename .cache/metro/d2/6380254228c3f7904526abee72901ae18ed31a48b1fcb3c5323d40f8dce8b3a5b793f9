{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":115,"column":54,"index":4721}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":115,"column":54,"index":4721}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":115,"column":54,"index":4721}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@ide/backoff","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":58,"index":58}}],"key":"NQRSA6vwI/E/bytfLcxt0JFnjmQ="}},{"name":"expo-application","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":2,"column":0,"index":59},"end":{"line":2,"column":48,"index":107}}],"key":"ROo8waFf3/VNi+f4CblZuFEzfTg="}},{"name":"expo-modules-core","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":108},"end":{"line":3,"column":78,"index":186}}],"key":"ka0FS6s7ZmvhJq+hEjGkLLrGpyo="}},{"name":"../ServerRegistrationModule","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":187},"end":{"line":4,"column":67,"index":254}}],"key":"N1opXXbg8pPDNrK5P7Ybebbd+6I="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.updateDevicePushTokenAsync = updateDevicePushTokenAsync;\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/slicedToArray\"));\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _backoff = require(_dependencyMap[3], \"@ide/backoff\");\n  var Application = _interopRequireWildcard(require(_dependencyMap[4], \"expo-application\"));\n  var _expoModulesCore = require(_dependencyMap[5], \"expo-modules-core\");\n  var _ServerRegistrationModule = _interopRequireDefault(require(_dependencyMap[6], \"../ServerRegistrationModule\"));\n  function _getRequireWildcardCache(e) { if (\"function\" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }\n  function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || \"object\" != typeof e && \"function\" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if (\"default\" !== u && {}.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }\n  var updateDevicePushTokenUrl = 'https://exp.host/--/api/v2/push/updateDeviceToken';\n  function updateDevicePushTokenAsync(_x, _x2) {\n    return _updateDevicePushTokenAsync.apply(this, arguments);\n  } // Same as in getExpoPushTokenAsync\n  function _updateDevicePushTokenAsync() {\n    _updateDevicePushTokenAsync = (0, _asyncToGenerator2.default)(function* (signal, token) {\n      var doUpdateDevicePushTokenAsync = /*#__PURE__*/function () {\n        var _ref = (0, _asyncToGenerator2.default)(function* (retry) {\n          var _yield$Promise$all = yield Promise.all([shouldUseDevelopmentNotificationService(), getDeviceIdAsync()]),\n            _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 2),\n            development = _yield$Promise$all2[0],\n            deviceId = _yield$Promise$all2[1];\n          var body = {\n            deviceId: deviceId.toLowerCase(),\n            development,\n            deviceToken: token.data,\n            appId: Application.applicationId,\n            type: getTypeOfToken(token)\n          };\n          try {\n            var response = yield fetch(updateDevicePushTokenUrl, {\n              method: 'POST',\n              headers: {\n                'content-type': 'application/json'\n              },\n              body: JSON.stringify(body),\n              signal\n            });\n            // Help debug erroring servers\n            if (!response.ok) {\n              console.debug('[expo-notifications] Error encountered while updating the device push token with the server:', yield response.text());\n            }\n            // Retry if request failed\n            if (!response.ok) {\n              retry();\n            }\n          } catch (e) {\n            // Error returned if the request is aborted should be an 'AbortError'. In\n            // React Native fetch is polyfilled using `whatwg-fetch` which:\n            // - creates `AbortError`s like this\n            //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L505\n            // - which creates exceptions like\n            //   https://github.com/github/fetch/blob/75d9455d380f365701151f3ac85c5bda4bbbde76/fetch.js#L490-L494\n            if (e.name === 'AbortError') {\n              // We don't consider AbortError a failure, it's a sign somewhere else the\n              // request is expected to succeed and we don't need this one, so let's\n              // just return.\n              return;\n            }\n            console.warn('[expo-notifications] Error thrown while updating the device push token with the server:', e);\n            retry();\n          }\n        });\n        return function doUpdateDevicePushTokenAsync(_x3) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      var shouldTry = true;\n      var retry = () => {\n        shouldTry = true;\n      };\n      var retriesCount = 0;\n      var initialBackoff = 500; // 0.5 s\n      var backoffOptions = {\n        maxBackoff: 2 * 60 * 1000 // 2 minutes\n      };\n      var nextBackoffInterval = (0, _backoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n      while (shouldTry && !signal.aborted) {\n        // Will be set to true by `retry` if it's called\n        shouldTry = false;\n        yield doUpdateDevicePushTokenAsync(retry);\n        // Do not wait if we won't retry\n        if (shouldTry && !signal.aborted) {\n          nextBackoffInterval = (0, _backoff.computeNextBackoffInterval)(initialBackoff, retriesCount, backoffOptions);\n          retriesCount += 1;\n          yield new Promise(resolve => setTimeout(resolve, nextBackoffInterval));\n        }\n      }\n    });\n    return _updateDevicePushTokenAsync.apply(this, arguments);\n  }\n  function getDeviceIdAsync() {\n    return _getDeviceIdAsync.apply(this, arguments);\n  } // Same as in getExpoPushTokenAsync\n  function _getDeviceIdAsync() {\n    _getDeviceIdAsync = (0, _asyncToGenerator2.default)(function* () {\n      try {\n        if (!_ServerRegistrationModule.default.getInstallationIdAsync) {\n          throw new _expoModulesCore.UnavailabilityError('ExpoServerRegistrationModule', 'getInstallationIdAsync');\n        }\n        return yield _ServerRegistrationModule.default.getInstallationIdAsync();\n      } catch (e) {\n        throw new _expoModulesCore.CodedError('ERR_NOTIFICATIONS_DEVICE_ID', `Could not fetch the installation ID of the application: ${e}.`);\n      }\n    });\n    return _getDeviceIdAsync.apply(this, arguments);\n  }\n  function getTypeOfToken(devicePushToken) {\n    switch (devicePushToken.type) {\n      case 'ios':\n        return 'apns';\n      case 'android':\n        return 'fcm';\n      // This probably will error on server, but let's make this function future-safe.\n      default:\n        return devicePushToken.type;\n    }\n  }\n  // Same as in getExpoPushTokenAsync\n  function shouldUseDevelopmentNotificationService() {\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n  function _shouldUseDevelopmentNotificationService() {\n    _shouldUseDevelopmentNotificationService = (0, _asyncToGenerator2.default)(function* () {\n      if (_expoModulesCore.Platform.OS === 'ios') {\n        try {\n          var notificationServiceEnvironment = yield Application.getIosPushNotificationServiceEnvironmentAsync();\n          if (notificationServiceEnvironment === 'development') {\n            return true;\n          }\n        } catch {\n          // We can't do anything here, we'll fallback to false then.\n        }\n      }\n      return false;\n    });\n    return _shouldUseDevelopmentNotificationService.apply(this, arguments);\n  }\n});","lineCount":143,"map":[[9,2,1,0],[9,6,1,0,"_backoff"],[9,14,1,0],[9,17,1,0,"require"],[9,24,1,0],[9,25,1,0,"_dependencyMap"],[9,39,1,0],[10,2,2,0],[10,6,2,0,"Application"],[10,17,2,0],[10,20,2,0,"_interopRequireWildcard"],[10,43,2,0],[10,44,2,0,"require"],[10,51,2,0],[10,52,2,0,"_dependencyMap"],[10,66,2,0],[11,2,3,0],[11,6,3,0,"_expoModulesCore"],[11,22,3,0],[11,25,3,0,"require"],[11,32,3,0],[11,33,3,0,"_dependencyMap"],[11,47,3,0],[12,2,4,0],[12,6,4,0,"_ServerRegistrationModule"],[12,31,4,0],[12,34,4,0,"_interopRequireDefault"],[12,56,4,0],[12,57,4,0,"require"],[12,64,4,0],[12,65,4,0,"_dependencyMap"],[12,79,4,0],[13,2,4,67],[13,11,4,67,"_getRequireWildcardCache"],[13,36,4,67,"e"],[13,37,4,67],[13,66,4,67,"WeakMap"],[13,73,4,67],[13,92,4,67,"r"],[13,93,4,67],[13,100,4,67,"WeakMap"],[13,107,4,67],[13,111,4,67,"t"],[13,112,4,67],[13,119,4,67,"WeakMap"],[13,126,4,67],[13,138,4,67,"_getRequireWildcardCache"],[13,162,4,67],[13,174,4,67,"_getRequireWildcardCache"],[13,175,4,67,"e"],[13,176,4,67],[13,187,4,67,"e"],[13,188,4,67],[13,191,4,67,"t"],[13,192,4,67],[13,195,4,67,"r"],[13,196,4,67],[13,201,4,67,"e"],[13,202,4,67],[14,2,4,67],[14,11,4,67,"_interopRequireWildcard"],[14,35,4,67,"e"],[14,36,4,67],[14,38,4,67,"r"],[14,39,4,67],[14,48,4,67,"r"],[14,49,4,67],[14,53,4,67,"e"],[14,54,4,67],[14,58,4,67,"e"],[14,59,4,67],[14,60,4,67,"__esModule"],[14,70,4,67],[14,79,4,67,"e"],[14,80,4,67],[14,95,4,67,"e"],[14,96,4,67],[14,119,4,67,"e"],[14,120,4,67],[14,145,4,67,"e"],[14,146,4,67],[14,157,4,67,"default"],[14,164,4,67],[14,166,4,67,"e"],[14,167,4,67],[14,175,4,67,"t"],[14,176,4,67],[14,179,4,67,"_getRequireWildcardCache"],[14,203,4,67],[14,204,4,67,"r"],[14,205,4,67],[14,212,4,67,"t"],[14,213,4,67],[14,217,4,67,"t"],[14,218,4,67],[14,219,4,67,"has"],[14,222,4,67],[14,223,4,67,"e"],[14,224,4,67],[14,234,4,67,"t"],[14,235,4,67],[14,236,4,67,"get"],[14,239,4,67],[14,240,4,67,"e"],[14,241,4,67],[14,248,4,67,"n"],[14,249,4,67],[14,254,4,67,"__proto__"],[14,263,4,67],[14,273,4,67,"a"],[14,274,4,67],[14,277,4,67,"Object"],[14,283,4,67],[14,284,4,67,"defineProperty"],[14,298,4,67],[14,302,4,67,"Object"],[14,308,4,67],[14,309,4,67,"getOwnPropertyDescriptor"],[14,333,4,67],[14,344,4,67,"u"],[14,345,4,67],[14,349,4,67,"e"],[14,350,4,67],[14,370,4,67,"u"],[14,371,4,67],[14,378,4,67,"hasOwnProperty"],[14,392,4,67],[14,393,4,67,"call"],[14,397,4,67],[14,398,4,67,"e"],[14,399,4,67],[14,401,4,67,"u"],[14,402,4,67],[14,411,4,67,"i"],[14,412,4,67],[14,415,4,67,"a"],[14,416,4,67],[14,419,4,67,"Object"],[14,425,4,67],[14,426,4,67,"getOwnPropertyDescriptor"],[14,450,4,67],[14,451,4,67,"e"],[14,452,4,67],[14,454,4,67,"u"],[14,455,4,67],[14,465,4,67,"i"],[14,466,4,67],[14,471,4,67,"i"],[14,472,4,67],[14,473,4,67,"get"],[14,476,4,67],[14,480,4,67,"i"],[14,481,4,67],[14,482,4,67,"set"],[14,485,4,67],[14,489,4,67,"Object"],[14,495,4,67],[14,496,4,67,"defineProperty"],[14,510,4,67],[14,511,4,67,"n"],[14,512,4,67],[14,514,4,67,"u"],[14,515,4,67],[14,517,4,67,"i"],[14,518,4,67],[14,522,4,67,"n"],[14,523,4,67],[14,524,4,67,"u"],[14,525,4,67],[14,529,4,67,"e"],[14,530,4,67],[14,531,4,67,"u"],[14,532,4,67],[14,544,4,67,"n"],[14,545,4,67],[14,546,4,67,"default"],[14,553,4,67],[14,556,4,67,"e"],[14,557,4,67],[14,559,4,67,"t"],[14,560,4,67],[14,564,4,67,"t"],[14,565,4,67],[14,566,4,67,"set"],[14,569,4,67],[14,570,4,67,"e"],[14,571,4,67],[14,573,4,67,"n"],[14,574,4,67],[14,577,4,67,"n"],[14,578,4,67],[15,2,5,0],[15,6,5,6,"updateDevicePushTokenUrl"],[15,30,5,30],[15,33,5,33],[15,84,5,84],[16,2,5,85],[16,11,6,22,"updateDevicePushTokenAsync"],[16,37,6,48,"updateDevicePushTokenAsync"],[16,38,6,48,"_x"],[16,40,6,48],[16,42,6,48,"_x2"],[16,45,6,48],[17,4,6,48],[17,11,6,48,"_updateDevicePushTokenAsync"],[17,38,6,48],[17,39,6,48,"apply"],[17,44,6,48],[17,51,6,48,"arguments"],[17,60,6,48],[18,2,6,48],[18,4,76,0],[19,2,76,0],[19,11,76,0,"_updateDevicePushTokenAsync"],[19,39,76,0],[20,4,76,0,"_updateDevicePushTokenAsync"],[20,31,76,0],[20,38,76,0,"_asyncToGenerator2"],[20,56,76,0],[20,57,76,0,"default"],[20,64,76,0],[20,66,6,7],[20,77,6,49,"signal"],[20,83,6,55],[20,85,6,57,"token"],[20,90,6,62],[20,92,6,64],[21,6,7,4],[21,10,7,10,"doUpdateDevicePushTokenAsync"],[21,38,7,38],[22,8,7,38],[22,12,7,38,"_ref"],[22,16,7,38],[22,23,7,38,"_asyncToGenerator2"],[22,41,7,38],[22,42,7,38,"default"],[22,49,7,38],[22,51,7,41],[22,62,7,48,"retry"],[22,67,7,53],[22,69,7,58],[23,10,8,8],[23,14,8,8,"_yield$Promise$all"],[23,32,8,8],[23,41,8,46,"Promise"],[23,48,8,53],[23,49,8,54,"all"],[23,52,8,57],[23,53,8,58],[23,54,9,12,"shouldUseDevelopmentNotificationService"],[23,93,9,51],[23,94,9,52],[23,95,9,53],[23,97,10,12,"getDeviceIdAsync"],[23,113,10,28],[23,114,10,29],[23,115,10,30],[23,116,11,9],[23,117,11,10],[24,12,11,10,"_yield$Promise$all2"],[24,31,11,10],[24,38,11,10,"_slicedToArray2"],[24,53,11,10],[24,54,11,10,"default"],[24,61,11,10],[24,63,11,10,"_yield$Promise$all"],[24,81,11,10],[25,12,8,15,"development"],[25,23,8,26],[25,26,8,26,"_yield$Promise$all2"],[25,45,8,26],[26,12,8,28,"deviceId"],[26,20,8,36],[26,23,8,36,"_yield$Promise$all2"],[26,42,8,36],[27,10,12,8],[27,14,12,14,"body"],[27,18,12,18],[27,21,12,21],[28,12,13,12,"deviceId"],[28,20,13,20],[28,22,13,22,"deviceId"],[28,30,13,30],[28,31,13,31,"toLowerCase"],[28,42,13,42],[28,43,13,43],[28,44,13,44],[29,12,14,12,"development"],[29,23,14,23],[30,12,15,12,"deviceToken"],[30,23,15,23],[30,25,15,25,"token"],[30,30,15,30],[30,31,15,31,"data"],[30,35,15,35],[31,12,16,12,"appId"],[31,17,16,17],[31,19,16,19,"Application"],[31,30,16,30],[31,31,16,31,"applicationId"],[31,44,16,44],[32,12,17,12,"type"],[32,16,17,16],[32,18,17,18,"getTypeOfToken"],[32,32,17,32],[32,33,17,33,"token"],[32,38,17,38],[33,10,18,8],[33,11,18,9],[34,10,19,8],[34,14,19,12],[35,12,20,12],[35,16,20,18,"response"],[35,24,20,26],[35,33,20,35,"fetch"],[35,38,20,40],[35,39,20,41,"updateDevicePushTokenUrl"],[35,63,20,65],[35,65,20,67],[36,14,21,16,"method"],[36,20,21,22],[36,22,21,24],[36,28,21,30],[37,14,22,16,"headers"],[37,21,22,23],[37,23,22,25],[38,16,23,20],[38,30,23,34],[38,32,23,36],[39,14,24,16],[39,15,24,17],[40,14,25,16,"body"],[40,18,25,20],[40,20,25,22,"JSON"],[40,24,25,26],[40,25,25,27,"stringify"],[40,34,25,36],[40,35,25,37,"body"],[40,39,25,41],[40,40,25,42],[41,14,26,16,"signal"],[42,12,27,12],[42,13,27,13],[42,14,27,14],[43,12,28,12],[44,12,29,12],[44,16,29,16],[44,17,29,17,"response"],[44,25,29,25],[44,26,29,26,"ok"],[44,28,29,28],[44,30,29,30],[45,14,30,16,"console"],[45,21,30,23],[45,22,30,24,"debug"],[45,27,30,29],[45,28,30,30],[45,122,30,124],[45,130,30,132,"response"],[45,138,30,140],[45,139,30,141,"text"],[45,143,30,145],[45,144,30,146],[45,145,30,147],[45,146,30,148],[46,12,31,12],[47,12,32,12],[48,12,33,12],[48,16,33,16],[48,17,33,17,"response"],[48,25,33,25],[48,26,33,26,"ok"],[48,28,33,28],[48,30,33,30],[49,14,34,16,"retry"],[49,19,34,21],[49,20,34,22],[49,21,34,23],[50,12,35,12],[51,10,36,8],[51,11,36,9],[51,12,37,8],[51,19,37,15,"e"],[51,20,37,16],[51,22,37,18],[52,12,38,12],[53,12,39,12],[54,12,40,12],[55,12,41,12],[56,12,42,12],[57,12,43,12],[58,12,44,12],[58,16,44,16,"e"],[58,17,44,17],[58,18,44,18,"name"],[58,22,44,22],[58,27,44,27],[58,39,44,39],[58,41,44,41],[59,14,45,16],[60,14,46,16],[61,14,47,16],[62,14,48,16],[63,12,49,12],[64,12,50,12,"console"],[64,19,50,19],[64,20,50,20,"warn"],[64,24,50,24],[64,25,50,25],[64,114,50,114],[64,116,50,116,"e"],[64,117,50,117],[64,118,50,118],[65,12,51,12,"retry"],[65,17,51,17],[65,18,51,18],[65,19,51,19],[66,10,52,8],[67,8,53,4],[67,9,53,5],[68,8,53,5],[68,24,7,10,"doUpdateDevicePushTokenAsync"],[68,52,7,38,"doUpdateDevicePushTokenAsync"],[68,53,7,38,"_x3"],[68,56,7,38],[69,10,7,38],[69,17,7,38,"_ref"],[69,21,7,38],[69,22,7,38,"apply"],[69,27,7,38],[69,34,7,38,"arguments"],[69,43,7,38],[70,8,7,38],[71,6,7,38],[71,9,53,5],[72,6,54,4],[72,10,54,8,"shouldTry"],[72,19,54,17],[72,22,54,20],[72,26,54,24],[73,6,55,4],[73,10,55,10,"retry"],[73,15,55,15],[73,18,55,18,"retry"],[73,19,55,18],[73,24,55,24],[74,8,56,8,"shouldTry"],[74,17,56,17],[74,20,56,20],[74,24,56,24],[75,6,57,4],[75,7,57,5],[76,6,58,4],[76,10,58,8,"retriesCount"],[76,22,58,20],[76,25,58,23],[76,26,58,24],[77,6,59,4],[77,10,59,10,"initialBackoff"],[77,24,59,24],[77,27,59,27],[77,30,59,30],[77,31,59,31],[77,32,59,32],[78,6,60,4],[78,10,60,10,"backoffOptions"],[78,24,60,24],[78,27,60,27],[79,8,61,8,"maxBackoff"],[79,18,61,18],[79,20,61,20],[79,21,61,21],[79,24,61,24],[79,26,61,26],[79,29,61,29],[79,33,61,33],[79,34,61,35],[80,6,62,4],[80,7,62,5],[81,6,63,4],[81,10,63,8,"nextBackoffInterval"],[81,29,63,27],[81,32,63,30],[81,36,63,30,"computeNextBackoffInterval"],[81,71,63,56],[81,73,63,57,"initialBackoff"],[81,87,63,71],[81,89,63,73,"retriesCount"],[81,101,63,85],[81,103,63,87,"backoffOptions"],[81,117,63,101],[81,118,63,102],[82,6,64,4],[82,13,64,11,"shouldTry"],[82,22,64,20],[82,26,64,24],[82,27,64,25,"signal"],[82,33,64,31],[82,34,64,32,"aborted"],[82,41,64,39],[82,43,64,41],[83,8,65,8],[84,8,66,8,"shouldTry"],[84,17,66,17],[84,20,66,20],[84,25,66,25],[85,8,67,8],[85,14,67,14,"doUpdateDevicePushTokenAsync"],[85,42,67,42],[85,43,67,43,"retry"],[85,48,67,48],[85,49,67,49],[86,8,68,8],[87,8,69,8],[87,12,69,12,"shouldTry"],[87,21,69,21],[87,25,69,25],[87,26,69,26,"signal"],[87,32,69,32],[87,33,69,33,"aborted"],[87,40,69,40],[87,42,69,42],[88,10,70,12,"nextBackoffInterval"],[88,29,70,31],[88,32,70,34],[88,36,70,34,"computeNextBackoffInterval"],[88,71,70,60],[88,73,70,61,"initialBackoff"],[88,87,70,75],[88,89,70,77,"retriesCount"],[88,101,70,89],[88,103,70,91,"backoffOptions"],[88,117,70,105],[88,118,70,106],[89,10,71,12,"retriesCount"],[89,22,71,24],[89,26,71,28],[89,27,71,29],[90,10,72,12],[90,16,72,18],[90,20,72,22,"Promise"],[90,27,72,29],[90,28,72,31,"resolve"],[90,35,72,38],[90,39,72,43,"setTimeout"],[90,49,72,53],[90,50,72,54,"resolve"],[90,57,72,61],[90,59,72,63,"nextBackoffInterval"],[90,78,72,82],[90,79,72,83],[90,80,72,84],[91,8,73,8],[92,6,74,4],[93,4,75,0],[93,5,75,1],[94,4,75,1],[94,11,75,1,"_updateDevicePushTokenAsync"],[94,38,75,1],[94,39,75,1,"apply"],[94,44,75,1],[94,51,75,1,"arguments"],[94,60,75,1],[95,2,75,1],[96,2,75,1],[96,11,77,15,"getDeviceIdAsync"],[96,27,77,31,"getDeviceIdAsync"],[96,28,77,31],[97,4,77,31],[97,11,77,31,"_getDeviceIdAsync"],[97,28,77,31],[97,29,77,31,"apply"],[97,34,77,31],[97,41,77,31,"arguments"],[97,50,77,31],[98,2,77,31],[98,4,88,0],[99,2,88,0],[99,11,88,0,"_getDeviceIdAsync"],[99,29,88,0],[100,4,88,0,"_getDeviceIdAsync"],[100,21,88,0],[100,28,88,0,"_asyncToGenerator2"],[100,46,88,0],[100,47,88,0,"default"],[100,54,88,0],[100,56,77,0],[100,69,77,34],[101,6,78,4],[101,10,78,8],[102,8,79,8],[102,12,79,12],[102,13,79,13,"ServerRegistrationModule"],[102,46,79,37],[102,47,79,38,"getInstallationIdAsync"],[102,69,79,60],[102,71,79,62],[103,10,80,12],[103,16,80,18],[103,20,80,22,"UnavailabilityError"],[103,56,80,41],[103,57,80,42],[103,87,80,72],[103,89,80,74],[103,113,80,98],[103,114,80,99],[104,8,81,8],[105,8,82,8],[105,21,82,21,"ServerRegistrationModule"],[105,54,82,45],[105,55,82,46,"getInstallationIdAsync"],[105,77,82,68],[105,78,82,69],[105,79,82,70],[106,6,83,4],[106,7,83,5],[106,8,84,4],[106,15,84,11,"e"],[106,16,84,12],[106,18,84,14],[107,8,85,8],[107,14,85,14],[107,18,85,18,"CodedError"],[107,45,85,28],[107,46,85,29],[107,75,85,58],[107,77,85,60],[107,136,85,119,"e"],[107,137,85,120],[107,140,85,123],[107,141,85,124],[108,6,86,4],[109,4,87,0],[109,5,87,1],[110,4,87,1],[110,11,87,1,"_getDeviceIdAsync"],[110,28,87,1],[110,29,87,1,"apply"],[110,34,87,1],[110,41,87,1,"arguments"],[110,50,87,1],[111,2,87,1],[112,2,89,0],[112,11,89,9,"getTypeOfToken"],[112,25,89,23,"getTypeOfToken"],[112,26,89,24,"devicePushToken"],[112,41,89,39],[112,43,89,41],[113,4,90,4],[113,12,90,12,"devicePushToken"],[113,27,90,27],[113,28,90,28,"type"],[113,32,90,32],[114,6,91,8],[114,11,91,13],[114,16,91,18],[115,8,92,12],[115,15,92,19],[115,21,92,25],[116,6,93,8],[116,11,93,13],[116,20,93,22],[117,8,94,12],[117,15,94,19],[117,20,94,24],[118,6,95,8],[119,6,96,8],[120,8,97,12],[120,15,97,19,"devicePushToken"],[120,30,97,34],[120,31,97,35,"type"],[120,35,97,39],[121,4,98,4],[122,2,99,0],[123,2,100,0],[124,2,100,0],[124,11,101,15,"shouldUseDevelopmentNotificationService"],[124,50,101,54,"shouldUseDevelopmentNotificationService"],[124,51,101,54],[125,4,101,54],[125,11,101,54,"_shouldUseDevelopmentNotificationService"],[125,51,101,54],[125,52,101,54,"apply"],[125,57,101,54],[125,64,101,54,"arguments"],[125,73,101,54],[126,2,101,54],[127,2,101,54],[127,11,101,54,"_shouldUseDevelopmentNotificationService"],[127,52,101,54],[128,4,101,54,"_shouldUseDevelopmentNotificationService"],[128,44,101,54],[128,51,101,54,"_asyncToGenerator2"],[128,69,101,54],[128,70,101,54,"default"],[128,77,101,54],[128,79,101,0],[128,92,101,57],[129,6,102,4],[129,10,102,8,"Platform"],[129,35,102,16],[129,36,102,17,"OS"],[129,38,102,19],[129,43,102,24],[129,48,102,29],[129,50,102,31],[130,8,103,8],[130,12,103,12],[131,10,104,12],[131,14,104,18,"notificationServiceEnvironment"],[131,44,104,48],[131,53,104,57,"Application"],[131,64,104,68],[131,65,104,69,"getIosPushNotificationServiceEnvironmentAsync"],[131,110,104,114],[131,111,104,115],[131,112,104,116],[132,10,105,12],[132,14,105,16,"notificationServiceEnvironment"],[132,44,105,46],[132,49,105,51],[132,62,105,64],[132,64,105,66],[133,12,106,16],[133,19,106,23],[133,23,106,27],[134,10,107,12],[135,8,108,8],[135,9,108,9],[135,10,109,8],[135,16,109,14],[136,10,110,12],[137,8,110,12],[138,6,112,4],[139,6,113,4],[139,13,113,11],[139,18,113,16],[140,4,114,0],[140,5,114,1],[141,4,114,1],[141,11,114,1,"_shouldUseDevelopmentNotificationService"],[141,51,114,1],[141,52,114,1,"apply"],[141,57,114,1],[141,64,114,1,"arguments"],[141,73,114,1],[142,2,114,1],[143,0,114,1],[143,3]],"functionMap":{"names":["<global>","updateDevicePushTokenAsync","doUpdateDevicePushTokenAsync","retry","Promise$argument_0","getDeviceIdAsync","getTypeOfToken","shouldUseDevelopmentNotificationService"],"mappings":"AAA;OCK;yCCC;KD8C;kBEE;KFE;8BGe,qDH;CDG;AKE;CLU;AME;CNU;AOE;CPa"}},"type":"js/module"}]}