{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":104,"column":34,"index":2979}}],"key":"7kvm5yrOpz4NYiDi6sn4qxa8DVQ="}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":104,"column":34,"index":2979}}],"key":"8I802z/QkQYw0PV6ZCqhBNDwn0Q="}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":104,"column":34,"index":2979}}],"key":"EU+qeBIKi4KcIzPeK4PbkLqFqVY="}},{"name":"react","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":0,"index":15},"end":{"line":3,"column":44,"index":59}}],"key":"a4EMkKqamYWCMMPV7UeQlqGQ+ks="}},{"name":"react-native-ble-plx","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":4,"column":0,"index":60},"end":{"line":4,"column":50,"index":110}}],"key":"NBmFvG088/HL2VMyWTBr0y5lINs="}},{"name":"./utils/ble.js","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":5,"column":0,"index":111},"end":{"line":5,"column":88,"index":199}}],"key":"iEiSrfVFfs/a9ZHSh5Gw2H91YQw="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _interopRequireDefault = require(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useBLE = useBLE;\n  var _asyncToGenerator2 = _interopRequireDefault(require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\"));\n  var _slicedToArray2 = _interopRequireDefault(require(_dependencyMap[2], \"@babel/runtime/helpers/slicedToArray\"));\n  var _react = require(_dependencyMap[3], \"react\");\n  var _reactNativeBlePlx = require(_dependencyMap[4], \"react-native-ble-plx\");\n  var _ble = require(_dependencyMap[5], \"./utils/ble.js\");\n  var bleManager = new _reactNativeBlePlx.BleManager();\n  function useBLE(_ref) {\n    var scanning = _ref.scanning,\n      protocolConfigurations = _ref.protocolConfigurations;\n    var _useState = (0, _react.useState)([]),\n      _useState2 = (0, _slicedToArray2.default)(_useState, 2),\n      allDevices = _useState2[0],\n      setAllDevices = _useState2[1];\n    var _useState3 = (0, _react.useState)(null),\n      _useState4 = (0, _slicedToArray2.default)(_useState3, 2),\n      connected = _useState4[0],\n      setConnected = _useState4[1];\n    var _useState5 = (0, _react.useState)(0),\n      _useState6 = (0, _slicedToArray2.default)(_useState5, 2),\n      rssi = _useState6[0],\n      setRSSI = _useState6[1];\n    var _useState7 = (0, _react.useState)(null),\n      _useState8 = (0, _slicedToArray2.default)(_useState7, 2),\n      deviceHandler = _useState8[0],\n      setDeviceHandler = _useState8[1];\n    (0, _react.useEffect)(() => {\n      if (!scanning) {\n        stopScan();\n        return;\n      }\n      scan();\n    }, [scanning]);\n    (0, _react.useEffect)(() => {\n      var updateRSSI = /*#__PURE__*/function () {\n        var _ref2 = (0, _asyncToGenerator2.default)(function* () {\n          if (connected) {\n            var rssiValue = yield connected.readRSSI();\n            setRSSI(rssiValue.rssi ?? 0);\n          } else {\n            setRSSI(0);\n          }\n        });\n        return function updateRSSI() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      var intervalId = setInterval(updateRSSI, 3000); // update RSSI every 3 seconds\n\n      return () => clearInterval(intervalId);\n    }, [connected]);\n    function scan() {\n      bleManager.startDeviceScan(null, null, (error, device) => {\n        if (error) {\n          console.error(error);\n          return;\n        }\n        if (!device || !device.localName || !(0, _ble.isRolecDevice)(device.localName)) return;\n        setAllDevices(prevState => {\n          if ((0, _ble.isDuplicteDevice)(prevState, device)) return prevState;\n          return [...prevState, device];\n        });\n      });\n    }\n    function stopScan() {\n      bleManager.stopDeviceScan();\n      return true;\n    }\n    function connect(_x) {\n      return _connect.apply(this, arguments);\n    }\n    function _connect() {\n      _connect = (0, _asyncToGenerator2.default)(function* (device) {\n        if (connected) {\n          var disconnected = yield disconnect();\n          if (!disconnected) return false;\n        }\n        var connectedDevice = yield bleManager.connectToDevice(device.id);\n        if (!connectedDevice) return false;\n        var discovered = yield connectedDevice.discoverAllServicesAndCharacteristics();\n        if (!discovered) return false;\n        setConnected(device);\n        console.log('Connected device: ', device);\n        var deviceHandlerInstance = (0, _ble.protocolDeviceHandler)({\n          bleManager,\n          device,\n          protocolConfigurations\n        });\n        setDeviceHandler(deviceHandlerInstance);\n\n        //bleManager.onDeviceDisconnected(connectedDevice.id, onDisconnected);\n\n        return true;\n      });\n      return _connect.apply(this, arguments);\n    }\n    function disconnect() {\n      return _disconnect.apply(this, arguments);\n    } // async function onDisconnected(\n    //   error: BleError | null,\n    //   device: Device | null\n    // ): Promise<{ error: BleError | null; device: Device | null }> {\n    //   console.log('Disconnected', error, device);\n    //   await deviceHandler?.deconstructor();\n    //   setDeviceHandler(null);\n    //   setConnected(null);\n    //   return Promise.resolve({ error, device });\n    // }\n    function _disconnect() {\n      _disconnect = (0, _asyncToGenerator2.default)(function* () {\n        if (!connected) return false;\n        var closed = yield connected.cancelConnection();\n        if (!closed) return false;\n        yield deviceHandler?.deconstructor();\n        setDeviceHandler(null);\n        setConnected(null);\n        return true;\n      });\n      return _disconnect.apply(this, arguments);\n    }\n    return {\n      allDevices,\n      connected,\n      connect,\n      disconnect,\n      deviceHandler,\n      rssi\n    };\n  }\n});","lineCount":137,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_interopRequireDefault"],[4,28,1,13],[4,31,1,13,"require"],[4,38,1,13],[4,39,1,13,"_dependencyMap"],[4,53,1,13],[5,2,1,13,"Object"],[5,8,1,13],[5,9,1,13,"defineProperty"],[5,23,1,13],[5,24,1,13,"exports"],[5,31,1,13],[6,4,1,13,"value"],[6,9,1,13],[7,2,1,13],[8,2,1,13,"exports"],[8,9,1,13],[8,10,1,13,"useBLE"],[8,16,1,13],[8,19,1,13,"useBLE"],[8,25,1,13],[9,2,1,13],[9,6,1,13,"_asyncToGenerator2"],[9,24,1,13],[9,27,1,13,"_interopRequireDefault"],[9,49,1,13],[9,50,1,13,"require"],[9,57,1,13],[9,58,1,13,"_dependencyMap"],[9,72,1,13],[10,2,1,13],[10,6,1,13,"_slicedToArray2"],[10,21,1,13],[10,24,1,13,"_interopRequireDefault"],[10,46,1,13],[10,47,1,13,"require"],[10,54,1,13],[10,55,1,13,"_dependencyMap"],[10,69,1,13],[11,2,3,0],[11,6,3,0,"_react"],[11,12,3,0],[11,15,3,0,"require"],[11,22,3,0],[11,23,3,0,"_dependencyMap"],[11,37,3,0],[12,2,4,0],[12,6,4,0,"_reactNativeBlePlx"],[12,24,4,0],[12,27,4,0,"require"],[12,34,4,0],[12,35,4,0,"_dependencyMap"],[12,49,4,0],[13,2,5,0],[13,6,5,0,"_ble"],[13,10,5,0],[13,13,5,0,"require"],[13,20,5,0],[13,21,5,0,"_dependencyMap"],[13,35,5,0],[14,2,6,0],[14,6,6,6,"bleManager"],[14,16,6,16],[14,19,6,19],[14,23,6,23,"BleManager"],[14,52,6,33],[14,53,6,34],[14,54,6,35],[15,2,7,7],[15,11,7,16,"useBLE"],[15,17,7,22,"useBLE"],[15,18,7,22,"_ref"],[15,22,7,22],[15,24,10,3],[16,4,10,3],[16,8,8,2,"scanning"],[16,16,8,10],[16,19,8,10,"_ref"],[16,23,8,10],[16,24,8,2,"scanning"],[16,32,8,10],[17,6,9,2,"protocolConfigurations"],[17,28,9,24],[17,31,9,24,"_ref"],[17,35,9,24],[17,36,9,2,"protocolConfigurations"],[17,58,9,24],[18,4,11,2],[18,8,11,2,"_useState"],[18,17,11,2],[18,20,11,38],[18,24,11,38,"useState"],[18,39,11,46],[18,41,11,47],[18,43,11,49],[18,44,11,50],[19,6,11,50,"_useState2"],[19,16,11,50],[19,23,11,50,"_slicedToArray2"],[19,38,11,50],[19,39,11,50,"default"],[19,46,11,50],[19,48,11,50,"_useState"],[19,57,11,50],[20,6,11,9,"allDevices"],[20,16,11,19],[20,19,11,19,"_useState2"],[20,29,11,19],[21,6,11,21,"setAllDevices"],[21,19,11,34],[21,22,11,34,"_useState2"],[21,32,11,34],[22,4,12,2],[22,8,12,2,"_useState3"],[22,18,12,2],[22,21,12,36],[22,25,12,36,"useState"],[22,40,12,44],[22,42,12,45],[22,46,12,49],[22,47,12,50],[23,6,12,50,"_useState4"],[23,16,12,50],[23,23,12,50,"_slicedToArray2"],[23,38,12,50],[23,39,12,50,"default"],[23,46,12,50],[23,48,12,50,"_useState3"],[23,58,12,50],[24,6,12,9,"connected"],[24,15,12,18],[24,18,12,18,"_useState4"],[24,28,12,18],[25,6,12,20,"setConnected"],[25,18,12,32],[25,21,12,32,"_useState4"],[25,31,12,32],[26,4,13,2],[26,8,13,2,"_useState5"],[26,18,13,2],[26,21,13,26],[26,25,13,26,"useState"],[26,40,13,34],[26,42,13,35],[26,43,13,36],[26,44,13,37],[27,6,13,37,"_useState6"],[27,16,13,37],[27,23,13,37,"_slicedToArray2"],[27,38,13,37],[27,39,13,37,"default"],[27,46,13,37],[27,48,13,37,"_useState5"],[27,58,13,37],[28,6,13,9,"rssi"],[28,10,13,13],[28,13,13,13,"_useState6"],[28,23,13,13],[29,6,13,15,"setRSSI"],[29,13,13,22],[29,16,13,22,"_useState6"],[29,26,13,22],[30,4,14,2],[30,8,14,2,"_useState7"],[30,18,14,2],[30,21,14,44],[30,25,14,44,"useState"],[30,40,14,52],[30,42,14,53],[30,46,14,57],[30,47,14,58],[31,6,14,58,"_useState8"],[31,16,14,58],[31,23,14,58,"_slicedToArray2"],[31,38,14,58],[31,39,14,58,"default"],[31,46,14,58],[31,48,14,58,"_useState7"],[31,58,14,58],[32,6,14,9,"deviceHandler"],[32,19,14,22],[32,22,14,22,"_useState8"],[32,32,14,22],[33,6,14,24,"setDeviceHandler"],[33,22,14,40],[33,25,14,40,"_useState8"],[33,35,14,40],[34,4,15,2],[34,8,15,2,"useEffect"],[34,24,15,11],[34,26,15,12],[34,32,15,18],[35,6,16,4],[35,10,16,8],[35,11,16,9,"scanning"],[35,19,16,17],[35,21,16,19],[36,8,17,6,"stopScan"],[36,16,17,14],[36,17,17,15],[36,18,17,16],[37,8,18,6],[38,6,19,4],[39,6,20,4,"scan"],[39,10,20,8],[39,11,20,9],[39,12,20,10],[40,4,21,2],[40,5,21,3],[40,7,21,5],[40,8,21,6,"scanning"],[40,16,21,14],[40,17,21,15],[40,18,21,16],[41,4,22,2],[41,8,22,2,"useEffect"],[41,24,22,11],[41,26,22,12],[41,32,22,18],[42,6,23,4],[42,10,23,10,"updateRSSI"],[42,20,23,20],[43,8,23,20],[43,12,23,20,"_ref2"],[43,17,23,20],[43,24,23,20,"_asyncToGenerator2"],[43,42,23,20],[43,43,23,20,"default"],[43,50,23,20],[43,52,23,23],[43,65,23,35],[44,10,24,6],[44,14,24,10,"connected"],[44,23,24,19],[44,25,24,21],[45,12,25,8],[45,16,25,14,"rssiValue"],[45,25,25,23],[45,34,25,32,"connected"],[45,43,25,41],[45,44,25,42,"readRSSI"],[45,52,25,50],[45,53,25,51],[45,54,25,52],[46,12,26,8,"setRSSI"],[46,19,26,15],[46,20,26,16,"rssiValue"],[46,29,26,25],[46,30,26,26,"rssi"],[46,34,26,30],[46,38,26,34],[46,39,26,35],[46,40,26,36],[47,10,27,6],[47,11,27,7],[47,17,27,13],[48,12,28,8,"setRSSI"],[48,19,28,15],[48,20,28,16],[48,21,28,17],[48,22,28,18],[49,10,29,6],[50,8,30,4],[50,9,30,5],[51,8,30,5],[51,24,23,10,"updateRSSI"],[51,34,23,20,"updateRSSI"],[51,35,23,20],[52,10,23,20],[52,17,23,20,"_ref2"],[52,22,23,20],[52,23,23,20,"apply"],[52,28,23,20],[52,35,23,20,"arguments"],[52,44,23,20],[53,8,23,20],[54,6,23,20],[54,9,30,5],[55,6,31,4],[55,10,31,10,"intervalId"],[55,20,31,20],[55,23,31,23,"setInterval"],[55,34,31,34],[55,35,31,35,"updateRSSI"],[55,45,31,45],[55,47,31,47],[55,51,31,51],[55,52,31,52],[55,53,31,53],[55,54,31,54],[57,6,33,4],[57,13,33,11],[57,19,33,17,"clearInterval"],[57,32,33,30],[57,33,33,31,"intervalId"],[57,43,33,41],[57,44,33,42],[58,4,34,2],[58,5,34,3],[58,7,34,5],[58,8,34,6,"connected"],[58,17,34,15],[58,18,34,16],[58,19,34,17],[59,4,35,2],[59,13,35,11,"scan"],[59,17,35,15,"scan"],[59,18,35,15],[59,20,35,18],[60,6,36,4,"bleManager"],[60,16,36,14],[60,17,36,15,"startDeviceScan"],[60,32,36,30],[60,33,36,31],[60,37,36,35],[60,39,36,37],[60,43,36,41],[60,45,36,43],[60,46,36,44,"error"],[60,51,36,49],[60,53,36,51,"device"],[60,59,36,57],[60,64,36,62],[61,8,37,6],[61,12,37,10,"error"],[61,17,37,15],[61,19,37,17],[62,10,38,8,"console"],[62,17,38,15],[62,18,38,16,"error"],[62,23,38,21],[62,24,38,22,"error"],[62,29,38,27],[62,30,38,28],[63,10,39,8],[64,8,40,6],[65,8,41,6],[65,12,41,10],[65,13,41,11,"device"],[65,19,41,17],[65,23,41,21],[65,24,41,22,"device"],[65,30,41,28],[65,31,41,29,"localName"],[65,40,41,38],[65,44,41,42],[65,45,41,43],[65,49,41,43,"isRolecDevice"],[65,67,41,56],[65,69,41,57,"device"],[65,75,41,63],[65,76,41,64,"localName"],[65,85,41,73],[65,86,41,74],[65,88,41,76],[66,8,42,6,"setAllDevices"],[66,21,42,19],[66,22,42,20,"prevState"],[66,31,42,29],[66,35,42,33],[67,10,43,8],[67,14,43,12],[67,18,43,12,"isDuplicteDevice"],[67,39,43,28],[67,41,43,29,"prevState"],[67,50,43,38],[67,52,43,40,"device"],[67,58,43,46],[67,59,43,47],[67,61,43,49],[67,68,43,56,"prevState"],[67,77,43,65],[68,10,44,8],[68,17,44,15],[68,18,44,16],[68,21,44,19,"prevState"],[68,30,44,28],[68,32,44,30,"device"],[68,38,44,36],[68,39,44,37],[69,8,45,6],[69,9,45,7],[69,10,45,8],[70,6,46,4],[70,7,46,5],[70,8,46,6],[71,4,47,2],[72,4,48,2],[72,13,48,11,"stopScan"],[72,21,48,19,"stopScan"],[72,22,48,19],[72,24,48,22],[73,6,49,4,"bleManager"],[73,16,49,14],[73,17,49,15,"stopDeviceScan"],[73,31,49,29],[73,32,49,30],[73,33,49,31],[74,6,50,4],[74,13,50,11],[74,17,50,15],[75,4,51,2],[76,4,51,3],[76,13,52,17,"connect"],[76,20,52,24,"connect"],[76,21,52,24,"_x"],[76,23,52,24],[77,6,52,24],[77,13,52,24,"_connect"],[77,21,52,24],[77,22,52,24,"apply"],[77,27,52,24],[77,34,52,24,"arguments"],[77,43,52,24],[78,4,52,24],[79,4,52,24],[79,13,52,24,"_connect"],[79,22,52,24],[80,6,52,24,"_connect"],[80,14,52,24],[80,21,52,24,"_asyncToGenerator2"],[80,39,52,24],[80,40,52,24,"default"],[80,47,52,24],[80,49,52,2],[80,60,52,25,"device"],[80,66,52,31],[80,68,52,33],[81,8,53,4],[81,12,53,8,"connected"],[81,21,53,17],[81,23,53,19],[82,10,54,6],[82,14,54,12,"disconnected"],[82,26,54,24],[82,35,54,33,"disconnect"],[82,45,54,43],[82,46,54,44],[82,47,54,45],[83,10,55,6],[83,14,55,10],[83,15,55,11,"disconnected"],[83,27,55,23],[83,29,55,25],[83,36,55,32],[83,41,55,37],[84,8,56,4],[85,8,57,4],[85,12,57,10,"connectedDevice"],[85,27,57,25],[85,36,57,34,"bleManager"],[85,46,57,44],[85,47,57,45,"connectToDevice"],[85,62,57,60],[85,63,57,61,"device"],[85,69,57,67],[85,70,57,68,"id"],[85,72,57,70],[85,73,57,71],[86,8,58,4],[86,12,58,8],[86,13,58,9,"connectedDevice"],[86,28,58,24],[86,30,58,26],[86,37,58,33],[86,42,58,38],[87,8,59,4],[87,12,59,10,"discovered"],[87,22,59,20],[87,31,59,29,"connectedDevice"],[87,46,59,44],[87,47,59,45,"discoverAllServicesAndCharacteristics"],[87,84,59,82],[87,85,59,83],[87,86,59,84],[88,8,60,4],[88,12,60,8],[88,13,60,9,"discovered"],[88,23,60,19],[88,25,60,21],[88,32,60,28],[88,37,60,33],[89,8,61,4,"setConnected"],[89,20,61,16],[89,21,61,17,"device"],[89,27,61,23],[89,28,61,24],[90,8,62,4,"console"],[90,15,62,11],[90,16,62,12,"log"],[90,19,62,15],[90,20,62,16],[90,40,62,36],[90,42,62,38,"device"],[90,48,62,44],[90,49,62,45],[91,8,63,4],[91,12,63,10,"deviceHandlerInstance"],[91,33,63,31],[91,36,63,34],[91,40,63,34,"protocolDeviceHandler"],[91,66,63,55],[91,68,63,56],[92,10,64,6,"bleManager"],[92,20,64,16],[93,10,65,6,"device"],[93,16,65,12],[94,10,66,6,"protocolConfigurations"],[95,8,67,4],[95,9,67,5],[95,10,67,6],[96,8,68,4,"setDeviceHandler"],[96,24,68,20],[96,25,68,21,"deviceHandlerInstance"],[96,46,68,42],[96,47,68,43],[98,8,70,4],[100,8,72,4],[100,15,72,11],[100,19,72,15],[101,6,73,2],[101,7,73,3],[102,6,73,3],[102,13,73,3,"_connect"],[102,21,73,3],[102,22,73,3,"apply"],[102,27,73,3],[102,34,73,3,"arguments"],[102,43,73,3],[103,4,73,3],[104,4,73,3],[104,13,74,17,"disconnect"],[104,23,74,27,"disconnect"],[104,24,74,27],[105,6,74,27],[105,13,74,27,"_disconnect"],[105,24,74,27],[105,25,74,27,"apply"],[105,30,74,27],[105,37,74,27,"arguments"],[105,46,74,27],[106,4,74,27],[106,6,84,2],[107,4,85,2],[108,4,86,2],[109,4,87,2],[110,4,88,2],[111,4,89,2],[112,4,90,2],[113,4,91,2],[114,4,92,2],[115,4,93,2],[116,4,93,2],[116,13,93,2,"_disconnect"],[116,25,93,2],[117,6,93,2,"_disconnect"],[117,17,93,2],[117,24,93,2,"_asyncToGenerator2"],[117,42,93,2],[117,43,93,2,"default"],[117,50,93,2],[117,52,74,2],[117,65,74,30],[118,8,75,4],[118,12,75,8],[118,13,75,9,"connected"],[118,22,75,18],[118,24,75,20],[118,31,75,27],[118,36,75,32],[119,8,76,4],[119,12,76,10,"closed"],[119,18,76,16],[119,27,76,25,"connected"],[119,36,76,34],[119,37,76,35,"cancelConnection"],[119,53,76,51],[119,54,76,52],[119,55,76,53],[120,8,77,4],[120,12,77,8],[120,13,77,9,"closed"],[120,19,77,15],[120,21,77,17],[120,28,77,24],[120,33,77,29],[121,8,78,4],[121,14,78,10,"deviceHandler"],[121,27,78,23],[121,29,78,25,"deconstructor"],[121,42,78,38],[121,43,78,39],[121,44,78,40],[122,8,79,4,"setDeviceHandler"],[122,24,79,20],[122,25,79,21],[122,29,79,25],[122,30,79,26],[123,8,80,4,"setConnected"],[123,20,80,16],[123,21,80,17],[123,25,80,21],[123,26,80,22],[124,8,81,4],[124,15,81,11],[124,19,81,15],[125,6,82,2],[125,7,82,3],[126,6,82,3],[126,13,82,3,"_disconnect"],[126,24,82,3],[126,25,82,3,"apply"],[126,30,82,3],[126,37,82,3,"arguments"],[126,46,82,3],[127,4,82,3],[128,4,95,2],[128,11,95,9],[129,6,96,4,"allDevices"],[129,16,96,14],[130,6,97,4,"connected"],[130,15,97,13],[131,6,98,4,"connect"],[131,13,98,11],[132,6,99,4,"disconnect"],[132,16,99,14],[133,6,100,4,"deviceHandler"],[133,19,100,17],[134,6,101,4,"rssi"],[135,4,102,2],[135,5,102,3],[136,2,103,0],[137,0,103,1],[137,3]],"functionMap":{"names":["<global>","useBLE","useEffect$argument_0","updateRSSI","<anonymous>","scan","bleManager.startDeviceScan$argument_2","setAllDevices$argument_0","stopScan","connect","disconnect"],"mappings":"AAA;OCM;YCQ;GDM;YCC;uBCC;KDO;WEG,+BF;GDC;EIC;2CCC;oBCM;ODG;KDC;GJC;EOC;GPG;EQC;GRqB;ESC;GTQ;CDqB"}},"type":"js/module"}]}