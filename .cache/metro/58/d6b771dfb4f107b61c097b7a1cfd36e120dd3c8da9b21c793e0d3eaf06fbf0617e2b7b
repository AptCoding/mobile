{"dependencies":[{"name":"is-callable","data":{"asyncType":null,"exportNames":["*"],"locs":[{"start":{"line":3,"column":17,"index":32},"end":{"line":3,"column":39,"index":54}}],"key":"cxUxYyGG34iBhE+Rskpv4ZMhdMs="}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  'use strict';\n\n  var isCallable = require(_dependencyMap[0], \"is-callable\");\n  var toStr = Object.prototype.toString;\n  var hasOwnProperty = Object.prototype.hasOwnProperty;\n  var forEachArray = function forEachArray(array, iterator, receiver) {\n    for (var i = 0, len = array.length; i < len; i++) {\n      if (hasOwnProperty.call(array, i)) {\n        if (receiver == null) {\n          iterator(array[i], i, array);\n        } else {\n          iterator.call(receiver, array[i], i, array);\n        }\n      }\n    }\n  };\n  var forEachString = function forEachString(string, iterator, receiver) {\n    for (var i = 0, len = string.length; i < len; i++) {\n      // no such thing as a sparse string.\n      if (receiver == null) {\n        iterator(string.charAt(i), i, string);\n      } else {\n        iterator.call(receiver, string.charAt(i), i, string);\n      }\n    }\n  };\n  var forEachObject = function forEachObject(object, iterator, receiver) {\n    for (var k in object) {\n      if (hasOwnProperty.call(object, k)) {\n        if (receiver == null) {\n          iterator(object[k], k, object);\n        } else {\n          iterator.call(receiver, object[k], k, object);\n        }\n      }\n    }\n  };\n  var forEach = function forEach(list, iterator, thisArg) {\n    if (!isCallable(iterator)) {\n      throw new TypeError('iterator must be a function');\n    }\n    var receiver;\n    if (arguments.length >= 3) {\n      receiver = thisArg;\n    }\n    if (toStr.call(list) === '[object Array]') {\n      forEachArray(list, iterator, receiver);\n    } else if (typeof list === 'string') {\n      forEachString(list, iterator, receiver);\n    } else {\n      forEachObject(list, iterator, receiver);\n    }\n  };\n  module.exports = forEach;\n});","lineCount":56,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[4,6,3,4,"isCallable"],[4,16,3,14],[4,19,3,17,"require"],[4,26,3,24],[4,27,3,24,"_dependencyMap"],[4,41,3,24],[4,59,3,38],[4,60,3,39],[5,2,5,0],[5,6,5,4,"toStr"],[5,11,5,9],[5,14,5,12,"Object"],[5,20,5,18],[5,21,5,19,"prototype"],[5,30,5,28],[5,31,5,29,"toString"],[5,39,5,37],[6,2,6,0],[6,6,6,4,"hasOwnProperty"],[6,20,6,18],[6,23,6,21,"Object"],[6,29,6,27],[6,30,6,28,"prototype"],[6,39,6,37],[6,40,6,38,"hasOwnProperty"],[6,54,6,52],[7,2,8,0],[7,6,8,4,"forEachArray"],[7,18,8,16],[7,21,8,19],[7,30,8,28,"forEachArray"],[7,42,8,40,"forEachArray"],[7,43,8,41,"array"],[7,48,8,46],[7,50,8,48,"iterator"],[7,58,8,56],[7,60,8,58,"receiver"],[7,68,8,66],[7,70,8,68],[8,4,9,4],[8,9,9,9],[8,13,9,13,"i"],[8,14,9,14],[8,17,9,17],[8,18,9,18],[8,20,9,20,"len"],[8,23,9,23],[8,26,9,26,"array"],[8,31,9,31],[8,32,9,32,"length"],[8,38,9,38],[8,40,9,40,"i"],[8,41,9,41],[8,44,9,44,"len"],[8,47,9,47],[8,49,9,49,"i"],[8,50,9,50],[8,52,9,52],[8,54,9,54],[9,6,10,8],[9,10,10,12,"hasOwnProperty"],[9,24,10,26],[9,25,10,27,"call"],[9,29,10,31],[9,30,10,32,"array"],[9,35,10,37],[9,37,10,39,"i"],[9,38,10,40],[9,39,10,41],[9,41,10,43],[10,8,11,12],[10,12,11,16,"receiver"],[10,20,11,24],[10,24,11,28],[10,28,11,32],[10,30,11,34],[11,10,12,16,"iterator"],[11,18,12,24],[11,19,12,25,"array"],[11,24,12,30],[11,25,12,31,"i"],[11,26,12,32],[11,27,12,33],[11,29,12,35,"i"],[11,30,12,36],[11,32,12,38,"array"],[11,37,12,43],[11,38,12,44],[12,8,13,12],[12,9,13,13],[12,15,13,19],[13,10,14,16,"iterator"],[13,18,14,24],[13,19,14,25,"call"],[13,23,14,29],[13,24,14,30,"receiver"],[13,32,14,38],[13,34,14,40,"array"],[13,39,14,45],[13,40,14,46,"i"],[13,41,14,47],[13,42,14,48],[13,44,14,50,"i"],[13,45,14,51],[13,47,14,53,"array"],[13,52,14,58],[13,53,14,59],[14,8,15,12],[15,6,16,8],[16,4,17,4],[17,2,18,0],[17,3,18,1],[18,2,20,0],[18,6,20,4,"forEachString"],[18,19,20,17],[18,22,20,20],[18,31,20,29,"forEachString"],[18,44,20,42,"forEachString"],[18,45,20,43,"string"],[18,51,20,49],[18,53,20,51,"iterator"],[18,61,20,59],[18,63,20,61,"receiver"],[18,71,20,69],[18,73,20,71],[19,4,21,4],[19,9,21,9],[19,13,21,13,"i"],[19,14,21,14],[19,17,21,17],[19,18,21,18],[19,20,21,20,"len"],[19,23,21,23],[19,26,21,26,"string"],[19,32,21,32],[19,33,21,33,"length"],[19,39,21,39],[19,41,21,41,"i"],[19,42,21,42],[19,45,21,45,"len"],[19,48,21,48],[19,50,21,50,"i"],[19,51,21,51],[19,53,21,53],[19,55,21,55],[20,6,22,8],[21,6,23,8],[21,10,23,12,"receiver"],[21,18,23,20],[21,22,23,24],[21,26,23,28],[21,28,23,30],[22,8,24,12,"iterator"],[22,16,24,20],[22,17,24,21,"string"],[22,23,24,27],[22,24,24,28,"charAt"],[22,30,24,34],[22,31,24,35,"i"],[22,32,24,36],[22,33,24,37],[22,35,24,39,"i"],[22,36,24,40],[22,38,24,42,"string"],[22,44,24,48],[22,45,24,49],[23,6,25,8],[23,7,25,9],[23,13,25,15],[24,8,26,12,"iterator"],[24,16,26,20],[24,17,26,21,"call"],[24,21,26,25],[24,22,26,26,"receiver"],[24,30,26,34],[24,32,26,36,"string"],[24,38,26,42],[24,39,26,43,"charAt"],[24,45,26,49],[24,46,26,50,"i"],[24,47,26,51],[24,48,26,52],[24,50,26,54,"i"],[24,51,26,55],[24,53,26,57,"string"],[24,59,26,63],[24,60,26,64],[25,6,27,8],[26,4,28,4],[27,2,29,0],[27,3,29,1],[28,2,31,0],[28,6,31,4,"forEachObject"],[28,19,31,17],[28,22,31,20],[28,31,31,29,"forEachObject"],[28,44,31,42,"forEachObject"],[28,45,31,43,"object"],[28,51,31,49],[28,53,31,51,"iterator"],[28,61,31,59],[28,63,31,61,"receiver"],[28,71,31,69],[28,73,31,71],[29,4,32,4],[29,9,32,9],[29,13,32,13,"k"],[29,14,32,14],[29,18,32,18,"object"],[29,24,32,24],[29,26,32,26],[30,6,33,8],[30,10,33,12,"hasOwnProperty"],[30,24,33,26],[30,25,33,27,"call"],[30,29,33,31],[30,30,33,32,"object"],[30,36,33,38],[30,38,33,40,"k"],[30,39,33,41],[30,40,33,42],[30,42,33,44],[31,8,34,12],[31,12,34,16,"receiver"],[31,20,34,24],[31,24,34,28],[31,28,34,32],[31,30,34,34],[32,10,35,16,"iterator"],[32,18,35,24],[32,19,35,25,"object"],[32,25,35,31],[32,26,35,32,"k"],[32,27,35,33],[32,28,35,34],[32,30,35,36,"k"],[32,31,35,37],[32,33,35,39,"object"],[32,39,35,45],[32,40,35,46],[33,8,36,12],[33,9,36,13],[33,15,36,19],[34,10,37,16,"iterator"],[34,18,37,24],[34,19,37,25,"call"],[34,23,37,29],[34,24,37,30,"receiver"],[34,32,37,38],[34,34,37,40,"object"],[34,40,37,46],[34,41,37,47,"k"],[34,42,37,48],[34,43,37,49],[34,45,37,51,"k"],[34,46,37,52],[34,48,37,54,"object"],[34,54,37,60],[34,55,37,61],[35,8,38,12],[36,6,39,8],[37,4,40,4],[38,2,41,0],[38,3,41,1],[39,2,43,0],[39,6,43,4,"forEach"],[39,13,43,11],[39,16,43,14],[39,25,43,23,"forEach"],[39,32,43,30,"forEach"],[39,33,43,31,"list"],[39,37,43,35],[39,39,43,37,"iterator"],[39,47,43,45],[39,49,43,47,"thisArg"],[39,56,43,54],[39,58,43,56],[40,4,44,4],[40,8,44,8],[40,9,44,9,"isCallable"],[40,19,44,19],[40,20,44,20,"iterator"],[40,28,44,28],[40,29,44,29],[40,31,44,31],[41,6,45,8],[41,12,45,14],[41,16,45,18,"TypeError"],[41,25,45,27],[41,26,45,28],[41,55,45,57],[41,56,45,58],[42,4,46,4],[43,4,48,4],[43,8,48,8,"receiver"],[43,16,48,16],[44,4,49,4],[44,8,49,8,"arguments"],[44,17,49,17],[44,18,49,18,"length"],[44,24,49,24],[44,28,49,28],[44,29,49,29],[44,31,49,31],[45,6,50,8,"receiver"],[45,14,50,16],[45,17,50,19,"thisArg"],[45,24,50,26],[46,4,51,4],[47,4,53,4],[47,8,53,8,"toStr"],[47,13,53,13],[47,14,53,14,"call"],[47,18,53,18],[47,19,53,19,"list"],[47,23,53,23],[47,24,53,24],[47,29,53,29],[47,45,53,45],[47,47,53,47],[48,6,54,8,"forEachArray"],[48,18,54,20],[48,19,54,21,"list"],[48,23,54,25],[48,25,54,27,"iterator"],[48,33,54,35],[48,35,54,37,"receiver"],[48,43,54,45],[48,44,54,46],[49,4,55,4],[49,5,55,5],[49,11,55,11],[49,15,55,15],[49,22,55,22,"list"],[49,26,55,26],[49,31,55,31],[49,39,55,39],[49,41,55,41],[50,6,56,8,"forEachString"],[50,19,56,21],[50,20,56,22,"list"],[50,24,56,26],[50,26,56,28,"iterator"],[50,34,56,36],[50,36,56,38,"receiver"],[50,44,56,46],[50,45,56,47],[51,4,57,4],[51,5,57,5],[51,11,57,11],[52,6,58,8,"forEachObject"],[52,19,58,21],[52,20,58,22,"list"],[52,24,58,26],[52,26,58,28,"iterator"],[52,34,58,36],[52,36,58,38,"receiver"],[52,44,58,46],[52,45,58,47],[53,4,59,4],[54,2,60,0],[54,3,60,1],[55,2,62,0,"module"],[55,8,62,6],[55,9,62,7,"exports"],[55,16,62,14],[55,19,62,17,"forEach"],[55,26,62,24],[56,0,62,25],[56,3]],"functionMap":{"names":["<global>","forEachArray","forEachString","forEachObject","forEach"],"mappings":"AAA;mBCO;CDU;oBEE;CFS;oBGE;CHU;cIE;CJiB"}},"type":"js/module"}]}