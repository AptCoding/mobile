{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.TokenTypeHint = exports.GrantType = void 0;\n  // @needsAudit\n  /**\n   * A hint about the type of the token submitted for revocation. If not included then the server should attempt to deduce the token type.\n   *\n   * @see [Section 2.1](https://tools.ietf.org/html/rfc7009#section-2.1)\n   */\n  var TokenTypeHint;\n  (function (TokenTypeHint) {\n    /**\n     * Access token.\n     *\n     * [Section 1.4](https://tools.ietf.org/html/rfc6749#section-1.4)\n     */\n    TokenTypeHint[\"AccessToken\"] = \"access_token\";\n    /**\n     * Refresh token.\n     *\n     * [Section 1.5](https://tools.ietf.org/html/rfc6749#section-1.5)\n     */\n    TokenTypeHint[\"RefreshToken\"] = \"refresh_token\";\n  })(TokenTypeHint || (exports.TokenTypeHint = TokenTypeHint = {}));\n  // @needsAudit\n  /**\n   * Grant type values used in dynamic client registration and auth requests.\n   *\n   * @see [Appendix A.10](https://tools.ietf.org/html/rfc6749#appendix-A.10)\n   */\n  var GrantType;\n  (function (GrantType) {\n    /**\n     * Used for exchanging an authorization code for one or more tokens.\n     *\n     * [Section 4.1.3](https://tools.ietf.org/html/rfc6749#section-4.1.3)\n     */\n    GrantType[\"AuthorizationCode\"] = \"authorization_code\";\n    /**\n     * Used when obtaining an access token.\n     *\n     * [Section 4.2](https://tools.ietf.org/html/rfc6749#section-4.2)\n     */\n    GrantType[\"Implicit\"] = \"implicit\";\n    /**\n     * Used when exchanging a refresh token for a new token.\n     *\n     * [Section 6](https://tools.ietf.org/html/rfc6749#section-6)\n     */\n    GrantType[\"RefreshToken\"] = \"refresh_token\";\n    /**\n     * Used for client credentials flow.\n     *\n     * [Section 4.4.2](https://tools.ietf.org/html/rfc6749#section-4.4.2)\n     */\n    GrantType[\"ClientCredentials\"] = \"client_credentials\";\n  })(GrantType || (exports.GrantType = GrantType = {}));\n});","lineCount":60,"map":[[6,2,1,0],[7,2,2,0],[8,0,3,0],[9,0,4,0],[10,0,5,0],[11,0,6,0],[12,2,7,7],[12,6,7,11,"TokenTypeHint"],[12,19,7,24],[13,2,8,0],[13,3,8,1],[13,13,8,11,"TokenTypeHint"],[13,26,8,24],[13,28,8,26],[14,4,9,4],[15,0,10,0],[16,0,11,0],[17,0,12,0],[18,0,13,0],[19,4,14,4,"TokenTypeHint"],[19,17,14,17],[19,18,14,18],[19,31,14,31],[19,32,14,32],[19,35,14,35],[19,49,14,49],[20,4,15,4],[21,0,16,0],[22,0,17,0],[23,0,18,0],[24,0,19,0],[25,4,20,4,"TokenTypeHint"],[25,17,20,17],[25,18,20,18],[25,32,20,32],[25,33,20,33],[25,36,20,36],[25,51,20,51],[26,2,21,0],[26,3,21,1],[26,5,21,3,"TokenTypeHint"],[26,18,21,16],[26,23,21,16,"exports"],[26,30,21,16],[26,31,21,16,"TokenTypeHint"],[26,44,21,16],[26,47,21,21,"TokenTypeHint"],[26,60,21,34],[26,63,21,37],[26,64,21,38],[26,65,21,39],[26,66,21,40],[26,67,21,41],[27,2,22,0],[28,2,23,0],[29,0,24,0],[30,0,25,0],[31,0,26,0],[32,0,27,0],[33,2,28,7],[33,6,28,11,"GrantType"],[33,15,28,20],[34,2,29,0],[34,3,29,1],[34,13,29,11,"GrantType"],[34,22,29,20],[34,24,29,22],[35,4,30,4],[36,0,31,0],[37,0,32,0],[38,0,33,0],[39,0,34,0],[40,4,35,4,"GrantType"],[40,13,35,13],[40,14,35,14],[40,33,35,33],[40,34,35,34],[40,37,35,37],[40,57,35,57],[41,4,36,4],[42,0,37,0],[43,0,38,0],[44,0,39,0],[45,0,40,0],[46,4,41,4,"GrantType"],[46,13,41,13],[46,14,41,14],[46,24,41,24],[46,25,41,25],[46,28,41,28],[46,38,41,38],[47,4,42,4],[48,0,43,0],[49,0,44,0],[50,0,45,0],[51,0,46,0],[52,4,47,4,"GrantType"],[52,13,47,13],[52,14,47,14],[52,28,47,28],[52,29,47,29],[52,32,47,32],[52,47,47,47],[53,4,48,4],[54,0,49,0],[55,0,50,0],[56,0,51,0],[57,0,52,0],[58,4,53,4,"GrantType"],[58,13,53,13],[58,14,53,14],[58,33,53,33],[58,34,53,34],[58,37,53,37],[58,57,53,57],[59,2,54,0],[59,3,54,1],[59,5,54,3,"GrantType"],[59,14,54,12],[59,19,54,12,"exports"],[59,26,54,12],[59,27,54,12,"GrantType"],[59,36,54,12],[59,39,54,17,"GrantType"],[59,48,54,26],[59,51,54,29],[59,52,54,30],[59,53,54,31],[59,54,54,32],[59,55,54,33],[60,0,54,34],[60,3]],"functionMap":{"names":["<global>","<anonymous>"],"mappings":"AAA;CCO;CDa;CCQ;CDyB"}},"type":"js/module"}]}